// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: message.proto

package com.slark.pengder.protocol;

public final class MessageProtos {
  private MessageProtos() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }
  /**
   * Protobuf enum {@code biotech.osla.MessageType}
   *
   * <pre>
   * 消息类型编码
   * </pre>
   */
  public enum MessageType
      implements com.google.protobuf.Internal.EnumLite {
    /**
     * <code>HEARTBEAT = 1;</code>
     */
    HEARTBEAT(0, 1),
    /**
     * <code>COMMAND = 2;</code>
     */
    COMMAND(1, 2),
    /**
     * <code>INSTRUMENT = 3;</code>
     */
    INSTRUMENT(2, 3),
    /**
     * <code>INSTRUMENTLIST = 4;</code>
     */
    INSTRUMENTLIST(3, 4),
    /**
     * <code>INSTRUMENTBINDING = 5;</code>
     */
    INSTRUMENTBINDING(4, 5),
    /**
     * <code>INSTRUMENTDETAIL = 6;</code>
     */
    INSTRUMENTDETAIL(5, 6),
    /**
     * <code>RESERVATION = 7;</code>
     */
    RESERVATION(6, 7),
    /**
     * <code>RESERVATIONLIST = 8;</code>
     */
    RESERVATIONLIST(7, 8),
    /**
     * <code>USER = 9;</code>
     */
    USER(8, 9),
    /**
     * <code>USERLIST = 10;</code>
     */
    USERLIST(9, 10),
    /**
     * <code>ACCOUNT = 11;</code>
     */
    ACCOUNT(10, 11),
    /**
     * <code>ACCOUNTLIST = 12;</code>
     */
    ACCOUNTLIST(11, 12),
    /**
     * <code>USERRIGHT = 13;</code>
     */
    USERRIGHT(12, 13),
    /**
     * <code>USERRIGHTLIST = 14;</code>
     */
    USERRIGHTLIST(13, 14),
    /**
     * <code>TEMPCARDBINDING = 15;</code>
     */
    TEMPCARDBINDING(14, 15),
    /**
     * <code>TEMPCARDBINDINGLIST = 16;</code>
     */
    TEMPCARDBINDINGLIST(15, 16),
    /**
     * <code>BOOKING = 17;</code>
     */
    BOOKING(16, 17),
    /**
     * <code>BOOKINGLIST = 18;</code>
     */
    BOOKINGLIST(17, 18),
    /**
     * <code>SESSION = 19;</code>
     */
    SESSION(18, 19),
    /**
     * <code>SESSIONLIST = 20;</code>
     */
    SESSIONLIST(19, 20),
    /**
     * <code>USERINTRAINING = 21;</code>
     */
    USERINTRAINING(20, 21),
    /**
     * <code>USERINTRAININGLIST = 22;</code>
     */
    USERINTRAININGLIST(21, 22),
    /**
     * <code>USEREVENT = 23;</code>
     */
    USEREVENT(22, 23),
    /**
     * <code>USEREVENTLIST = 24;</code>
     */
    USEREVENTLIST(23, 24),
    /**
     * <code>SYSTEMEVENT = 25;</code>
     */
    SYSTEMEVENT(24, 25),
    /**
     * <code>SYSTEMEVENTLIST = 26;</code>
     */
    SYSTEMEVENTLIST(25, 26),
    /**
     * <code>CALENDAR = 27;</code>
     */
    CALENDAR(26, 27),
    /**
     * <code>CALENDARLIST = 28;</code>
     */
    CALENDARLIST(27, 28),
    /**
     * <code>GLOBALCONFIG = 29;</code>
     */
    GLOBALCONFIG(28, 29),
    /**
     * <code>FTPEVENT = 30;</code>
     */
    FTPEVENT(29, 30),
    /**
     * <code>FTPEVENTLIST = 31;</code>
     */
    FTPEVENTLIST(30, 31),
    /**
     * <code>SESSION_OPERATION_REQ_CMD = 33;</code>
     */
    SESSION_OPERATION_REQ_CMD(31, 33),
    /**
     * <code>SESSION_OPERATION_REP_CMD = 34;</code>
     */
    SESSION_OPERATION_REP_CMD(32, 34),
    /**
     * <code>INIT_PHASE = 35;</code>
     */
    INIT_PHASE(33, 35),
    /**
     * <code>DEVICE_CAPTURE_EVENT = 36;</code>
     */
    DEVICE_CAPTURE_EVENT(34, 36),
    /**
     * <code>DEVICE_CAPTURE_EVENT_LIST = 37;</code>
     */
    DEVICE_CAPTURE_EVENT_LIST(35, 37),
    /**
     * <code>ENTRUST = 38;</code>
     */
    ENTRUST(36, 38),
    /**
     * <code>ENTRUST_LIST = 39;</code>
     */
    ENTRUST_LIST(37, 39),
    /**
     * <code>ENTRUST_EVENT = 40;</code>
     */
    ENTRUST_EVENT(38, 40),
    /**
     * <code>ENTRUST_EVENT_LIST = 41;</code>
     */
    ENTRUST_EVENT_LIST(39, 41),
    /**
     * <code>UPGRADE_PARAMS = 42;</code>
     *
     * <pre>
     *远程升级用
     * </pre>
     */
    UPGRADE_PARAMS(40, 42),
    /**
     * <code>UPGRADE_PLAN = 43;</code>
     */
    UPGRADE_PLAN(41, 43),
    /**
     * <code>TINSQUACFG_DATA = 44;</code>
     *
     * <pre>
     *用户资格权限
     * </pre>
     */
    TINSQUACFG_DATA(42, 44),
    ;

    /**
     * <code>HEARTBEAT = 1;</code>
     */
    public static final int HEARTBEAT_VALUE = 1;
    /**
     * <code>COMMAND = 2;</code>
     */
    public static final int COMMAND_VALUE = 2;
    /**
     * <code>INSTRUMENT = 3;</code>
     */
    public static final int INSTRUMENT_VALUE = 3;
    /**
     * <code>INSTRUMENTLIST = 4;</code>
     */
    public static final int INSTRUMENTLIST_VALUE = 4;
    /**
     * <code>INSTRUMENTBINDING = 5;</code>
     */
    public static final int INSTRUMENTBINDING_VALUE = 5;
    /**
     * <code>INSTRUMENTDETAIL = 6;</code>
     */
    public static final int INSTRUMENTDETAIL_VALUE = 6;
    /**
     * <code>RESERVATION = 7;</code>
     */
    public static final int RESERVATION_VALUE = 7;
    /**
     * <code>RESERVATIONLIST = 8;</code>
     */
    public static final int RESERVATIONLIST_VALUE = 8;
    /**
     * <code>USER = 9;</code>
     */
    public static final int USER_VALUE = 9;
    /**
     * <code>USERLIST = 10;</code>
     */
    public static final int USERLIST_VALUE = 10;
    /**
     * <code>ACCOUNT = 11;</code>
     */
    public static final int ACCOUNT_VALUE = 11;
    /**
     * <code>ACCOUNTLIST = 12;</code>
     */
    public static final int ACCOUNTLIST_VALUE = 12;
    /**
     * <code>USERRIGHT = 13;</code>
     */
    public static final int USERRIGHT_VALUE = 13;
    /**
     * <code>USERRIGHTLIST = 14;</code>
     */
    public static final int USERRIGHTLIST_VALUE = 14;
    /**
     * <code>TEMPCARDBINDING = 15;</code>
     */
    public static final int TEMPCARDBINDING_VALUE = 15;
    /**
     * <code>TEMPCARDBINDINGLIST = 16;</code>
     */
    public static final int TEMPCARDBINDINGLIST_VALUE = 16;
    /**
     * <code>BOOKING = 17;</code>
     */
    public static final int BOOKING_VALUE = 17;
    /**
     * <code>BOOKINGLIST = 18;</code>
     */
    public static final int BOOKINGLIST_VALUE = 18;
    /**
     * <code>SESSION = 19;</code>
     */
    public static final int SESSION_VALUE = 19;
    /**
     * <code>SESSIONLIST = 20;</code>
     */
    public static final int SESSIONLIST_VALUE = 20;
    /**
     * <code>USERINTRAINING = 21;</code>
     */
    public static final int USERINTRAINING_VALUE = 21;
    /**
     * <code>USERINTRAININGLIST = 22;</code>
     */
    public static final int USERINTRAININGLIST_VALUE = 22;
    /**
     * <code>USEREVENT = 23;</code>
     */
    public static final int USEREVENT_VALUE = 23;
    /**
     * <code>USEREVENTLIST = 24;</code>
     */
    public static final int USEREVENTLIST_VALUE = 24;
    /**
     * <code>SYSTEMEVENT = 25;</code>
     */
    public static final int SYSTEMEVENT_VALUE = 25;
    /**
     * <code>SYSTEMEVENTLIST = 26;</code>
     */
    public static final int SYSTEMEVENTLIST_VALUE = 26;
    /**
     * <code>CALENDAR = 27;</code>
     */
    public static final int CALENDAR_VALUE = 27;
    /**
     * <code>CALENDARLIST = 28;</code>
     */
    public static final int CALENDARLIST_VALUE = 28;
    /**
     * <code>GLOBALCONFIG = 29;</code>
     */
    public static final int GLOBALCONFIG_VALUE = 29;
    /**
     * <code>FTPEVENT = 30;</code>
     */
    public static final int FTPEVENT_VALUE = 30;
    /**
     * <code>FTPEVENTLIST = 31;</code>
     */
    public static final int FTPEVENTLIST_VALUE = 31;
    /**
     * <code>SESSION_OPERATION_REQ_CMD = 33;</code>
     */
    public static final int SESSION_OPERATION_REQ_CMD_VALUE = 33;
    /**
     * <code>SESSION_OPERATION_REP_CMD = 34;</code>
     */
    public static final int SESSION_OPERATION_REP_CMD_VALUE = 34;
    /**
     * <code>INIT_PHASE = 35;</code>
     */
    public static final int INIT_PHASE_VALUE = 35;
    /**
     * <code>DEVICE_CAPTURE_EVENT = 36;</code>
     */
    public static final int DEVICE_CAPTURE_EVENT_VALUE = 36;
    /**
     * <code>DEVICE_CAPTURE_EVENT_LIST = 37;</code>
     */
    public static final int DEVICE_CAPTURE_EVENT_LIST_VALUE = 37;
    /**
     * <code>ENTRUST = 38;</code>
     */
    public static final int ENTRUST_VALUE = 38;
    /**
     * <code>ENTRUST_LIST = 39;</code>
     */
    public static final int ENTRUST_LIST_VALUE = 39;
    /**
     * <code>ENTRUST_EVENT = 40;</code>
     */
    public static final int ENTRUST_EVENT_VALUE = 40;
    /**
     * <code>ENTRUST_EVENT_LIST = 41;</code>
     */
    public static final int ENTRUST_EVENT_LIST_VALUE = 41;
    /**
     * <code>UPGRADE_PARAMS = 42;</code>
     *
     * <pre>
     *远程升级用
     * </pre>
     */
    public static final int UPGRADE_PARAMS_VALUE = 42;
    /**
     * <code>UPGRADE_PLAN = 43;</code>
     */
    public static final int UPGRADE_PLAN_VALUE = 43;
    /**
     * <code>TINSQUACFG_DATA = 44;</code>
     *
     * <pre>
     *用户资格权限
     * </pre>
     */
    public static final int TINSQUACFG_DATA_VALUE = 44;


    public final int getNumber() { return value; }

    public static MessageType valueOf(int value) {
      switch (value) {
        case 1: return HEARTBEAT;
        case 2: return COMMAND;
        case 3: return INSTRUMENT;
        case 4: return INSTRUMENTLIST;
        case 5: return INSTRUMENTBINDING;
        case 6: return INSTRUMENTDETAIL;
        case 7: return RESERVATION;
        case 8: return RESERVATIONLIST;
        case 9: return USER;
        case 10: return USERLIST;
        case 11: return ACCOUNT;
        case 12: return ACCOUNTLIST;
        case 13: return USERRIGHT;
        case 14: return USERRIGHTLIST;
        case 15: return TEMPCARDBINDING;
        case 16: return TEMPCARDBINDINGLIST;
        case 17: return BOOKING;
        case 18: return BOOKINGLIST;
        case 19: return SESSION;
        case 20: return SESSIONLIST;
        case 21: return USERINTRAINING;
        case 22: return USERINTRAININGLIST;
        case 23: return USEREVENT;
        case 24: return USEREVENTLIST;
        case 25: return SYSTEMEVENT;
        case 26: return SYSTEMEVENTLIST;
        case 27: return CALENDAR;
        case 28: return CALENDARLIST;
        case 29: return GLOBALCONFIG;
        case 30: return FTPEVENT;
        case 31: return FTPEVENTLIST;
        case 33: return SESSION_OPERATION_REQ_CMD;
        case 34: return SESSION_OPERATION_REP_CMD;
        case 35: return INIT_PHASE;
        case 36: return DEVICE_CAPTURE_EVENT;
        case 37: return DEVICE_CAPTURE_EVENT_LIST;
        case 38: return ENTRUST;
        case 39: return ENTRUST_LIST;
        case 40: return ENTRUST_EVENT;
        case 41: return ENTRUST_EVENT_LIST;
        case 42: return UPGRADE_PARAMS;
        case 43: return UPGRADE_PLAN;
        case 44: return TINSQUACFG_DATA;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<MessageType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<MessageType>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<MessageType>() {
            public MessageType findValueByNumber(int number) {
              return MessageType.valueOf(number);
            }
          };

    private final int value;

    private MessageType(int index, int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:biotech.osla.MessageType)
  }

  /**
   * Protobuf enum {@code biotech.osla.FTP_FILE_UPLOAD_STATUS}
   *
   * <pre>
   * 文件上传ftp状态
   * </pre>
   */
  public enum FTP_FILE_UPLOAD_STATUS
      implements com.google.protobuf.Internal.EnumLite {
    /**
     * <code>FTP_FILE_UPLOAD_SUCCESS = 0;</code>
     *
     * <pre>
     * 上次文件成功
     * </pre>
     */
    FTP_FILE_UPLOAD_SUCCESS(0, 0),
    /**
     * <code>FTP_FILE_UPLOAD_FAIL = 1;</code>
     *
     * <pre>
     * 上传文件失败
     * </pre>
     */
    FTP_FILE_UPLOAD_FAIL(1, 1),
    ;

    /**
     * <code>FTP_FILE_UPLOAD_SUCCESS = 0;</code>
     *
     * <pre>
     * 上次文件成功
     * </pre>
     */
    public static final int FTP_FILE_UPLOAD_SUCCESS_VALUE = 0;
    /**
     * <code>FTP_FILE_UPLOAD_FAIL = 1;</code>
     *
     * <pre>
     * 上传文件失败
     * </pre>
     */
    public static final int FTP_FILE_UPLOAD_FAIL_VALUE = 1;


    public final int getNumber() { return value; }

    public static FTP_FILE_UPLOAD_STATUS valueOf(int value) {
      switch (value) {
        case 0: return FTP_FILE_UPLOAD_SUCCESS;
        case 1: return FTP_FILE_UPLOAD_FAIL;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<FTP_FILE_UPLOAD_STATUS>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<FTP_FILE_UPLOAD_STATUS>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<FTP_FILE_UPLOAD_STATUS>() {
            public FTP_FILE_UPLOAD_STATUS findValueByNumber(int number) {
              return FTP_FILE_UPLOAD_STATUS.valueOf(number);
            }
          };

    private final int value;

    private FTP_FILE_UPLOAD_STATUS(int index, int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:biotech.osla.FTP_FILE_UPLOAD_STATUS)
  }

  public interface TinsQuaListOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {

    // repeated .biotech.osla.TinsQuaConfig tinsQuas = 1;
    /**
     * <code>repeated .biotech.osla.TinsQuaConfig tinsQuas = 1;</code>
     */
    java.util.List<com.slark.pengder.protocol.MessageProtos.TinsQuaConfig> 
        getTinsQuasList();
    /**
     * <code>repeated .biotech.osla.TinsQuaConfig tinsQuas = 1;</code>
     */
    com.slark.pengder.protocol.MessageProtos.TinsQuaConfig getTinsQuas(int index);
    /**
     * <code>repeated .biotech.osla.TinsQuaConfig tinsQuas = 1;</code>
     */
    int getTinsQuasCount();
  }
  /**
   * Protobuf type {@code biotech.osla.TinsQuaList}
   *
   * <pre>
   * 用户列表
   * </pre>
   */
  public static final class TinsQuaList extends
      com.google.protobuf.GeneratedMessageLite
      implements TinsQuaListOrBuilder {
    // Use TinsQuaList.newBuilder() to construct.
    private TinsQuaList(com.google.protobuf.GeneratedMessageLite.Builder builder) {
      super(builder);

    }
    private TinsQuaList(boolean noInit) {}

    private static final TinsQuaList defaultInstance;
    public static TinsQuaList getDefaultInstance() {
      return defaultInstance;
    }

    public TinsQuaList getDefaultInstanceForType() {
      return defaultInstance;
    }

    private TinsQuaList(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                tinsQuas_ = new java.util.ArrayList<com.slark.pengder.protocol.MessageProtos.TinsQuaConfig>();
                mutable_bitField0_ |= 0x00000001;
              }
              tinsQuas_.add(input.readMessage(com.slark.pengder.protocol.MessageProtos.TinsQuaConfig.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          tinsQuas_ = java.util.Collections.unmodifiableList(tinsQuas_);
        }
        makeExtensionsImmutable();
      }
    }
    public static com.google.protobuf.Parser<TinsQuaList> PARSER =
        new com.google.protobuf.AbstractParser<TinsQuaList>() {
      public TinsQuaList parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new TinsQuaList(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<TinsQuaList> getParserForType() {
      return PARSER;
    }

    // repeated .biotech.osla.TinsQuaConfig tinsQuas = 1;
    public static final int TINSQUAS_FIELD_NUMBER = 1;
    private java.util.List<com.slark.pengder.protocol.MessageProtos.TinsQuaConfig> tinsQuas_;
    /**
     * <code>repeated .biotech.osla.TinsQuaConfig tinsQuas = 1;</code>
     */
    public java.util.List<com.slark.pengder.protocol.MessageProtos.TinsQuaConfig> getTinsQuasList() {
      return tinsQuas_;
    }
    /**
     * <code>repeated .biotech.osla.TinsQuaConfig tinsQuas = 1;</code>
     */
    public java.util.List<? extends com.slark.pengder.protocol.MessageProtos.TinsQuaConfigOrBuilder> 
        getTinsQuasOrBuilderList() {
      return tinsQuas_;
    }
    /**
     * <code>repeated .biotech.osla.TinsQuaConfig tinsQuas = 1;</code>
     */
    public int getTinsQuasCount() {
      return tinsQuas_.size();
    }
    /**
     * <code>repeated .biotech.osla.TinsQuaConfig tinsQuas = 1;</code>
     */
    public com.slark.pengder.protocol.MessageProtos.TinsQuaConfig getTinsQuas(int index) {
      return tinsQuas_.get(index);
    }
    /**
     * <code>repeated .biotech.osla.TinsQuaConfig tinsQuas = 1;</code>
     */
    public com.slark.pengder.protocol.MessageProtos.TinsQuaConfigOrBuilder getTinsQuasOrBuilder(
        int index) {
      return tinsQuas_.get(index);
    }

    private void initFields() {
      tinsQuas_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      for (int i = 0; i < getTinsQuasCount(); i++) {
        if (!getTinsQuas(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < tinsQuas_.size(); i++) {
        output.writeMessage(1, tinsQuas_.get(i));
      }
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < tinsQuas_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, tinsQuas_.get(i));
      }
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.slark.pengder.protocol.MessageProtos.TinsQuaList parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.slark.pengder.protocol.MessageProtos.TinsQuaList parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.slark.pengder.protocol.MessageProtos.TinsQuaList parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.slark.pengder.protocol.MessageProtos.TinsQuaList parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.slark.pengder.protocol.MessageProtos.TinsQuaList parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.slark.pengder.protocol.MessageProtos.TinsQuaList parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.slark.pengder.protocol.MessageProtos.TinsQuaList parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.slark.pengder.protocol.MessageProtos.TinsQuaList parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.slark.pengder.protocol.MessageProtos.TinsQuaList parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.slark.pengder.protocol.MessageProtos.TinsQuaList parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.slark.pengder.protocol.MessageProtos.TinsQuaList prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    /**
     * Protobuf type {@code biotech.osla.TinsQuaList}
     *
     * <pre>
     * 用户列表
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.slark.pengder.protocol.MessageProtos.TinsQuaList, Builder>
        implements com.slark.pengder.protocol.MessageProtos.TinsQuaListOrBuilder {
      // Construct using com.slark.pengder.protocol.MessageProtos.TinsQuaList.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        tinsQuas_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.slark.pengder.protocol.MessageProtos.TinsQuaList getDefaultInstanceForType() {
        return com.slark.pengder.protocol.MessageProtos.TinsQuaList.getDefaultInstance();
      }

      public com.slark.pengder.protocol.MessageProtos.TinsQuaList build() {
        com.slark.pengder.protocol.MessageProtos.TinsQuaList result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.slark.pengder.protocol.MessageProtos.TinsQuaList buildPartial() {
        com.slark.pengder.protocol.MessageProtos.TinsQuaList result = new com.slark.pengder.protocol.MessageProtos.TinsQuaList(this);
        int from_bitField0_ = bitField0_;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          tinsQuas_ = java.util.Collections.unmodifiableList(tinsQuas_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.tinsQuas_ = tinsQuas_;
        return result;
      }

      public Builder mergeFrom(com.slark.pengder.protocol.MessageProtos.TinsQuaList other) {
        if (other == com.slark.pengder.protocol.MessageProtos.TinsQuaList.getDefaultInstance()) return this;
        if (!other.tinsQuas_.isEmpty()) {
          if (tinsQuas_.isEmpty()) {
            tinsQuas_ = other.tinsQuas_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureTinsQuasIsMutable();
            tinsQuas_.addAll(other.tinsQuas_);
          }
          
        }
        return this;
      }

      public final boolean isInitialized() {
        for (int i = 0; i < getTinsQuasCount(); i++) {
          if (!getTinsQuas(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.slark.pengder.protocol.MessageProtos.TinsQuaList parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.slark.pengder.protocol.MessageProtos.TinsQuaList) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // repeated .biotech.osla.TinsQuaConfig tinsQuas = 1;
      private java.util.List<com.slark.pengder.protocol.MessageProtos.TinsQuaConfig> tinsQuas_ =
        java.util.Collections.emptyList();
      private void ensureTinsQuasIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          tinsQuas_ = new java.util.ArrayList<com.slark.pengder.protocol.MessageProtos.TinsQuaConfig>(tinsQuas_);
          bitField0_ |= 0x00000001;
         }
      }

      /**
       * <code>repeated .biotech.osla.TinsQuaConfig tinsQuas = 1;</code>
       */
      public java.util.List<com.slark.pengder.protocol.MessageProtos.TinsQuaConfig> getTinsQuasList() {
        return java.util.Collections.unmodifiableList(tinsQuas_);
      }
      /**
       * <code>repeated .biotech.osla.TinsQuaConfig tinsQuas = 1;</code>
       */
      public int getTinsQuasCount() {
        return tinsQuas_.size();
      }
      /**
       * <code>repeated .biotech.osla.TinsQuaConfig tinsQuas = 1;</code>
       */
      public com.slark.pengder.protocol.MessageProtos.TinsQuaConfig getTinsQuas(int index) {
        return tinsQuas_.get(index);
      }
      /**
       * <code>repeated .biotech.osla.TinsQuaConfig tinsQuas = 1;</code>
       */
      public Builder setTinsQuas(
          int index, com.slark.pengder.protocol.MessageProtos.TinsQuaConfig value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureTinsQuasIsMutable();
        tinsQuas_.set(index, value);

        return this;
      }
      /**
       * <code>repeated .biotech.osla.TinsQuaConfig tinsQuas = 1;</code>
       */
      public Builder setTinsQuas(
          int index, com.slark.pengder.protocol.MessageProtos.TinsQuaConfig.Builder builderForValue) {
        ensureTinsQuasIsMutable();
        tinsQuas_.set(index, builderForValue.build());

        return this;
      }
      /**
       * <code>repeated .biotech.osla.TinsQuaConfig tinsQuas = 1;</code>
       */
      public Builder addTinsQuas(com.slark.pengder.protocol.MessageProtos.TinsQuaConfig value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureTinsQuasIsMutable();
        tinsQuas_.add(value);

        return this;
      }
      /**
       * <code>repeated .biotech.osla.TinsQuaConfig tinsQuas = 1;</code>
       */
      public Builder addTinsQuas(
          int index, com.slark.pengder.protocol.MessageProtos.TinsQuaConfig value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureTinsQuasIsMutable();
        tinsQuas_.add(index, value);

        return this;
      }
      /**
       * <code>repeated .biotech.osla.TinsQuaConfig tinsQuas = 1;</code>
       */
      public Builder addTinsQuas(
          com.slark.pengder.protocol.MessageProtos.TinsQuaConfig.Builder builderForValue) {
        ensureTinsQuasIsMutable();
        tinsQuas_.add(builderForValue.build());

        return this;
      }
      /**
       * <code>repeated .biotech.osla.TinsQuaConfig tinsQuas = 1;</code>
       */
      public Builder addTinsQuas(
          int index, com.slark.pengder.protocol.MessageProtos.TinsQuaConfig.Builder builderForValue) {
        ensureTinsQuasIsMutable();
        tinsQuas_.add(index, builderForValue.build());

        return this;
      }
      /**
       * <code>repeated .biotech.osla.TinsQuaConfig tinsQuas = 1;</code>
       */
      public Builder addAllTinsQuas(
          java.lang.Iterable<? extends com.slark.pengder.protocol.MessageProtos.TinsQuaConfig> values) {
        ensureTinsQuasIsMutable();
        super.addAll(values, tinsQuas_);

        return this;
      }
      /**
       * <code>repeated .biotech.osla.TinsQuaConfig tinsQuas = 1;</code>
       */
      public Builder clearTinsQuas() {
        tinsQuas_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);

        return this;
      }
      /**
       * <code>repeated .biotech.osla.TinsQuaConfig tinsQuas = 1;</code>
       */
      public Builder removeTinsQuas(int index) {
        ensureTinsQuasIsMutable();
        tinsQuas_.remove(index);

        return this;
      }

      // @@protoc_insertion_point(builder_scope:biotech.osla.TinsQuaList)
    }

    static {
      defaultInstance = new TinsQuaList(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:biotech.osla.TinsQuaList)
  }

  public interface TinsQuaConfigOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {

    // required int32 id = 1;
    /**
     * <code>required int32 id = 1;</code>
     */
    boolean hasId();
    /**
     * <code>required int32 id = 1;</code>
     */
    int getId();

    // required bool type = 2;
    /**
     * <code>required bool type = 2;</code>
     */
    boolean hasType();
    /**
     * <code>required bool type = 2;</code>
     */
    boolean getType();

    // optional string orgNum = 3;
    /**
     * <code>optional string orgNum = 3;</code>
     */
    boolean hasOrgNum();
    /**
     * <code>optional string orgNum = 3;</code>
     */
    java.lang.String getOrgNum();
    /**
     * <code>optional string orgNum = 3;</code>
     */
    com.google.protobuf.ByteString
        getOrgNumBytes();

    // required int32 instrumentId = 4;
    /**
     * <code>required int32 instrumentId = 4;</code>
     */
    boolean hasInstrumentId();
    /**
     * <code>required int32 instrumentId = 4;</code>
     */
    int getInstrumentId();

    // required int32 quaId = 5;
    /**
     * <code>required int32 quaId = 5;</code>
     */
    boolean hasQuaId();
    /**
     * <code>required int32 quaId = 5;</code>
     */
    int getQuaId();

    // required bool workTime = 6;
    /**
     * <code>required bool workTime = 6;</code>
     */
    boolean hasWorkTime();
    /**
     * <code>required bool workTime = 6;</code>
     */
    boolean getWorkTime();

    // required int32 status = 7;
    /**
     * <code>required int32 status = 7;</code>
     */
    boolean hasStatus();
    /**
     * <code>required int32 status = 7;</code>
     */
    int getStatus();
  }
  /**
   * Protobuf type {@code biotech.osla.TinsQuaConfig}
   *
   * <pre>
   *用户资格权限
   * </pre>
   */
  public static final class TinsQuaConfig extends
      com.google.protobuf.GeneratedMessageLite
      implements TinsQuaConfigOrBuilder {
    // Use TinsQuaConfig.newBuilder() to construct.
    private TinsQuaConfig(com.google.protobuf.GeneratedMessageLite.Builder builder) {
      super(builder);

    }
    private TinsQuaConfig(boolean noInit) {}

    private static final TinsQuaConfig defaultInstance;
    public static TinsQuaConfig getDefaultInstance() {
      return defaultInstance;
    }

    public TinsQuaConfig getDefaultInstanceForType() {
      return defaultInstance;
    }

    private TinsQuaConfig(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              id_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              type_ = input.readBool();
              break;
            }
            case 26: {
              bitField0_ |= 0x00000004;
              orgNum_ = input.readBytes();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              instrumentId_ = input.readInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              quaId_ = input.readInt32();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              workTime_ = input.readBool();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000040;
              status_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static com.google.protobuf.Parser<TinsQuaConfig> PARSER =
        new com.google.protobuf.AbstractParser<TinsQuaConfig>() {
      public TinsQuaConfig parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new TinsQuaConfig(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<TinsQuaConfig> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required int32 id = 1;
    public static final int ID_FIELD_NUMBER = 1;
    private int id_;
    /**
     * <code>required int32 id = 1;</code>
     */
    public boolean hasId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int32 id = 1;</code>
     */
    public int getId() {
      return id_;
    }

    // required bool type = 2;
    public static final int TYPE_FIELD_NUMBER = 2;
    private boolean type_;
    /**
     * <code>required bool type = 2;</code>
     */
    public boolean hasType() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required bool type = 2;</code>
     */
    public boolean getType() {
      return type_;
    }

    // optional string orgNum = 3;
    public static final int ORGNUM_FIELD_NUMBER = 3;
    private java.lang.Object orgNum_;
    /**
     * <code>optional string orgNum = 3;</code>
     */
    public boolean hasOrgNum() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional string orgNum = 3;</code>
     */
    public java.lang.String getOrgNum() {
      java.lang.Object ref = orgNum_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          orgNum_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string orgNum = 3;</code>
     */
    public com.google.protobuf.ByteString
        getOrgNumBytes() {
      java.lang.Object ref = orgNum_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        orgNum_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // required int32 instrumentId = 4;
    public static final int INSTRUMENTID_FIELD_NUMBER = 4;
    private int instrumentId_;
    /**
     * <code>required int32 instrumentId = 4;</code>
     */
    public boolean hasInstrumentId() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>required int32 instrumentId = 4;</code>
     */
    public int getInstrumentId() {
      return instrumentId_;
    }

    // required int32 quaId = 5;
    public static final int QUAID_FIELD_NUMBER = 5;
    private int quaId_;
    /**
     * <code>required int32 quaId = 5;</code>
     */
    public boolean hasQuaId() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>required int32 quaId = 5;</code>
     */
    public int getQuaId() {
      return quaId_;
    }

    // required bool workTime = 6;
    public static final int WORKTIME_FIELD_NUMBER = 6;
    private boolean workTime_;
    /**
     * <code>required bool workTime = 6;</code>
     */
    public boolean hasWorkTime() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>required bool workTime = 6;</code>
     */
    public boolean getWorkTime() {
      return workTime_;
    }

    // required int32 status = 7;
    public static final int STATUS_FIELD_NUMBER = 7;
    private int status_;
    /**
     * <code>required int32 status = 7;</code>
     */
    public boolean hasStatus() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>required int32 status = 7;</code>
     */
    public int getStatus() {
      return status_;
    }

    private void initFields() {
      id_ = 0;
      type_ = false;
      orgNum_ = "";
      instrumentId_ = 0;
      quaId_ = 0;
      workTime_ = false;
      status_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasType()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasInstrumentId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasQuaId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasWorkTime()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasStatus()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, id_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBool(2, type_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBytes(3, getOrgNumBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(4, instrumentId_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(5, quaId_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeBool(6, workTime_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeInt32(7, status_);
      }
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, id_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(2, type_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, getOrgNumBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, instrumentId_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, quaId_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(6, workTime_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(7, status_);
      }
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.slark.pengder.protocol.MessageProtos.TinsQuaConfig parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.slark.pengder.protocol.MessageProtos.TinsQuaConfig parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.slark.pengder.protocol.MessageProtos.TinsQuaConfig parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.slark.pengder.protocol.MessageProtos.TinsQuaConfig parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.slark.pengder.protocol.MessageProtos.TinsQuaConfig parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.slark.pengder.protocol.MessageProtos.TinsQuaConfig parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.slark.pengder.protocol.MessageProtos.TinsQuaConfig parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.slark.pengder.protocol.MessageProtos.TinsQuaConfig parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.slark.pengder.protocol.MessageProtos.TinsQuaConfig parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.slark.pengder.protocol.MessageProtos.TinsQuaConfig parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.slark.pengder.protocol.MessageProtos.TinsQuaConfig prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    /**
     * Protobuf type {@code biotech.osla.TinsQuaConfig}
     *
     * <pre>
     *用户资格权限
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.slark.pengder.protocol.MessageProtos.TinsQuaConfig, Builder>
        implements com.slark.pengder.protocol.MessageProtos.TinsQuaConfigOrBuilder {
      // Construct using com.slark.pengder.protocol.MessageProtos.TinsQuaConfig.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        id_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        type_ = false;
        bitField0_ = (bitField0_ & ~0x00000002);
        orgNum_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        instrumentId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        quaId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        workTime_ = false;
        bitField0_ = (bitField0_ & ~0x00000020);
        status_ = 0;
        bitField0_ = (bitField0_ & ~0x00000040);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.slark.pengder.protocol.MessageProtos.TinsQuaConfig getDefaultInstanceForType() {
        return com.slark.pengder.protocol.MessageProtos.TinsQuaConfig.getDefaultInstance();
      }

      public com.slark.pengder.protocol.MessageProtos.TinsQuaConfig build() {
        com.slark.pengder.protocol.MessageProtos.TinsQuaConfig result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.slark.pengder.protocol.MessageProtos.TinsQuaConfig buildPartial() {
        com.slark.pengder.protocol.MessageProtos.TinsQuaConfig result = new com.slark.pengder.protocol.MessageProtos.TinsQuaConfig(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.id_ = id_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.type_ = type_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.orgNum_ = orgNum_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.instrumentId_ = instrumentId_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.quaId_ = quaId_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.workTime_ = workTime_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.status_ = status_;
        result.bitField0_ = to_bitField0_;
        return result;
      }

      public Builder mergeFrom(com.slark.pengder.protocol.MessageProtos.TinsQuaConfig other) {
        if (other == com.slark.pengder.protocol.MessageProtos.TinsQuaConfig.getDefaultInstance()) return this;
        if (other.hasId()) {
          setId(other.getId());
        }
        if (other.hasType()) {
          setType(other.getType());
        }
        if (other.hasOrgNum()) {
          bitField0_ |= 0x00000004;
          orgNum_ = other.orgNum_;
          
        }
        if (other.hasInstrumentId()) {
          setInstrumentId(other.getInstrumentId());
        }
        if (other.hasQuaId()) {
          setQuaId(other.getQuaId());
        }
        if (other.hasWorkTime()) {
          setWorkTime(other.getWorkTime());
        }
        if (other.hasStatus()) {
          setStatus(other.getStatus());
        }
        return this;
      }

      public final boolean isInitialized() {
        if (!hasId()) {
          
          return false;
        }
        if (!hasType()) {
          
          return false;
        }
        if (!hasInstrumentId()) {
          
          return false;
        }
        if (!hasQuaId()) {
          
          return false;
        }
        if (!hasWorkTime()) {
          
          return false;
        }
        if (!hasStatus()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.slark.pengder.protocol.MessageProtos.TinsQuaConfig parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.slark.pengder.protocol.MessageProtos.TinsQuaConfig) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required int32 id = 1;
      private int id_ ;
      /**
       * <code>required int32 id = 1;</code>
       */
      public boolean hasId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int32 id = 1;</code>
       */
      public int getId() {
        return id_;
      }
      /**
       * <code>required int32 id = 1;</code>
       */
      public Builder setId(int value) {
        bitField0_ |= 0x00000001;
        id_ = value;
        
        return this;
      }
      /**
       * <code>required int32 id = 1;</code>
       */
      public Builder clearId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        id_ = 0;
        
        return this;
      }

      // required bool type = 2;
      private boolean type_ ;
      /**
       * <code>required bool type = 2;</code>
       */
      public boolean hasType() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required bool type = 2;</code>
       */
      public boolean getType() {
        return type_;
      }
      /**
       * <code>required bool type = 2;</code>
       */
      public Builder setType(boolean value) {
        bitField0_ |= 0x00000002;
        type_ = value;
        
        return this;
      }
      /**
       * <code>required bool type = 2;</code>
       */
      public Builder clearType() {
        bitField0_ = (bitField0_ & ~0x00000002);
        type_ = false;
        
        return this;
      }

      // optional string orgNum = 3;
      private java.lang.Object orgNum_ = "";
      /**
       * <code>optional string orgNum = 3;</code>
       */
      public boolean hasOrgNum() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional string orgNum = 3;</code>
       */
      public java.lang.String getOrgNum() {
        java.lang.Object ref = orgNum_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          orgNum_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string orgNum = 3;</code>
       */
      public com.google.protobuf.ByteString
          getOrgNumBytes() {
        java.lang.Object ref = orgNum_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          orgNum_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string orgNum = 3;</code>
       */
      public Builder setOrgNum(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        orgNum_ = value;
        
        return this;
      }
      /**
       * <code>optional string orgNum = 3;</code>
       */
      public Builder clearOrgNum() {
        bitField0_ = (bitField0_ & ~0x00000004);
        orgNum_ = getDefaultInstance().getOrgNum();
        
        return this;
      }
      /**
       * <code>optional string orgNum = 3;</code>
       */
      public Builder setOrgNumBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        orgNum_ = value;
        
        return this;
      }

      // required int32 instrumentId = 4;
      private int instrumentId_ ;
      /**
       * <code>required int32 instrumentId = 4;</code>
       */
      public boolean hasInstrumentId() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>required int32 instrumentId = 4;</code>
       */
      public int getInstrumentId() {
        return instrumentId_;
      }
      /**
       * <code>required int32 instrumentId = 4;</code>
       */
      public Builder setInstrumentId(int value) {
        bitField0_ |= 0x00000008;
        instrumentId_ = value;
        
        return this;
      }
      /**
       * <code>required int32 instrumentId = 4;</code>
       */
      public Builder clearInstrumentId() {
        bitField0_ = (bitField0_ & ~0x00000008);
        instrumentId_ = 0;
        
        return this;
      }

      // required int32 quaId = 5;
      private int quaId_ ;
      /**
       * <code>required int32 quaId = 5;</code>
       */
      public boolean hasQuaId() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>required int32 quaId = 5;</code>
       */
      public int getQuaId() {
        return quaId_;
      }
      /**
       * <code>required int32 quaId = 5;</code>
       */
      public Builder setQuaId(int value) {
        bitField0_ |= 0x00000010;
        quaId_ = value;
        
        return this;
      }
      /**
       * <code>required int32 quaId = 5;</code>
       */
      public Builder clearQuaId() {
        bitField0_ = (bitField0_ & ~0x00000010);
        quaId_ = 0;
        
        return this;
      }

      // required bool workTime = 6;
      private boolean workTime_ ;
      /**
       * <code>required bool workTime = 6;</code>
       */
      public boolean hasWorkTime() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>required bool workTime = 6;</code>
       */
      public boolean getWorkTime() {
        return workTime_;
      }
      /**
       * <code>required bool workTime = 6;</code>
       */
      public Builder setWorkTime(boolean value) {
        bitField0_ |= 0x00000020;
        workTime_ = value;
        
        return this;
      }
      /**
       * <code>required bool workTime = 6;</code>
       */
      public Builder clearWorkTime() {
        bitField0_ = (bitField0_ & ~0x00000020);
        workTime_ = false;
        
        return this;
      }

      // required int32 status = 7;
      private int status_ ;
      /**
       * <code>required int32 status = 7;</code>
       */
      public boolean hasStatus() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>required int32 status = 7;</code>
       */
      public int getStatus() {
        return status_;
      }
      /**
       * <code>required int32 status = 7;</code>
       */
      public Builder setStatus(int value) {
        bitField0_ |= 0x00000040;
        status_ = value;
        
        return this;
      }
      /**
       * <code>required int32 status = 7;</code>
       */
      public Builder clearStatus() {
        bitField0_ = (bitField0_ & ~0x00000040);
        status_ = 0;
        
        return this;
      }

      // @@protoc_insertion_point(builder_scope:biotech.osla.TinsQuaConfig)
    }

    static {
      defaultInstance = new TinsQuaConfig(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:biotech.osla.TinsQuaConfig)
  }

  public interface HeartbeatOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {

    // required int32 client_timestamp = 1;
    /**
     * <code>required int32 client_timestamp = 1;</code>
     *
     * <pre>
     * 客户端时间戳
     * </pre>
     */
    boolean hasClientTimestamp();
    /**
     * <code>required int32 client_timestamp = 1;</code>
     *
     * <pre>
     * 客户端时间戳
     * </pre>
     */
    int getClientTimestamp();

    // required int32 server_timestamp = 2;
    /**
     * <code>required int32 server_timestamp = 2;</code>
     *
     * <pre>
     * 服务器时间戳
     * </pre>
     */
    boolean hasServerTimestamp();
    /**
     * <code>required int32 server_timestamp = 2;</code>
     *
     * <pre>
     * 服务器时间戳
     * </pre>
     */
    int getServerTimestamp();

    // optional int32 instrument_id = 3;
    /**
     * <code>optional int32 instrument_id = 3;</code>
     *
     * <pre>
     * 仪器ID
     * </pre>
     */
    boolean hasInstrumentId();
    /**
     * <code>optional int32 instrument_id = 3;</code>
     *
     * <pre>
     * 仪器ID
     * </pre>
     */
    int getInstrumentId();

    // optional int32 client_state = 4;
    /**
     * <code>optional int32 client_state = 4;</code>
     *
     * <pre>
     * 客户端状态
     * </pre>
     */
    boolean hasClientState();
    /**
     * <code>optional int32 client_state = 4;</code>
     *
     * <pre>
     * 客户端状态
     * </pre>
     */
    int getClientState();

    // optional string org_code = 5;
    /**
     * <code>optional string org_code = 5;</code>
     *
     * <pre>
     *学院编码
     * </pre>
     */
    boolean hasOrgCode();
    /**
     * <code>optional string org_code = 5;</code>
     *
     * <pre>
     *学院编码
     * </pre>
     */
    java.lang.String getOrgCode();
    /**
     * <code>optional string org_code = 5;</code>
     *
     * <pre>
     *学院编码
     * </pre>
     */
    com.google.protobuf.ByteString
        getOrgCodeBytes();
  }
  /**
   * Protobuf type {@code biotech.osla.Heartbeat}
   *
   * <pre>
   * 心跳包
   * </pre>
   */
  public static final class Heartbeat extends
      com.google.protobuf.GeneratedMessageLite
      implements HeartbeatOrBuilder {
    // Use Heartbeat.newBuilder() to construct.
    private Heartbeat(com.google.protobuf.GeneratedMessageLite.Builder builder) {
      super(builder);

    }
    private Heartbeat(boolean noInit) {}

    private static final Heartbeat defaultInstance;
    public static Heartbeat getDefaultInstance() {
      return defaultInstance;
    }

    public Heartbeat getDefaultInstanceForType() {
      return defaultInstance;
    }

    private Heartbeat(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              clientTimestamp_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              serverTimestamp_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              instrumentId_ = input.readInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              clientState_ = input.readInt32();
              break;
            }
            case 42: {
              bitField0_ |= 0x00000010;
              orgCode_ = input.readBytes();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static com.google.protobuf.Parser<Heartbeat> PARSER =
        new com.google.protobuf.AbstractParser<Heartbeat>() {
      public Heartbeat parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Heartbeat(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<Heartbeat> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required int32 client_timestamp = 1;
    public static final int CLIENT_TIMESTAMP_FIELD_NUMBER = 1;
    private int clientTimestamp_;
    /**
     * <code>required int32 client_timestamp = 1;</code>
     *
     * <pre>
     * 客户端时间戳
     * </pre>
     */
    public boolean hasClientTimestamp() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int32 client_timestamp = 1;</code>
     *
     * <pre>
     * 客户端时间戳
     * </pre>
     */
    public int getClientTimestamp() {
      return clientTimestamp_;
    }

    // required int32 server_timestamp = 2;
    public static final int SERVER_TIMESTAMP_FIELD_NUMBER = 2;
    private int serverTimestamp_;
    /**
     * <code>required int32 server_timestamp = 2;</code>
     *
     * <pre>
     * 服务器时间戳
     * </pre>
     */
    public boolean hasServerTimestamp() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required int32 server_timestamp = 2;</code>
     *
     * <pre>
     * 服务器时间戳
     * </pre>
     */
    public int getServerTimestamp() {
      return serverTimestamp_;
    }

    // optional int32 instrument_id = 3;
    public static final int INSTRUMENT_ID_FIELD_NUMBER = 3;
    private int instrumentId_;
    /**
     * <code>optional int32 instrument_id = 3;</code>
     *
     * <pre>
     * 仪器ID
     * </pre>
     */
    public boolean hasInstrumentId() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int32 instrument_id = 3;</code>
     *
     * <pre>
     * 仪器ID
     * </pre>
     */
    public int getInstrumentId() {
      return instrumentId_;
    }

    // optional int32 client_state = 4;
    public static final int CLIENT_STATE_FIELD_NUMBER = 4;
    private int clientState_;
    /**
     * <code>optional int32 client_state = 4;</code>
     *
     * <pre>
     * 客户端状态
     * </pre>
     */
    public boolean hasClientState() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional int32 client_state = 4;</code>
     *
     * <pre>
     * 客户端状态
     * </pre>
     */
    public int getClientState() {
      return clientState_;
    }

    // optional string org_code = 5;
    public static final int ORG_CODE_FIELD_NUMBER = 5;
    private java.lang.Object orgCode_;
    /**
     * <code>optional string org_code = 5;</code>
     *
     * <pre>
     *学院编码
     * </pre>
     */
    public boolean hasOrgCode() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional string org_code = 5;</code>
     *
     * <pre>
     *学院编码
     * </pre>
     */
    public java.lang.String getOrgCode() {
      java.lang.Object ref = orgCode_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          orgCode_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string org_code = 5;</code>
     *
     * <pre>
     *学院编码
     * </pre>
     */
    public com.google.protobuf.ByteString
        getOrgCodeBytes() {
      java.lang.Object ref = orgCode_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        orgCode_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private void initFields() {
      clientTimestamp_ = 0;
      serverTimestamp_ = 0;
      instrumentId_ = 0;
      clientState_ = 0;
      orgCode_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasClientTimestamp()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasServerTimestamp()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, clientTimestamp_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, serverTimestamp_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, instrumentId_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(4, clientState_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeBytes(5, getOrgCodeBytes());
      }
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, clientTimestamp_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, serverTimestamp_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, instrumentId_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, clientState_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(5, getOrgCodeBytes());
      }
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.slark.pengder.protocol.MessageProtos.Heartbeat parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.slark.pengder.protocol.MessageProtos.Heartbeat parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.slark.pengder.protocol.MessageProtos.Heartbeat parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.slark.pengder.protocol.MessageProtos.Heartbeat parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.slark.pengder.protocol.MessageProtos.Heartbeat parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.slark.pengder.protocol.MessageProtos.Heartbeat parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.slark.pengder.protocol.MessageProtos.Heartbeat parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.slark.pengder.protocol.MessageProtos.Heartbeat parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.slark.pengder.protocol.MessageProtos.Heartbeat parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.slark.pengder.protocol.MessageProtos.Heartbeat parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.slark.pengder.protocol.MessageProtos.Heartbeat prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    /**
     * Protobuf type {@code biotech.osla.Heartbeat}
     *
     * <pre>
     * 心跳包
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.slark.pengder.protocol.MessageProtos.Heartbeat, Builder>
        implements com.slark.pengder.protocol.MessageProtos.HeartbeatOrBuilder {
      // Construct using com.slark.pengder.protocol.MessageProtos.Heartbeat.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        clientTimestamp_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        serverTimestamp_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        instrumentId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        clientState_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        orgCode_ = "";
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.slark.pengder.protocol.MessageProtos.Heartbeat getDefaultInstanceForType() {
        return com.slark.pengder.protocol.MessageProtos.Heartbeat.getDefaultInstance();
      }

      public com.slark.pengder.protocol.MessageProtos.Heartbeat build() {
        com.slark.pengder.protocol.MessageProtos.Heartbeat result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.slark.pengder.protocol.MessageProtos.Heartbeat buildPartial() {
        com.slark.pengder.protocol.MessageProtos.Heartbeat result = new com.slark.pengder.protocol.MessageProtos.Heartbeat(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.clientTimestamp_ = clientTimestamp_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.serverTimestamp_ = serverTimestamp_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.instrumentId_ = instrumentId_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.clientState_ = clientState_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.orgCode_ = orgCode_;
        result.bitField0_ = to_bitField0_;
        return result;
      }

      public Builder mergeFrom(com.slark.pengder.protocol.MessageProtos.Heartbeat other) {
        if (other == com.slark.pengder.protocol.MessageProtos.Heartbeat.getDefaultInstance()) return this;
        if (other.hasClientTimestamp()) {
          setClientTimestamp(other.getClientTimestamp());
        }
        if (other.hasServerTimestamp()) {
          setServerTimestamp(other.getServerTimestamp());
        }
        if (other.hasInstrumentId()) {
          setInstrumentId(other.getInstrumentId());
        }
        if (other.hasClientState()) {
          setClientState(other.getClientState());
        }
        if (other.hasOrgCode()) {
          bitField0_ |= 0x00000010;
          orgCode_ = other.orgCode_;
          
        }
        return this;
      }

      public final boolean isInitialized() {
        if (!hasClientTimestamp()) {
          
          return false;
        }
        if (!hasServerTimestamp()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.slark.pengder.protocol.MessageProtos.Heartbeat parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.slark.pengder.protocol.MessageProtos.Heartbeat) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required int32 client_timestamp = 1;
      private int clientTimestamp_ ;
      /**
       * <code>required int32 client_timestamp = 1;</code>
       *
       * <pre>
       * 客户端时间戳
       * </pre>
       */
      public boolean hasClientTimestamp() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int32 client_timestamp = 1;</code>
       *
       * <pre>
       * 客户端时间戳
       * </pre>
       */
      public int getClientTimestamp() {
        return clientTimestamp_;
      }
      /**
       * <code>required int32 client_timestamp = 1;</code>
       *
       * <pre>
       * 客户端时间戳
       * </pre>
       */
      public Builder setClientTimestamp(int value) {
        bitField0_ |= 0x00000001;
        clientTimestamp_ = value;
        
        return this;
      }
      /**
       * <code>required int32 client_timestamp = 1;</code>
       *
       * <pre>
       * 客户端时间戳
       * </pre>
       */
      public Builder clearClientTimestamp() {
        bitField0_ = (bitField0_ & ~0x00000001);
        clientTimestamp_ = 0;
        
        return this;
      }

      // required int32 server_timestamp = 2;
      private int serverTimestamp_ ;
      /**
       * <code>required int32 server_timestamp = 2;</code>
       *
       * <pre>
       * 服务器时间戳
       * </pre>
       */
      public boolean hasServerTimestamp() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required int32 server_timestamp = 2;</code>
       *
       * <pre>
       * 服务器时间戳
       * </pre>
       */
      public int getServerTimestamp() {
        return serverTimestamp_;
      }
      /**
       * <code>required int32 server_timestamp = 2;</code>
       *
       * <pre>
       * 服务器时间戳
       * </pre>
       */
      public Builder setServerTimestamp(int value) {
        bitField0_ |= 0x00000002;
        serverTimestamp_ = value;
        
        return this;
      }
      /**
       * <code>required int32 server_timestamp = 2;</code>
       *
       * <pre>
       * 服务器时间戳
       * </pre>
       */
      public Builder clearServerTimestamp() {
        bitField0_ = (bitField0_ & ~0x00000002);
        serverTimestamp_ = 0;
        
        return this;
      }

      // optional int32 instrument_id = 3;
      private int instrumentId_ ;
      /**
       * <code>optional int32 instrument_id = 3;</code>
       *
       * <pre>
       * 仪器ID
       * </pre>
       */
      public boolean hasInstrumentId() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int32 instrument_id = 3;</code>
       *
       * <pre>
       * 仪器ID
       * </pre>
       */
      public int getInstrumentId() {
        return instrumentId_;
      }
      /**
       * <code>optional int32 instrument_id = 3;</code>
       *
       * <pre>
       * 仪器ID
       * </pre>
       */
      public Builder setInstrumentId(int value) {
        bitField0_ |= 0x00000004;
        instrumentId_ = value;
        
        return this;
      }
      /**
       * <code>optional int32 instrument_id = 3;</code>
       *
       * <pre>
       * 仪器ID
       * </pre>
       */
      public Builder clearInstrumentId() {
        bitField0_ = (bitField0_ & ~0x00000004);
        instrumentId_ = 0;
        
        return this;
      }

      // optional int32 client_state = 4;
      private int clientState_ ;
      /**
       * <code>optional int32 client_state = 4;</code>
       *
       * <pre>
       * 客户端状态
       * </pre>
       */
      public boolean hasClientState() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional int32 client_state = 4;</code>
       *
       * <pre>
       * 客户端状态
       * </pre>
       */
      public int getClientState() {
        return clientState_;
      }
      /**
       * <code>optional int32 client_state = 4;</code>
       *
       * <pre>
       * 客户端状态
       * </pre>
       */
      public Builder setClientState(int value) {
        bitField0_ |= 0x00000008;
        clientState_ = value;
        
        return this;
      }
      /**
       * <code>optional int32 client_state = 4;</code>
       *
       * <pre>
       * 客户端状态
       * </pre>
       */
      public Builder clearClientState() {
        bitField0_ = (bitField0_ & ~0x00000008);
        clientState_ = 0;
        
        return this;
      }

      // optional string org_code = 5;
      private java.lang.Object orgCode_ = "";
      /**
       * <code>optional string org_code = 5;</code>
       *
       * <pre>
       *学院编码
       * </pre>
       */
      public boolean hasOrgCode() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional string org_code = 5;</code>
       *
       * <pre>
       *学院编码
       * </pre>
       */
      public java.lang.String getOrgCode() {
        java.lang.Object ref = orgCode_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          orgCode_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string org_code = 5;</code>
       *
       * <pre>
       *学院编码
       * </pre>
       */
      public com.google.protobuf.ByteString
          getOrgCodeBytes() {
        java.lang.Object ref = orgCode_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          orgCode_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string org_code = 5;</code>
       *
       * <pre>
       *学院编码
       * </pre>
       */
      public Builder setOrgCode(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
        orgCode_ = value;
        
        return this;
      }
      /**
       * <code>optional string org_code = 5;</code>
       *
       * <pre>
       *学院编码
       * </pre>
       */
      public Builder clearOrgCode() {
        bitField0_ = (bitField0_ & ~0x00000010);
        orgCode_ = getDefaultInstance().getOrgCode();
        
        return this;
      }
      /**
       * <code>optional string org_code = 5;</code>
       *
       * <pre>
       *学院编码
       * </pre>
       */
      public Builder setOrgCodeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
        orgCode_ = value;
        
        return this;
      }

      // @@protoc_insertion_point(builder_scope:biotech.osla.Heartbeat)
    }

    static {
      defaultInstance = new Heartbeat(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:biotech.osla.Heartbeat)
  }

  public interface InitPhaseOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {

    // required .biotech.osla.InitPhase.Option option = 1;
    /**
     * <code>required .biotech.osla.InitPhase.Option option = 1;</code>
     *
     * <pre>
     * 命令参数
     * </pre>
     */
    boolean hasOption();
    /**
     * <code>required .biotech.osla.InitPhase.Option option = 1;</code>
     *
     * <pre>
     * 命令参数
     * </pre>
     */
    com.slark.pengder.protocol.MessageProtos.InitPhase.Option getOption();

    // optional string bind_code = 2;
    /**
     * <code>optional string bind_code = 2;</code>
     *
     * <pre>
     *绑定时使用的code
     * </pre>
     */
    boolean hasBindCode();
    /**
     * <code>optional string bind_code = 2;</code>
     *
     * <pre>
     *绑定时使用的code
     * </pre>
     */
    java.lang.String getBindCode();
    /**
     * <code>optional string bind_code = 2;</code>
     *
     * <pre>
     *绑定时使用的code
     * </pre>
     */
    com.google.protobuf.ByteString
        getBindCodeBytes();
  }
  /**
   * Protobuf type {@code biotech.osla.InitPhase}
   *
   * <pre>
   * 初始化阶段信息
   * </pre>
   */
  public static final class InitPhase extends
      com.google.protobuf.GeneratedMessageLite
      implements InitPhaseOrBuilder {
    // Use InitPhase.newBuilder() to construct.
    private InitPhase(com.google.protobuf.GeneratedMessageLite.Builder builder) {
      super(builder);

    }
    private InitPhase(boolean noInit) {}

    private static final InitPhase defaultInstance;
    public static InitPhase getDefaultInstance() {
      return defaultInstance;
    }

    public InitPhase getDefaultInstanceForType() {
      return defaultInstance;
    }

    private InitPhase(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              com.slark.pengder.protocol.MessageProtos.InitPhase.Option value = com.slark.pengder.protocol.MessageProtos.InitPhase.Option.valueOf(rawValue);
              if (value != null) {
                bitField0_ |= 0x00000001;
                option_ = value;
              }
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              bindCode_ = input.readBytes();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static com.google.protobuf.Parser<InitPhase> PARSER =
        new com.google.protobuf.AbstractParser<InitPhase>() {
      public InitPhase parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new InitPhase(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<InitPhase> getParserForType() {
      return PARSER;
    }

    /**
     * Protobuf enum {@code biotech.osla.InitPhase.Option}
     */
    public enum Option
        implements com.google.protobuf.Internal.EnumLite {
      /**
       * <code>CLIENT_INIT_REQ = 1;</code>
       *
       * <pre>
       * 客户端初始化请求
       * </pre>
       */
      CLIENT_INIT_REQ(0, 1),
      /**
       * <code>SERVER_DEVICE_INIT_DONE = 2;</code>
       *
       * <pre>
       * 服务器发送设备列表结束
       * </pre>
       */
      SERVER_DEVICE_INIT_DONE(1, 2),
      /**
       * <code>SERVER_INIT_DONE = 3;</code>
       *
       * <pre>
       * 服务器初始化完成
       * </pre>
       */
      SERVER_INIT_DONE(2, 3),
      ;

      /**
       * <code>CLIENT_INIT_REQ = 1;</code>
       *
       * <pre>
       * 客户端初始化请求
       * </pre>
       */
      public static final int CLIENT_INIT_REQ_VALUE = 1;
      /**
       * <code>SERVER_DEVICE_INIT_DONE = 2;</code>
       *
       * <pre>
       * 服务器发送设备列表结束
       * </pre>
       */
      public static final int SERVER_DEVICE_INIT_DONE_VALUE = 2;
      /**
       * <code>SERVER_INIT_DONE = 3;</code>
       *
       * <pre>
       * 服务器初始化完成
       * </pre>
       */
      public static final int SERVER_INIT_DONE_VALUE = 3;


      public final int getNumber() { return value; }

      public static Option valueOf(int value) {
        switch (value) {
          case 1: return CLIENT_INIT_REQ;
          case 2: return SERVER_DEVICE_INIT_DONE;
          case 3: return SERVER_INIT_DONE;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<Option>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static com.google.protobuf.Internal.EnumLiteMap<Option>
          internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<Option>() {
              public Option findValueByNumber(int number) {
                return Option.valueOf(number);
              }
            };

      private final int value;

      private Option(int index, int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:biotech.osla.InitPhase.Option)
    }

    private int bitField0_;
    // required .biotech.osla.InitPhase.Option option = 1;
    public static final int OPTION_FIELD_NUMBER = 1;
    private com.slark.pengder.protocol.MessageProtos.InitPhase.Option option_;
    /**
     * <code>required .biotech.osla.InitPhase.Option option = 1;</code>
     *
     * <pre>
     * 命令参数
     * </pre>
     */
    public boolean hasOption() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required .biotech.osla.InitPhase.Option option = 1;</code>
     *
     * <pre>
     * 命令参数
     * </pre>
     */
    public com.slark.pengder.protocol.MessageProtos.InitPhase.Option getOption() {
      return option_;
    }

    // optional string bind_code = 2;
    public static final int BIND_CODE_FIELD_NUMBER = 2;
    private java.lang.Object bindCode_;
    /**
     * <code>optional string bind_code = 2;</code>
     *
     * <pre>
     *绑定时使用的code
     * </pre>
     */
    public boolean hasBindCode() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional string bind_code = 2;</code>
     *
     * <pre>
     *绑定时使用的code
     * </pre>
     */
    public java.lang.String getBindCode() {
      java.lang.Object ref = bindCode_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          bindCode_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string bind_code = 2;</code>
     *
     * <pre>
     *绑定时使用的code
     * </pre>
     */
    public com.google.protobuf.ByteString
        getBindCodeBytes() {
      java.lang.Object ref = bindCode_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        bindCode_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private void initFields() {
      option_ = com.slark.pengder.protocol.MessageProtos.InitPhase.Option.CLIENT_INIT_REQ;
      bindCode_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasOption()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, option_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getBindCodeBytes());
      }
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, option_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getBindCodeBytes());
      }
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.slark.pengder.protocol.MessageProtos.InitPhase parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.slark.pengder.protocol.MessageProtos.InitPhase parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.slark.pengder.protocol.MessageProtos.InitPhase parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.slark.pengder.protocol.MessageProtos.InitPhase parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.slark.pengder.protocol.MessageProtos.InitPhase parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.slark.pengder.protocol.MessageProtos.InitPhase parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.slark.pengder.protocol.MessageProtos.InitPhase parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.slark.pengder.protocol.MessageProtos.InitPhase parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.slark.pengder.protocol.MessageProtos.InitPhase parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.slark.pengder.protocol.MessageProtos.InitPhase parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.slark.pengder.protocol.MessageProtos.InitPhase prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    /**
     * Protobuf type {@code biotech.osla.InitPhase}
     *
     * <pre>
     * 初始化阶段信息
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.slark.pengder.protocol.MessageProtos.InitPhase, Builder>
        implements com.slark.pengder.protocol.MessageProtos.InitPhaseOrBuilder {
      // Construct using com.slark.pengder.protocol.MessageProtos.InitPhase.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        option_ = com.slark.pengder.protocol.MessageProtos.InitPhase.Option.CLIENT_INIT_REQ;
        bitField0_ = (bitField0_ & ~0x00000001);
        bindCode_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.slark.pengder.protocol.MessageProtos.InitPhase getDefaultInstanceForType() {
        return com.slark.pengder.protocol.MessageProtos.InitPhase.getDefaultInstance();
      }

      public com.slark.pengder.protocol.MessageProtos.InitPhase build() {
        com.slark.pengder.protocol.MessageProtos.InitPhase result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.slark.pengder.protocol.MessageProtos.InitPhase buildPartial() {
        com.slark.pengder.protocol.MessageProtos.InitPhase result = new com.slark.pengder.protocol.MessageProtos.InitPhase(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.option_ = option_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.bindCode_ = bindCode_;
        result.bitField0_ = to_bitField0_;
        return result;
      }

      public Builder mergeFrom(com.slark.pengder.protocol.MessageProtos.InitPhase other) {
        if (other == com.slark.pengder.protocol.MessageProtos.InitPhase.getDefaultInstance()) return this;
        if (other.hasOption()) {
          setOption(other.getOption());
        }
        if (other.hasBindCode()) {
          bitField0_ |= 0x00000002;
          bindCode_ = other.bindCode_;
          
        }
        return this;
      }

      public final boolean isInitialized() {
        if (!hasOption()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.slark.pengder.protocol.MessageProtos.InitPhase parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.slark.pengder.protocol.MessageProtos.InitPhase) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required .biotech.osla.InitPhase.Option option = 1;
      private com.slark.pengder.protocol.MessageProtos.InitPhase.Option option_ = com.slark.pengder.protocol.MessageProtos.InitPhase.Option.CLIENT_INIT_REQ;
      /**
       * <code>required .biotech.osla.InitPhase.Option option = 1;</code>
       *
       * <pre>
       * 命令参数
       * </pre>
       */
      public boolean hasOption() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required .biotech.osla.InitPhase.Option option = 1;</code>
       *
       * <pre>
       * 命令参数
       * </pre>
       */
      public com.slark.pengder.protocol.MessageProtos.InitPhase.Option getOption() {
        return option_;
      }
      /**
       * <code>required .biotech.osla.InitPhase.Option option = 1;</code>
       *
       * <pre>
       * 命令参数
       * </pre>
       */
      public Builder setOption(com.slark.pengder.protocol.MessageProtos.InitPhase.Option value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        option_ = value;
        
        return this;
      }
      /**
       * <code>required .biotech.osla.InitPhase.Option option = 1;</code>
       *
       * <pre>
       * 命令参数
       * </pre>
       */
      public Builder clearOption() {
        bitField0_ = (bitField0_ & ~0x00000001);
        option_ = com.slark.pengder.protocol.MessageProtos.InitPhase.Option.CLIENT_INIT_REQ;
        
        return this;
      }

      // optional string bind_code = 2;
      private java.lang.Object bindCode_ = "";
      /**
       * <code>optional string bind_code = 2;</code>
       *
       * <pre>
       *绑定时使用的code
       * </pre>
       */
      public boolean hasBindCode() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional string bind_code = 2;</code>
       *
       * <pre>
       *绑定时使用的code
       * </pre>
       */
      public java.lang.String getBindCode() {
        java.lang.Object ref = bindCode_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          bindCode_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string bind_code = 2;</code>
       *
       * <pre>
       *绑定时使用的code
       * </pre>
       */
      public com.google.protobuf.ByteString
          getBindCodeBytes() {
        java.lang.Object ref = bindCode_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          bindCode_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string bind_code = 2;</code>
       *
       * <pre>
       *绑定时使用的code
       * </pre>
       */
      public Builder setBindCode(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        bindCode_ = value;
        
        return this;
      }
      /**
       * <code>optional string bind_code = 2;</code>
       *
       * <pre>
       *绑定时使用的code
       * </pre>
       */
      public Builder clearBindCode() {
        bitField0_ = (bitField0_ & ~0x00000002);
        bindCode_ = getDefaultInstance().getBindCode();
        
        return this;
      }
      /**
       * <code>optional string bind_code = 2;</code>
       *
       * <pre>
       *绑定时使用的code
       * </pre>
       */
      public Builder setBindCodeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        bindCode_ = value;
        
        return this;
      }

      // @@protoc_insertion_point(builder_scope:biotech.osla.InitPhase)
    }

    static {
      defaultInstance = new InitPhase(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:biotech.osla.InitPhase)
  }

  public interface CommandOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {

    // required .biotech.osla.Command.Option option = 1;
    /**
     * <code>required .biotech.osla.Command.Option option = 1;</code>
     *
     * <pre>
     * 命令参数
     * </pre>
     */
    boolean hasOption();
    /**
     * <code>required .biotech.osla.Command.Option option = 1;</code>
     *
     * <pre>
     * 命令参数
     * </pre>
     */
    com.slark.pengder.protocol.MessageProtos.Command.Option getOption();
  }
  /**
   * Protobuf type {@code biotech.osla.Command}
   *
   * <pre>
   * 通用指令
   * </pre>
   */
  public static final class Command extends
      com.google.protobuf.GeneratedMessageLite
      implements CommandOrBuilder {
    // Use Command.newBuilder() to construct.
    private Command(com.google.protobuf.GeneratedMessageLite.Builder builder) {
      super(builder);

    }
    private Command(boolean noInit) {}

    private static final Command defaultInstance;
    public static Command getDefaultInstance() {
      return defaultInstance;
    }

    public Command getDefaultInstanceForType() {
      return defaultInstance;
    }

    private Command(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              com.slark.pengder.protocol.MessageProtos.Command.Option value = com.slark.pengder.protocol.MessageProtos.Command.Option.valueOf(rawValue);
              if (value != null) {
                bitField0_ |= 0x00000001;
                option_ = value;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static com.google.protobuf.Parser<Command> PARSER =
        new com.google.protobuf.AbstractParser<Command>() {
      public Command parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Command(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<Command> getParserForType() {
      return PARSER;
    }

    /**
     * Protobuf enum {@code biotech.osla.Command.Option}
     */
    public enum Option
        implements com.google.protobuf.Internal.EnumLite {
      /**
       * <code>CLIENT_RECV_OK = 11;</code>
       *
       * <pre>
       * 客户端使用
       * </pre>
       */
      CLIENT_RECV_OK(0, 11),
      /**
       * <code>CLIENT_RECV_ERR = 12;</code>
       *
       * <pre>
       * 客户端接收错误
       * </pre>
       */
      CLIENT_RECV_ERR(1, 12),
      /**
       * <code>CLIENT_PARSE_ERR = 13;</code>
       *
       * <pre>
       * 客户端处理正确
       * </pre>
       */
      CLIENT_PARSE_ERR(2, 13),
      /**
       * <code>CLIENT_PARSE_OK = 14;</code>
       *
       * <pre>
       * 客户端处理错误
       * </pre>
       */
      CLIENT_PARSE_OK(3, 14),
      /**
       * <code>SERVER_RECV_OK = 21;</code>
       *
       * <pre>
       * 服务器使用
       * </pre>
       */
      SERVER_RECV_OK(4, 21),
      /**
       * <code>SERVER_RECV_ERR = 22;</code>
       *
       * <pre>
       * 服务器接收错误
       * </pre>
       */
      SERVER_RECV_ERR(5, 22),
      /**
       * <code>SERVER_PARSE_OK = 23;</code>
       *
       * <pre>
       * 服务器处理正确
       * </pre>
       */
      SERVER_PARSE_OK(6, 23),
      /**
       * <code>SERVER_PARSE_ERR = 24;</code>
       *
       * <pre>
       * 服务器处理错误
       * </pre>
       */
      SERVER_PARSE_ERR(7, 24),
      ;

      /**
       * <code>CLIENT_RECV_OK = 11;</code>
       *
       * <pre>
       * 客户端使用
       * </pre>
       */
      public static final int CLIENT_RECV_OK_VALUE = 11;
      /**
       * <code>CLIENT_RECV_ERR = 12;</code>
       *
       * <pre>
       * 客户端接收错误
       * </pre>
       */
      public static final int CLIENT_RECV_ERR_VALUE = 12;
      /**
       * <code>CLIENT_PARSE_ERR = 13;</code>
       *
       * <pre>
       * 客户端处理正确
       * </pre>
       */
      public static final int CLIENT_PARSE_ERR_VALUE = 13;
      /**
       * <code>CLIENT_PARSE_OK = 14;</code>
       *
       * <pre>
       * 客户端处理错误
       * </pre>
       */
      public static final int CLIENT_PARSE_OK_VALUE = 14;
      /**
       * <code>SERVER_RECV_OK = 21;</code>
       *
       * <pre>
       * 服务器使用
       * </pre>
       */
      public static final int SERVER_RECV_OK_VALUE = 21;
      /**
       * <code>SERVER_RECV_ERR = 22;</code>
       *
       * <pre>
       * 服务器接收错误
       * </pre>
       */
      public static final int SERVER_RECV_ERR_VALUE = 22;
      /**
       * <code>SERVER_PARSE_OK = 23;</code>
       *
       * <pre>
       * 服务器处理正确
       * </pre>
       */
      public static final int SERVER_PARSE_OK_VALUE = 23;
      /**
       * <code>SERVER_PARSE_ERR = 24;</code>
       *
       * <pre>
       * 服务器处理错误
       * </pre>
       */
      public static final int SERVER_PARSE_ERR_VALUE = 24;


      public final int getNumber() { return value; }

      public static Option valueOf(int value) {
        switch (value) {
          case 11: return CLIENT_RECV_OK;
          case 12: return CLIENT_RECV_ERR;
          case 13: return CLIENT_PARSE_ERR;
          case 14: return CLIENT_PARSE_OK;
          case 21: return SERVER_RECV_OK;
          case 22: return SERVER_RECV_ERR;
          case 23: return SERVER_PARSE_OK;
          case 24: return SERVER_PARSE_ERR;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<Option>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static com.google.protobuf.Internal.EnumLiteMap<Option>
          internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<Option>() {
              public Option findValueByNumber(int number) {
                return Option.valueOf(number);
              }
            };

      private final int value;

      private Option(int index, int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:biotech.osla.Command.Option)
    }

    private int bitField0_;
    // required .biotech.osla.Command.Option option = 1;
    public static final int OPTION_FIELD_NUMBER = 1;
    private com.slark.pengder.protocol.MessageProtos.Command.Option option_;
    /**
     * <code>required .biotech.osla.Command.Option option = 1;</code>
     *
     * <pre>
     * 命令参数
     * </pre>
     */
    public boolean hasOption() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required .biotech.osla.Command.Option option = 1;</code>
     *
     * <pre>
     * 命令参数
     * </pre>
     */
    public com.slark.pengder.protocol.MessageProtos.Command.Option getOption() {
      return option_;
    }

    private void initFields() {
      option_ = com.slark.pengder.protocol.MessageProtos.Command.Option.CLIENT_RECV_OK;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasOption()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, option_.getNumber());
      }
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, option_.getNumber());
      }
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.slark.pengder.protocol.MessageProtos.Command parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.slark.pengder.protocol.MessageProtos.Command parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.slark.pengder.protocol.MessageProtos.Command parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.slark.pengder.protocol.MessageProtos.Command parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.slark.pengder.protocol.MessageProtos.Command parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.slark.pengder.protocol.MessageProtos.Command parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.slark.pengder.protocol.MessageProtos.Command parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.slark.pengder.protocol.MessageProtos.Command parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.slark.pengder.protocol.MessageProtos.Command parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.slark.pengder.protocol.MessageProtos.Command parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.slark.pengder.protocol.MessageProtos.Command prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    /**
     * Protobuf type {@code biotech.osla.Command}
     *
     * <pre>
     * 通用指令
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.slark.pengder.protocol.MessageProtos.Command, Builder>
        implements com.slark.pengder.protocol.MessageProtos.CommandOrBuilder {
      // Construct using com.slark.pengder.protocol.MessageProtos.Command.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        option_ = com.slark.pengder.protocol.MessageProtos.Command.Option.CLIENT_RECV_OK;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.slark.pengder.protocol.MessageProtos.Command getDefaultInstanceForType() {
        return com.slark.pengder.protocol.MessageProtos.Command.getDefaultInstance();
      }

      public com.slark.pengder.protocol.MessageProtos.Command build() {
        com.slark.pengder.protocol.MessageProtos.Command result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.slark.pengder.protocol.MessageProtos.Command buildPartial() {
        com.slark.pengder.protocol.MessageProtos.Command result = new com.slark.pengder.protocol.MessageProtos.Command(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.option_ = option_;
        result.bitField0_ = to_bitField0_;
        return result;
      }

      public Builder mergeFrom(com.slark.pengder.protocol.MessageProtos.Command other) {
        if (other == com.slark.pengder.protocol.MessageProtos.Command.getDefaultInstance()) return this;
        if (other.hasOption()) {
          setOption(other.getOption());
        }
        return this;
      }

      public final boolean isInitialized() {
        if (!hasOption()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.slark.pengder.protocol.MessageProtos.Command parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.slark.pengder.protocol.MessageProtos.Command) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required .biotech.osla.Command.Option option = 1;
      private com.slark.pengder.protocol.MessageProtos.Command.Option option_ = com.slark.pengder.protocol.MessageProtos.Command.Option.CLIENT_RECV_OK;
      /**
       * <code>required .biotech.osla.Command.Option option = 1;</code>
       *
       * <pre>
       * 命令参数
       * </pre>
       */
      public boolean hasOption() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required .biotech.osla.Command.Option option = 1;</code>
       *
       * <pre>
       * 命令参数
       * </pre>
       */
      public com.slark.pengder.protocol.MessageProtos.Command.Option getOption() {
        return option_;
      }
      /**
       * <code>required .biotech.osla.Command.Option option = 1;</code>
       *
       * <pre>
       * 命令参数
       * </pre>
       */
      public Builder setOption(com.slark.pengder.protocol.MessageProtos.Command.Option value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        option_ = value;
        
        return this;
      }
      /**
       * <code>required .biotech.osla.Command.Option option = 1;</code>
       *
       * <pre>
       * 命令参数
       * </pre>
       */
      public Builder clearOption() {
        bitField0_ = (bitField0_ & ~0x00000001);
        option_ = com.slark.pengder.protocol.MessageProtos.Command.Option.CLIENT_RECV_OK;
        
        return this;
      }

      // @@protoc_insertion_point(builder_scope:biotech.osla.Command)
    }

    static {
      defaultInstance = new Command(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:biotech.osla.Command)
  }

  public interface InstrumentOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {

    // required int32 id = 1;
    /**
     * <code>required int32 id = 1;</code>
     *
     * <pre>
     * 仪器ID
     * </pre>
     */
    boolean hasId();
    /**
     * <code>required int32 id = 1;</code>
     *
     * <pre>
     * 仪器ID
     * </pre>
     */
    int getId();

    // required string name = 2;
    /**
     * <code>required string name = 2;</code>
     *
     * <pre>
     * 仪器名称
     * </pre>
     */
    boolean hasName();
    /**
     * <code>required string name = 2;</code>
     *
     * <pre>
     * 仪器名称
     * </pre>
     */
    java.lang.String getName();
    /**
     * <code>required string name = 2;</code>
     *
     * <pre>
     * 仪器名称
     * </pre>
     */
    com.google.protobuf.ByteString
        getNameBytes();

    // required string org_code = 3;
    /**
     * <code>required string org_code = 3;</code>
     *
     * <pre>
     * 学院编码,new 170524
     * </pre>
     */
    boolean hasOrgCode();
    /**
     * <code>required string org_code = 3;</code>
     *
     * <pre>
     * 学院编码,new 170524
     * </pre>
     */
    java.lang.String getOrgCode();
    /**
     * <code>required string org_code = 3;</code>
     *
     * <pre>
     * 学院编码,new 170524
     * </pre>
     */
    com.google.protobuf.ByteString
        getOrgCodeBytes();
  }
  /**
   * Protobuf type {@code biotech.osla.Instrument}
   *
   * <pre>
   * 仪器
   * </pre>
   */
  public static final class Instrument extends
      com.google.protobuf.GeneratedMessageLite
      implements InstrumentOrBuilder {
    // Use Instrument.newBuilder() to construct.
    private Instrument(com.google.protobuf.GeneratedMessageLite.Builder builder) {
      super(builder);

    }
    private Instrument(boolean noInit) {}

    private static final Instrument defaultInstance;
    public static Instrument getDefaultInstance() {
      return defaultInstance;
    }

    public Instrument getDefaultInstanceForType() {
      return defaultInstance;
    }

    private Instrument(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              id_ = input.readInt32();
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              name_ = input.readBytes();
              break;
            }
            case 26: {
              bitField0_ |= 0x00000004;
              orgCode_ = input.readBytes();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static com.google.protobuf.Parser<Instrument> PARSER =
        new com.google.protobuf.AbstractParser<Instrument>() {
      public Instrument parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Instrument(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<Instrument> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required int32 id = 1;
    public static final int ID_FIELD_NUMBER = 1;
    private int id_;
    /**
     * <code>required int32 id = 1;</code>
     *
     * <pre>
     * 仪器ID
     * </pre>
     */
    public boolean hasId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int32 id = 1;</code>
     *
     * <pre>
     * 仪器ID
     * </pre>
     */
    public int getId() {
      return id_;
    }

    // required string name = 2;
    public static final int NAME_FIELD_NUMBER = 2;
    private java.lang.Object name_;
    /**
     * <code>required string name = 2;</code>
     *
     * <pre>
     * 仪器名称
     * </pre>
     */
    public boolean hasName() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required string name = 2;</code>
     *
     * <pre>
     * 仪器名称
     * </pre>
     */
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          name_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string name = 2;</code>
     *
     * <pre>
     * 仪器名称
     * </pre>
     */
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // required string org_code = 3;
    public static final int ORG_CODE_FIELD_NUMBER = 3;
    private java.lang.Object orgCode_;
    /**
     * <code>required string org_code = 3;</code>
     *
     * <pre>
     * 学院编码,new 170524
     * </pre>
     */
    public boolean hasOrgCode() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required string org_code = 3;</code>
     *
     * <pre>
     * 学院编码,new 170524
     * </pre>
     */
    public java.lang.String getOrgCode() {
      java.lang.Object ref = orgCode_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          orgCode_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string org_code = 3;</code>
     *
     * <pre>
     * 学院编码,new 170524
     * </pre>
     */
    public com.google.protobuf.ByteString
        getOrgCodeBytes() {
      java.lang.Object ref = orgCode_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        orgCode_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private void initFields() {
      id_ = 0;
      name_ = "";
      orgCode_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasName()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasOrgCode()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, id_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getNameBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBytes(3, getOrgCodeBytes());
      }
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, id_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getNameBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, getOrgCodeBytes());
      }
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.slark.pengder.protocol.MessageProtos.Instrument parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.slark.pengder.protocol.MessageProtos.Instrument parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.slark.pengder.protocol.MessageProtos.Instrument parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.slark.pengder.protocol.MessageProtos.Instrument parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.slark.pengder.protocol.MessageProtos.Instrument parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.slark.pengder.protocol.MessageProtos.Instrument parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.slark.pengder.protocol.MessageProtos.Instrument parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.slark.pengder.protocol.MessageProtos.Instrument parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.slark.pengder.protocol.MessageProtos.Instrument parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.slark.pengder.protocol.MessageProtos.Instrument parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.slark.pengder.protocol.MessageProtos.Instrument prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    /**
     * Protobuf type {@code biotech.osla.Instrument}
     *
     * <pre>
     * 仪器
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.slark.pengder.protocol.MessageProtos.Instrument, Builder>
        implements com.slark.pengder.protocol.MessageProtos.InstrumentOrBuilder {
      // Construct using com.slark.pengder.protocol.MessageProtos.Instrument.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        id_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        name_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        orgCode_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.slark.pengder.protocol.MessageProtos.Instrument getDefaultInstanceForType() {
        return com.slark.pengder.protocol.MessageProtos.Instrument.getDefaultInstance();
      }

      public com.slark.pengder.protocol.MessageProtos.Instrument build() {
        com.slark.pengder.protocol.MessageProtos.Instrument result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.slark.pengder.protocol.MessageProtos.Instrument buildPartial() {
        com.slark.pengder.protocol.MessageProtos.Instrument result = new com.slark.pengder.protocol.MessageProtos.Instrument(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.id_ = id_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.name_ = name_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.orgCode_ = orgCode_;
        result.bitField0_ = to_bitField0_;
        return result;
      }

      public Builder mergeFrom(com.slark.pengder.protocol.MessageProtos.Instrument other) {
        if (other == com.slark.pengder.protocol.MessageProtos.Instrument.getDefaultInstance()) return this;
        if (other.hasId()) {
          setId(other.getId());
        }
        if (other.hasName()) {
          bitField0_ |= 0x00000002;
          name_ = other.name_;
          
        }
        if (other.hasOrgCode()) {
          bitField0_ |= 0x00000004;
          orgCode_ = other.orgCode_;
          
        }
        return this;
      }

      public final boolean isInitialized() {
        if (!hasId()) {
          
          return false;
        }
        if (!hasName()) {
          
          return false;
        }
        if (!hasOrgCode()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.slark.pengder.protocol.MessageProtos.Instrument parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.slark.pengder.protocol.MessageProtos.Instrument) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required int32 id = 1;
      private int id_ ;
      /**
       * <code>required int32 id = 1;</code>
       *
       * <pre>
       * 仪器ID
       * </pre>
       */
      public boolean hasId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int32 id = 1;</code>
       *
       * <pre>
       * 仪器ID
       * </pre>
       */
      public int getId() {
        return id_;
      }
      /**
       * <code>required int32 id = 1;</code>
       *
       * <pre>
       * 仪器ID
       * </pre>
       */
      public Builder setId(int value) {
        bitField0_ |= 0x00000001;
        id_ = value;
        
        return this;
      }
      /**
       * <code>required int32 id = 1;</code>
       *
       * <pre>
       * 仪器ID
       * </pre>
       */
      public Builder clearId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        id_ = 0;
        
        return this;
      }

      // required string name = 2;
      private java.lang.Object name_ = "";
      /**
       * <code>required string name = 2;</code>
       *
       * <pre>
       * 仪器名称
       * </pre>
       */
      public boolean hasName() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required string name = 2;</code>
       *
       * <pre>
       * 仪器名称
       * </pre>
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          name_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string name = 2;</code>
       *
       * <pre>
       * 仪器名称
       * </pre>
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string name = 2;</code>
       *
       * <pre>
       * 仪器名称
       * </pre>
       */
      public Builder setName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        name_ = value;
        
        return this;
      }
      /**
       * <code>required string name = 2;</code>
       *
       * <pre>
       * 仪器名称
       * </pre>
       */
      public Builder clearName() {
        bitField0_ = (bitField0_ & ~0x00000002);
        name_ = getDefaultInstance().getName();
        
        return this;
      }
      /**
       * <code>required string name = 2;</code>
       *
       * <pre>
       * 仪器名称
       * </pre>
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        name_ = value;
        
        return this;
      }

      // required string org_code = 3;
      private java.lang.Object orgCode_ = "";
      /**
       * <code>required string org_code = 3;</code>
       *
       * <pre>
       * 学院编码,new 170524
       * </pre>
       */
      public boolean hasOrgCode() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required string org_code = 3;</code>
       *
       * <pre>
       * 学院编码,new 170524
       * </pre>
       */
      public java.lang.String getOrgCode() {
        java.lang.Object ref = orgCode_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          orgCode_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string org_code = 3;</code>
       *
       * <pre>
       * 学院编码,new 170524
       * </pre>
       */
      public com.google.protobuf.ByteString
          getOrgCodeBytes() {
        java.lang.Object ref = orgCode_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          orgCode_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string org_code = 3;</code>
       *
       * <pre>
       * 学院编码,new 170524
       * </pre>
       */
      public Builder setOrgCode(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        orgCode_ = value;
        
        return this;
      }
      /**
       * <code>required string org_code = 3;</code>
       *
       * <pre>
       * 学院编码,new 170524
       * </pre>
       */
      public Builder clearOrgCode() {
        bitField0_ = (bitField0_ & ~0x00000004);
        orgCode_ = getDefaultInstance().getOrgCode();
        
        return this;
      }
      /**
       * <code>required string org_code = 3;</code>
       *
       * <pre>
       * 学院编码,new 170524
       * </pre>
       */
      public Builder setOrgCodeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        orgCode_ = value;
        
        return this;
      }

      // @@protoc_insertion_point(builder_scope:biotech.osla.Instrument)
    }

    static {
      defaultInstance = new Instrument(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:biotech.osla.Instrument)
  }

  public interface InstrumentListOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {

    // repeated .biotech.osla.Instrument instrument = 1;
    /**
     * <code>repeated .biotech.osla.Instrument instrument = 1;</code>
     */
    java.util.List<com.slark.pengder.protocol.MessageProtos.Instrument> 
        getInstrumentList();
    /**
     * <code>repeated .biotech.osla.Instrument instrument = 1;</code>
     */
    com.slark.pengder.protocol.MessageProtos.Instrument getInstrument(int index);
    /**
     * <code>repeated .biotech.osla.Instrument instrument = 1;</code>
     */
    int getInstrumentCount();
  }
  /**
   * Protobuf type {@code biotech.osla.InstrumentList}
   *
   * <pre>
   * 仪器列表
   * </pre>
   */
  public static final class InstrumentList extends
      com.google.protobuf.GeneratedMessageLite
      implements InstrumentListOrBuilder {
    // Use InstrumentList.newBuilder() to construct.
    private InstrumentList(com.google.protobuf.GeneratedMessageLite.Builder builder) {
      super(builder);

    }
    private InstrumentList(boolean noInit) {}

    private static final InstrumentList defaultInstance;
    public static InstrumentList getDefaultInstance() {
      return defaultInstance;
    }

    public InstrumentList getDefaultInstanceForType() {
      return defaultInstance;
    }

    private InstrumentList(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                instrument_ = new java.util.ArrayList<com.slark.pengder.protocol.MessageProtos.Instrument>();
                mutable_bitField0_ |= 0x00000001;
              }
              instrument_.add(input.readMessage(com.slark.pengder.protocol.MessageProtos.Instrument.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          instrument_ = java.util.Collections.unmodifiableList(instrument_);
        }
        makeExtensionsImmutable();
      }
    }
    public static com.google.protobuf.Parser<InstrumentList> PARSER =
        new com.google.protobuf.AbstractParser<InstrumentList>() {
      public InstrumentList parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new InstrumentList(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<InstrumentList> getParserForType() {
      return PARSER;
    }

    // repeated .biotech.osla.Instrument instrument = 1;
    public static final int INSTRUMENT_FIELD_NUMBER = 1;
    private java.util.List<com.slark.pengder.protocol.MessageProtos.Instrument> instrument_;
    /**
     * <code>repeated .biotech.osla.Instrument instrument = 1;</code>
     */
    public java.util.List<com.slark.pengder.protocol.MessageProtos.Instrument> getInstrumentList() {
      return instrument_;
    }
    /**
     * <code>repeated .biotech.osla.Instrument instrument = 1;</code>
     */
    public java.util.List<? extends com.slark.pengder.protocol.MessageProtos.InstrumentOrBuilder> 
        getInstrumentOrBuilderList() {
      return instrument_;
    }
    /**
     * <code>repeated .biotech.osla.Instrument instrument = 1;</code>
     */
    public int getInstrumentCount() {
      return instrument_.size();
    }
    /**
     * <code>repeated .biotech.osla.Instrument instrument = 1;</code>
     */
    public com.slark.pengder.protocol.MessageProtos.Instrument getInstrument(int index) {
      return instrument_.get(index);
    }
    /**
     * <code>repeated .biotech.osla.Instrument instrument = 1;</code>
     */
    public com.slark.pengder.protocol.MessageProtos.InstrumentOrBuilder getInstrumentOrBuilder(
        int index) {
      return instrument_.get(index);
    }

    private void initFields() {
      instrument_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      for (int i = 0; i < getInstrumentCount(); i++) {
        if (!getInstrument(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < instrument_.size(); i++) {
        output.writeMessage(1, instrument_.get(i));
      }
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < instrument_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, instrument_.get(i));
      }
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.slark.pengder.protocol.MessageProtos.InstrumentList parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.slark.pengder.protocol.MessageProtos.InstrumentList parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.slark.pengder.protocol.MessageProtos.InstrumentList parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.slark.pengder.protocol.MessageProtos.InstrumentList parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.slark.pengder.protocol.MessageProtos.InstrumentList parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.slark.pengder.protocol.MessageProtos.InstrumentList parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.slark.pengder.protocol.MessageProtos.InstrumentList parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.slark.pengder.protocol.MessageProtos.InstrumentList parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.slark.pengder.protocol.MessageProtos.InstrumentList parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.slark.pengder.protocol.MessageProtos.InstrumentList parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.slark.pengder.protocol.MessageProtos.InstrumentList prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    /**
     * Protobuf type {@code biotech.osla.InstrumentList}
     *
     * <pre>
     * 仪器列表
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.slark.pengder.protocol.MessageProtos.InstrumentList, Builder>
        implements com.slark.pengder.protocol.MessageProtos.InstrumentListOrBuilder {
      // Construct using com.slark.pengder.protocol.MessageProtos.InstrumentList.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        instrument_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.slark.pengder.protocol.MessageProtos.InstrumentList getDefaultInstanceForType() {
        return com.slark.pengder.protocol.MessageProtos.InstrumentList.getDefaultInstance();
      }

      public com.slark.pengder.protocol.MessageProtos.InstrumentList build() {
        com.slark.pengder.protocol.MessageProtos.InstrumentList result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.slark.pengder.protocol.MessageProtos.InstrumentList buildPartial() {
        com.slark.pengder.protocol.MessageProtos.InstrumentList result = new com.slark.pengder.protocol.MessageProtos.InstrumentList(this);
        int from_bitField0_ = bitField0_;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          instrument_ = java.util.Collections.unmodifiableList(instrument_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.instrument_ = instrument_;
        return result;
      }

      public Builder mergeFrom(com.slark.pengder.protocol.MessageProtos.InstrumentList other) {
        if (other == com.slark.pengder.protocol.MessageProtos.InstrumentList.getDefaultInstance()) return this;
        if (!other.instrument_.isEmpty()) {
          if (instrument_.isEmpty()) {
            instrument_ = other.instrument_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureInstrumentIsMutable();
            instrument_.addAll(other.instrument_);
          }
          
        }
        return this;
      }

      public final boolean isInitialized() {
        for (int i = 0; i < getInstrumentCount(); i++) {
          if (!getInstrument(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.slark.pengder.protocol.MessageProtos.InstrumentList parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.slark.pengder.protocol.MessageProtos.InstrumentList) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // repeated .biotech.osla.Instrument instrument = 1;
      private java.util.List<com.slark.pengder.protocol.MessageProtos.Instrument> instrument_ =
        java.util.Collections.emptyList();
      private void ensureInstrumentIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          instrument_ = new java.util.ArrayList<com.slark.pengder.protocol.MessageProtos.Instrument>(instrument_);
          bitField0_ |= 0x00000001;
         }
      }

      /**
       * <code>repeated .biotech.osla.Instrument instrument = 1;</code>
       */
      public java.util.List<com.slark.pengder.protocol.MessageProtos.Instrument> getInstrumentList() {
        return java.util.Collections.unmodifiableList(instrument_);
      }
      /**
       * <code>repeated .biotech.osla.Instrument instrument = 1;</code>
       */
      public int getInstrumentCount() {
        return instrument_.size();
      }
      /**
       * <code>repeated .biotech.osla.Instrument instrument = 1;</code>
       */
      public com.slark.pengder.protocol.MessageProtos.Instrument getInstrument(int index) {
        return instrument_.get(index);
      }
      /**
       * <code>repeated .biotech.osla.Instrument instrument = 1;</code>
       */
      public Builder setInstrument(
          int index, com.slark.pengder.protocol.MessageProtos.Instrument value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureInstrumentIsMutable();
        instrument_.set(index, value);

        return this;
      }
      /**
       * <code>repeated .biotech.osla.Instrument instrument = 1;</code>
       */
      public Builder setInstrument(
          int index, com.slark.pengder.protocol.MessageProtos.Instrument.Builder builderForValue) {
        ensureInstrumentIsMutable();
        instrument_.set(index, builderForValue.build());

        return this;
      }
      /**
       * <code>repeated .biotech.osla.Instrument instrument = 1;</code>
       */
      public Builder addInstrument(com.slark.pengder.protocol.MessageProtos.Instrument value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureInstrumentIsMutable();
        instrument_.add(value);

        return this;
      }
      /**
       * <code>repeated .biotech.osla.Instrument instrument = 1;</code>
       */
      public Builder addInstrument(
          int index, com.slark.pengder.protocol.MessageProtos.Instrument value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureInstrumentIsMutable();
        instrument_.add(index, value);

        return this;
      }
      /**
       * <code>repeated .biotech.osla.Instrument instrument = 1;</code>
       */
      public Builder addInstrument(
          com.slark.pengder.protocol.MessageProtos.Instrument.Builder builderForValue) {
        ensureInstrumentIsMutable();
        instrument_.add(builderForValue.build());

        return this;
      }
      /**
       * <code>repeated .biotech.osla.Instrument instrument = 1;</code>
       */
      public Builder addInstrument(
          int index, com.slark.pengder.protocol.MessageProtos.Instrument.Builder builderForValue) {
        ensureInstrumentIsMutable();
        instrument_.add(index, builderForValue.build());

        return this;
      }
      /**
       * <code>repeated .biotech.osla.Instrument instrument = 1;</code>
       */
      public Builder addAllInstrument(
          java.lang.Iterable<? extends com.slark.pengder.protocol.MessageProtos.Instrument> values) {
        ensureInstrumentIsMutable();
        super.addAll(values, instrument_);

        return this;
      }
      /**
       * <code>repeated .biotech.osla.Instrument instrument = 1;</code>
       */
      public Builder clearInstrument() {
        instrument_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);

        return this;
      }
      /**
       * <code>repeated .biotech.osla.Instrument instrument = 1;</code>
       */
      public Builder removeInstrument(int index) {
        ensureInstrumentIsMutable();
        instrument_.remove(index);

        return this;
      }

      // @@protoc_insertion_point(builder_scope:biotech.osla.InstrumentList)
    }

    static {
      defaultInstance = new InstrumentList(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:biotech.osla.InstrumentList)
  }

  public interface InstrumentBindingOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {

    // required int32 instrument_id = 1;
    /**
     * <code>required int32 instrument_id = 1;</code>
     *
     * <pre>
     * 仪器ID
     * </pre>
     */
    boolean hasInstrumentId();
    /**
     * <code>required int32 instrument_id = 1;</code>
     *
     * <pre>
     * 仪器ID
     * </pre>
     */
    int getInstrumentId();

    // required string client_mac_addr = 2;
    /**
     * <code>required string client_mac_addr = 2;</code>
     *
     * <pre>
     * 客户端MAC地址
     * </pre>
     */
    boolean hasClientMacAddr();
    /**
     * <code>required string client_mac_addr = 2;</code>
     *
     * <pre>
     * 客户端MAC地址
     * </pre>
     */
    java.lang.String getClientMacAddr();
    /**
     * <code>required string client_mac_addr = 2;</code>
     *
     * <pre>
     * 客户端MAC地址
     * </pre>
     */
    com.google.protobuf.ByteString
        getClientMacAddrBytes();

    // required int32 client_model = 3;
    /**
     * <code>required int32 client_model = 3;</code>
     *
     * <pre>
     * 客户端型号
     * </pre>
     */
    boolean hasClientModel();
    /**
     * <code>required int32 client_model = 3;</code>
     *
     * <pre>
     * 客户端型号
     * </pre>
     */
    int getClientModel();

    // required string client_version = 4;
    /**
     * <code>required string client_version = 4;</code>
     *
     * <pre>
     * 客户端版本
     * </pre>
     */
    boolean hasClientVersion();
    /**
     * <code>required string client_version = 4;</code>
     *
     * <pre>
     * 客户端版本
     * </pre>
     */
    java.lang.String getClientVersion();
    /**
     * <code>required string client_version = 4;</code>
     *
     * <pre>
     * 客户端版本
     * </pre>
     */
    com.google.protobuf.ByteString
        getClientVersionBytes();

    // required .biotech.osla.InstrumentBinding.Option option = 5;
    /**
     * <code>required .biotech.osla.InstrumentBinding.Option option = 5;</code>
     */
    boolean hasOption();
    /**
     * <code>required .biotech.osla.InstrumentBinding.Option option = 5;</code>
     */
    com.slark.pengder.protocol.MessageProtos.InstrumentBinding.Option getOption();

    // optional string bindCode = 6;
    /**
     * <code>optional string bindCode = 6;</code>
     *
     * <pre>
     *&#47; 绑定时使用的编码
     * </pre>
     */
    boolean hasBindCode();
    /**
     * <code>optional string bindCode = 6;</code>
     *
     * <pre>
     *&#47; 绑定时使用的编码
     * </pre>
     */
    java.lang.String getBindCode();
    /**
     * <code>optional string bindCode = 6;</code>
     *
     * <pre>
     *&#47; 绑定时使用的编码
     * </pre>
     */
    com.google.protobuf.ByteString
        getBindCodeBytes();
  }
  /**
   * Protobuf type {@code biotech.osla.InstrumentBinding}
   *
   * <pre>
   * 仪器绑定
   * </pre>
   */
  public static final class InstrumentBinding extends
      com.google.protobuf.GeneratedMessageLite
      implements InstrumentBindingOrBuilder {
    // Use InstrumentBinding.newBuilder() to construct.
    private InstrumentBinding(com.google.protobuf.GeneratedMessageLite.Builder builder) {
      super(builder);

    }
    private InstrumentBinding(boolean noInit) {}

    private static final InstrumentBinding defaultInstance;
    public static InstrumentBinding getDefaultInstance() {
      return defaultInstance;
    }

    public InstrumentBinding getDefaultInstanceForType() {
      return defaultInstance;
    }

    private InstrumentBinding(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              instrumentId_ = input.readInt32();
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              clientMacAddr_ = input.readBytes();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              clientModel_ = input.readInt32();
              break;
            }
            case 34: {
              bitField0_ |= 0x00000008;
              clientVersion_ = input.readBytes();
              break;
            }
            case 40: {
              int rawValue = input.readEnum();
              com.slark.pengder.protocol.MessageProtos.InstrumentBinding.Option value = com.slark.pengder.protocol.MessageProtos.InstrumentBinding.Option.valueOf(rawValue);
              if (value != null) {
                bitField0_ |= 0x00000010;
                option_ = value;
              }
              break;
            }
            case 50: {
              bitField0_ |= 0x00000020;
              bindCode_ = input.readBytes();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static com.google.protobuf.Parser<InstrumentBinding> PARSER =
        new com.google.protobuf.AbstractParser<InstrumentBinding>() {
      public InstrumentBinding parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new InstrumentBinding(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<InstrumentBinding> getParserForType() {
      return PARSER;
    }

    /**
     * Protobuf enum {@code biotech.osla.InstrumentBinding.Option}
     */
    public enum Option
        implements com.google.protobuf.Internal.EnumLite {
      /**
       * <code>REQUEST_BINDING = 0;</code>
       *
       * <pre>
       * 请求绑定
       * </pre>
       */
      REQUEST_BINDING(0, 0),
      /**
       * <code>CONFIRM_BINDING = 1;</code>
       *
       * <pre>
       * 确认绑定
       * </pre>
       */
      CONFIRM_BINDING(1, 1),
      /**
       * <code>RELEASE_BINDING = 2;</code>
       *
       * <pre>
       * 解除绑定
       * </pre>
       */
      RELEASE_BINDING(2, 2),
      ;

      /**
       * <code>REQUEST_BINDING = 0;</code>
       *
       * <pre>
       * 请求绑定
       * </pre>
       */
      public static final int REQUEST_BINDING_VALUE = 0;
      /**
       * <code>CONFIRM_BINDING = 1;</code>
       *
       * <pre>
       * 确认绑定
       * </pre>
       */
      public static final int CONFIRM_BINDING_VALUE = 1;
      /**
       * <code>RELEASE_BINDING = 2;</code>
       *
       * <pre>
       * 解除绑定
       * </pre>
       */
      public static final int RELEASE_BINDING_VALUE = 2;


      public final int getNumber() { return value; }

      public static Option valueOf(int value) {
        switch (value) {
          case 0: return REQUEST_BINDING;
          case 1: return CONFIRM_BINDING;
          case 2: return RELEASE_BINDING;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<Option>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static com.google.protobuf.Internal.EnumLiteMap<Option>
          internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<Option>() {
              public Option findValueByNumber(int number) {
                return Option.valueOf(number);
              }
            };

      private final int value;

      private Option(int index, int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:biotech.osla.InstrumentBinding.Option)
    }

    private int bitField0_;
    // required int32 instrument_id = 1;
    public static final int INSTRUMENT_ID_FIELD_NUMBER = 1;
    private int instrumentId_;
    /**
     * <code>required int32 instrument_id = 1;</code>
     *
     * <pre>
     * 仪器ID
     * </pre>
     */
    public boolean hasInstrumentId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int32 instrument_id = 1;</code>
     *
     * <pre>
     * 仪器ID
     * </pre>
     */
    public int getInstrumentId() {
      return instrumentId_;
    }

    // required string client_mac_addr = 2;
    public static final int CLIENT_MAC_ADDR_FIELD_NUMBER = 2;
    private java.lang.Object clientMacAddr_;
    /**
     * <code>required string client_mac_addr = 2;</code>
     *
     * <pre>
     * 客户端MAC地址
     * </pre>
     */
    public boolean hasClientMacAddr() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required string client_mac_addr = 2;</code>
     *
     * <pre>
     * 客户端MAC地址
     * </pre>
     */
    public java.lang.String getClientMacAddr() {
      java.lang.Object ref = clientMacAddr_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          clientMacAddr_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string client_mac_addr = 2;</code>
     *
     * <pre>
     * 客户端MAC地址
     * </pre>
     */
    public com.google.protobuf.ByteString
        getClientMacAddrBytes() {
      java.lang.Object ref = clientMacAddr_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        clientMacAddr_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // required int32 client_model = 3;
    public static final int CLIENT_MODEL_FIELD_NUMBER = 3;
    private int clientModel_;
    /**
     * <code>required int32 client_model = 3;</code>
     *
     * <pre>
     * 客户端型号
     * </pre>
     */
    public boolean hasClientModel() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required int32 client_model = 3;</code>
     *
     * <pre>
     * 客户端型号
     * </pre>
     */
    public int getClientModel() {
      return clientModel_;
    }

    // required string client_version = 4;
    public static final int CLIENT_VERSION_FIELD_NUMBER = 4;
    private java.lang.Object clientVersion_;
    /**
     * <code>required string client_version = 4;</code>
     *
     * <pre>
     * 客户端版本
     * </pre>
     */
    public boolean hasClientVersion() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>required string client_version = 4;</code>
     *
     * <pre>
     * 客户端版本
     * </pre>
     */
    public java.lang.String getClientVersion() {
      java.lang.Object ref = clientVersion_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          clientVersion_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string client_version = 4;</code>
     *
     * <pre>
     * 客户端版本
     * </pre>
     */
    public com.google.protobuf.ByteString
        getClientVersionBytes() {
      java.lang.Object ref = clientVersion_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        clientVersion_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // required .biotech.osla.InstrumentBinding.Option option = 5;
    public static final int OPTION_FIELD_NUMBER = 5;
    private com.slark.pengder.protocol.MessageProtos.InstrumentBinding.Option option_;
    /**
     * <code>required .biotech.osla.InstrumentBinding.Option option = 5;</code>
     */
    public boolean hasOption() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>required .biotech.osla.InstrumentBinding.Option option = 5;</code>
     */
    public com.slark.pengder.protocol.MessageProtos.InstrumentBinding.Option getOption() {
      return option_;
    }

    // optional string bindCode = 6;
    public static final int BINDCODE_FIELD_NUMBER = 6;
    private java.lang.Object bindCode_;
    /**
     * <code>optional string bindCode = 6;</code>
     *
     * <pre>
     *&#47; 绑定时使用的编码
     * </pre>
     */
    public boolean hasBindCode() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional string bindCode = 6;</code>
     *
     * <pre>
     *&#47; 绑定时使用的编码
     * </pre>
     */
    public java.lang.String getBindCode() {
      java.lang.Object ref = bindCode_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          bindCode_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string bindCode = 6;</code>
     *
     * <pre>
     *&#47; 绑定时使用的编码
     * </pre>
     */
    public com.google.protobuf.ByteString
        getBindCodeBytes() {
      java.lang.Object ref = bindCode_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        bindCode_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private void initFields() {
      instrumentId_ = 0;
      clientMacAddr_ = "";
      clientModel_ = 0;
      clientVersion_ = "";
      option_ = com.slark.pengder.protocol.MessageProtos.InstrumentBinding.Option.REQUEST_BINDING;
      bindCode_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasInstrumentId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasClientMacAddr()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasClientModel()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasClientVersion()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasOption()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, instrumentId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getClientMacAddrBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, clientModel_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeBytes(4, getClientVersionBytes());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeEnum(5, option_.getNumber());
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeBytes(6, getBindCodeBytes());
      }
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, instrumentId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getClientMacAddrBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, clientModel_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(4, getClientVersionBytes());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(5, option_.getNumber());
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(6, getBindCodeBytes());
      }
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.slark.pengder.protocol.MessageProtos.InstrumentBinding parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.slark.pengder.protocol.MessageProtos.InstrumentBinding parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.slark.pengder.protocol.MessageProtos.InstrumentBinding parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.slark.pengder.protocol.MessageProtos.InstrumentBinding parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.slark.pengder.protocol.MessageProtos.InstrumentBinding parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.slark.pengder.protocol.MessageProtos.InstrumentBinding parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.slark.pengder.protocol.MessageProtos.InstrumentBinding parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.slark.pengder.protocol.MessageProtos.InstrumentBinding parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.slark.pengder.protocol.MessageProtos.InstrumentBinding parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.slark.pengder.protocol.MessageProtos.InstrumentBinding parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.slark.pengder.protocol.MessageProtos.InstrumentBinding prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    /**
     * Protobuf type {@code biotech.osla.InstrumentBinding}
     *
     * <pre>
     * 仪器绑定
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.slark.pengder.protocol.MessageProtos.InstrumentBinding, Builder>
        implements com.slark.pengder.protocol.MessageProtos.InstrumentBindingOrBuilder {
      // Construct using com.slark.pengder.protocol.MessageProtos.InstrumentBinding.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        instrumentId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        clientMacAddr_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        clientModel_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        clientVersion_ = "";
        bitField0_ = (bitField0_ & ~0x00000008);
        option_ = com.slark.pengder.protocol.MessageProtos.InstrumentBinding.Option.REQUEST_BINDING;
        bitField0_ = (bitField0_ & ~0x00000010);
        bindCode_ = "";
        bitField0_ = (bitField0_ & ~0x00000020);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.slark.pengder.protocol.MessageProtos.InstrumentBinding getDefaultInstanceForType() {
        return com.slark.pengder.protocol.MessageProtos.InstrumentBinding.getDefaultInstance();
      }

      public com.slark.pengder.protocol.MessageProtos.InstrumentBinding build() {
        com.slark.pengder.protocol.MessageProtos.InstrumentBinding result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.slark.pengder.protocol.MessageProtos.InstrumentBinding buildPartial() {
        com.slark.pengder.protocol.MessageProtos.InstrumentBinding result = new com.slark.pengder.protocol.MessageProtos.InstrumentBinding(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.instrumentId_ = instrumentId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.clientMacAddr_ = clientMacAddr_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.clientModel_ = clientModel_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.clientVersion_ = clientVersion_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.option_ = option_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.bindCode_ = bindCode_;
        result.bitField0_ = to_bitField0_;
        return result;
      }

      public Builder mergeFrom(com.slark.pengder.protocol.MessageProtos.InstrumentBinding other) {
        if (other == com.slark.pengder.protocol.MessageProtos.InstrumentBinding.getDefaultInstance()) return this;
        if (other.hasInstrumentId()) {
          setInstrumentId(other.getInstrumentId());
        }
        if (other.hasClientMacAddr()) {
          bitField0_ |= 0x00000002;
          clientMacAddr_ = other.clientMacAddr_;
          
        }
        if (other.hasClientModel()) {
          setClientModel(other.getClientModel());
        }
        if (other.hasClientVersion()) {
          bitField0_ |= 0x00000008;
          clientVersion_ = other.clientVersion_;
          
        }
        if (other.hasOption()) {
          setOption(other.getOption());
        }
        if (other.hasBindCode()) {
          bitField0_ |= 0x00000020;
          bindCode_ = other.bindCode_;
          
        }
        return this;
      }

      public final boolean isInitialized() {
        if (!hasInstrumentId()) {
          
          return false;
        }
        if (!hasClientMacAddr()) {
          
          return false;
        }
        if (!hasClientModel()) {
          
          return false;
        }
        if (!hasClientVersion()) {
          
          return false;
        }
        if (!hasOption()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.slark.pengder.protocol.MessageProtos.InstrumentBinding parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.slark.pengder.protocol.MessageProtos.InstrumentBinding) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required int32 instrument_id = 1;
      private int instrumentId_ ;
      /**
       * <code>required int32 instrument_id = 1;</code>
       *
       * <pre>
       * 仪器ID
       * </pre>
       */
      public boolean hasInstrumentId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int32 instrument_id = 1;</code>
       *
       * <pre>
       * 仪器ID
       * </pre>
       */
      public int getInstrumentId() {
        return instrumentId_;
      }
      /**
       * <code>required int32 instrument_id = 1;</code>
       *
       * <pre>
       * 仪器ID
       * </pre>
       */
      public Builder setInstrumentId(int value) {
        bitField0_ |= 0x00000001;
        instrumentId_ = value;
        
        return this;
      }
      /**
       * <code>required int32 instrument_id = 1;</code>
       *
       * <pre>
       * 仪器ID
       * </pre>
       */
      public Builder clearInstrumentId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        instrumentId_ = 0;
        
        return this;
      }

      // required string client_mac_addr = 2;
      private java.lang.Object clientMacAddr_ = "";
      /**
       * <code>required string client_mac_addr = 2;</code>
       *
       * <pre>
       * 客户端MAC地址
       * </pre>
       */
      public boolean hasClientMacAddr() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required string client_mac_addr = 2;</code>
       *
       * <pre>
       * 客户端MAC地址
       * </pre>
       */
      public java.lang.String getClientMacAddr() {
        java.lang.Object ref = clientMacAddr_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          clientMacAddr_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string client_mac_addr = 2;</code>
       *
       * <pre>
       * 客户端MAC地址
       * </pre>
       */
      public com.google.protobuf.ByteString
          getClientMacAddrBytes() {
        java.lang.Object ref = clientMacAddr_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          clientMacAddr_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string client_mac_addr = 2;</code>
       *
       * <pre>
       * 客户端MAC地址
       * </pre>
       */
      public Builder setClientMacAddr(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        clientMacAddr_ = value;
        
        return this;
      }
      /**
       * <code>required string client_mac_addr = 2;</code>
       *
       * <pre>
       * 客户端MAC地址
       * </pre>
       */
      public Builder clearClientMacAddr() {
        bitField0_ = (bitField0_ & ~0x00000002);
        clientMacAddr_ = getDefaultInstance().getClientMacAddr();
        
        return this;
      }
      /**
       * <code>required string client_mac_addr = 2;</code>
       *
       * <pre>
       * 客户端MAC地址
       * </pre>
       */
      public Builder setClientMacAddrBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        clientMacAddr_ = value;
        
        return this;
      }

      // required int32 client_model = 3;
      private int clientModel_ ;
      /**
       * <code>required int32 client_model = 3;</code>
       *
       * <pre>
       * 客户端型号
       * </pre>
       */
      public boolean hasClientModel() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required int32 client_model = 3;</code>
       *
       * <pre>
       * 客户端型号
       * </pre>
       */
      public int getClientModel() {
        return clientModel_;
      }
      /**
       * <code>required int32 client_model = 3;</code>
       *
       * <pre>
       * 客户端型号
       * </pre>
       */
      public Builder setClientModel(int value) {
        bitField0_ |= 0x00000004;
        clientModel_ = value;
        
        return this;
      }
      /**
       * <code>required int32 client_model = 3;</code>
       *
       * <pre>
       * 客户端型号
       * </pre>
       */
      public Builder clearClientModel() {
        bitField0_ = (bitField0_ & ~0x00000004);
        clientModel_ = 0;
        
        return this;
      }

      // required string client_version = 4;
      private java.lang.Object clientVersion_ = "";
      /**
       * <code>required string client_version = 4;</code>
       *
       * <pre>
       * 客户端版本
       * </pre>
       */
      public boolean hasClientVersion() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>required string client_version = 4;</code>
       *
       * <pre>
       * 客户端版本
       * </pre>
       */
      public java.lang.String getClientVersion() {
        java.lang.Object ref = clientVersion_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          clientVersion_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string client_version = 4;</code>
       *
       * <pre>
       * 客户端版本
       * </pre>
       */
      public com.google.protobuf.ByteString
          getClientVersionBytes() {
        java.lang.Object ref = clientVersion_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          clientVersion_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string client_version = 4;</code>
       *
       * <pre>
       * 客户端版本
       * </pre>
       */
      public Builder setClientVersion(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        clientVersion_ = value;
        
        return this;
      }
      /**
       * <code>required string client_version = 4;</code>
       *
       * <pre>
       * 客户端版本
       * </pre>
       */
      public Builder clearClientVersion() {
        bitField0_ = (bitField0_ & ~0x00000008);
        clientVersion_ = getDefaultInstance().getClientVersion();
        
        return this;
      }
      /**
       * <code>required string client_version = 4;</code>
       *
       * <pre>
       * 客户端版本
       * </pre>
       */
      public Builder setClientVersionBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        clientVersion_ = value;
        
        return this;
      }

      // required .biotech.osla.InstrumentBinding.Option option = 5;
      private com.slark.pengder.protocol.MessageProtos.InstrumentBinding.Option option_ = com.slark.pengder.protocol.MessageProtos.InstrumentBinding.Option.REQUEST_BINDING;
      /**
       * <code>required .biotech.osla.InstrumentBinding.Option option = 5;</code>
       */
      public boolean hasOption() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>required .biotech.osla.InstrumentBinding.Option option = 5;</code>
       */
      public com.slark.pengder.protocol.MessageProtos.InstrumentBinding.Option getOption() {
        return option_;
      }
      /**
       * <code>required .biotech.osla.InstrumentBinding.Option option = 5;</code>
       */
      public Builder setOption(com.slark.pengder.protocol.MessageProtos.InstrumentBinding.Option value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000010;
        option_ = value;
        
        return this;
      }
      /**
       * <code>required .biotech.osla.InstrumentBinding.Option option = 5;</code>
       */
      public Builder clearOption() {
        bitField0_ = (bitField0_ & ~0x00000010);
        option_ = com.slark.pengder.protocol.MessageProtos.InstrumentBinding.Option.REQUEST_BINDING;
        
        return this;
      }

      // optional string bindCode = 6;
      private java.lang.Object bindCode_ = "";
      /**
       * <code>optional string bindCode = 6;</code>
       *
       * <pre>
       *&#47; 绑定时使用的编码
       * </pre>
       */
      public boolean hasBindCode() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional string bindCode = 6;</code>
       *
       * <pre>
       *&#47; 绑定时使用的编码
       * </pre>
       */
      public java.lang.String getBindCode() {
        java.lang.Object ref = bindCode_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          bindCode_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string bindCode = 6;</code>
       *
       * <pre>
       *&#47; 绑定时使用的编码
       * </pre>
       */
      public com.google.protobuf.ByteString
          getBindCodeBytes() {
        java.lang.Object ref = bindCode_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          bindCode_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string bindCode = 6;</code>
       *
       * <pre>
       *&#47; 绑定时使用的编码
       * </pre>
       */
      public Builder setBindCode(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000020;
        bindCode_ = value;
        
        return this;
      }
      /**
       * <code>optional string bindCode = 6;</code>
       *
       * <pre>
       *&#47; 绑定时使用的编码
       * </pre>
       */
      public Builder clearBindCode() {
        bitField0_ = (bitField0_ & ~0x00000020);
        bindCode_ = getDefaultInstance().getBindCode();
        
        return this;
      }
      /**
       * <code>optional string bindCode = 6;</code>
       *
       * <pre>
       *&#47; 绑定时使用的编码
       * </pre>
       */
      public Builder setBindCodeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000020;
        bindCode_ = value;
        
        return this;
      }

      // @@protoc_insertion_point(builder_scope:biotech.osla.InstrumentBinding)
    }

    static {
      defaultInstance = new InstrumentBinding(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:biotech.osla.InstrumentBinding)
  }

  public interface InstrumentDetailOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {

    // required int32 id = 1;
    /**
     * <code>required int32 id = 1;</code>
     *
     * <pre>
     * 仪器ID
     * </pre>
     */
    boolean hasId();
    /**
     * <code>required int32 id = 1;</code>
     *
     * <pre>
     * 仪器ID
     * </pre>
     */
    int getId();

    // required string name = 2;
    /**
     * <code>required string name = 2;</code>
     *
     * <pre>
     * 仪器名称
     * </pre>
     */
    boolean hasName();
    /**
     * <code>required string name = 2;</code>
     *
     * <pre>
     * 仪器名称
     * </pre>
     */
    java.lang.String getName();
    /**
     * <code>required string name = 2;</code>
     *
     * <pre>
     * 仪器名称
     * </pre>
     */
    com.google.protobuf.ByteString
        getNameBytes();

    // required int32 status = 3;
    /**
     * <code>required int32 status = 3;</code>
     *
     * <pre>
     * 仪器状态
     * </pre>
     */
    boolean hasStatus();
    /**
     * <code>required int32 status = 3;</code>
     *
     * <pre>
     * 仪器状态
     * </pre>
     */
    int getStatus();

    // required int32 min_interval = 4;
    /**
     * <code>required int32 min_interval = 4;</code>
     *
     * <pre>
     * 最小可预约时间段
     * </pre>
     */
    boolean hasMinInterval();
    /**
     * <code>required int32 min_interval = 4;</code>
     *
     * <pre>
     * 最小可预约时间段
     * </pre>
     */
    int getMinInterval();

    // required int32 booking_holding_time = 5;
    /**
     * <code>required int32 booking_holding_time = 5;</code>
     *
     * <pre>
     * 预约保护时间
     * </pre>
     */
    boolean hasBookingHoldingTime();
    /**
     * <code>required int32 booking_holding_time = 5;</code>
     *
     * <pre>
     * 预约保护时间
     * </pre>
     */
    int getBookingHoldingTime();

    // required int32 alert_time = 6;
    /**
     * <code>required int32 alert_time = 6;</code>
     *
     * <pre>
     * 使用超时提醒时间
     * </pre>
     */
    boolean hasAlertTime();
    /**
     * <code>required int32 alert_time = 6;</code>
     *
     * <pre>
     * 使用超时提醒时间
     * </pre>
     */
    int getAlertTime();

    // optional int32 off_delay_time = 7;
    /**
     * <code>optional int32 off_delay_time = 7;</code>
     *
     * <pre>
     * 断电延时时间
     * </pre>
     */
    boolean hasOffDelayTime();
    /**
     * <code>optional int32 off_delay_time = 7;</code>
     *
     * <pre>
     * 断电延时时间
     * </pre>
     */
    int getOffDelayTime();

    // optional int32 min_off_time = 8;
    /**
     * <code>optional int32 min_off_time = 8;</code>
     *
     * <pre>
     * 最短重上电时间
     * </pre>
     */
    boolean hasMinOffTime();
    /**
     * <code>optional int32 min_off_time = 8;</code>
     *
     * <pre>
     * 最短重上电时间
     * </pre>
     */
    int getMinOffTime();

    // optional int32 alert_current = 9;
    /**
     * <code>optional int32 alert_current = 9;</code>
     *
     * <pre>
     * 报警电流
     * </pre>
     */
    boolean hasAlertCurrent();
    /**
     * <code>optional int32 alert_current = 9;</code>
     *
     * <pre>
     * 报警电流
     * </pre>
     */
    int getAlertCurrent();

    // optional string client_software_update_version = 10;
    /**
     * <code>optional string client_software_update_version = 10;</code>
     *
     * <pre>
     * 客户端软件最新版本号
     * </pre>
     */
    boolean hasClientSoftwareUpdateVersion();
    /**
     * <code>optional string client_software_update_version = 10;</code>
     *
     * <pre>
     * 客户端软件最新版本号
     * </pre>
     */
    java.lang.String getClientSoftwareUpdateVersion();
    /**
     * <code>optional string client_software_update_version = 10;</code>
     *
     * <pre>
     * 客户端软件最新版本号
     * </pre>
     */
    com.google.protobuf.ByteString
        getClientSoftwareUpdateVersionBytes();

    // optional int32 booking_break_time = 11;
    /**
     * <code>optional int32 booking_break_time = 11;</code>
     *
     * <pre>
     * 违约时间
     * </pre>
     */
    boolean hasBookingBreakTime();
    /**
     * <code>optional int32 booking_break_time = 11;</code>
     *
     * <pre>
     * 违约时间
     * </pre>
     */
    int getBookingBreakTime();

    // optional bool looseMode = 12;
    /**
     * <code>optional bool looseMode = 12;</code>
     *
     * <pre>
     * 宽松模式
     * </pre>
     */
    boolean hasLooseMode();
    /**
     * <code>optional bool looseMode = 12;</code>
     *
     * <pre>
     * 宽松模式
     * </pre>
     */
    boolean getLooseMode();

    // optional string working_time = 13;
    /**
     * <code>optional string working_time = 13;</code>
     *
     * <pre>
     * 工作时间问题
     * </pre>
     */
    boolean hasWorkingTime();
    /**
     * <code>optional string working_time = 13;</code>
     *
     * <pre>
     * 工作时间问题
     * </pre>
     */
    java.lang.String getWorkingTime();
    /**
     * <code>optional string working_time = 13;</code>
     *
     * <pre>
     * 工作时间问题
     * </pre>
     */
    com.google.protobuf.ByteString
        getWorkingTimeBytes();

    // optional int32 bookingModelID = 14;
    /**
     * <code>optional int32 bookingModelID = 14;</code>
     *
     * <pre>
     * 预约模式
     * </pre>
     */
    boolean hasBookingModelID();
    /**
     * <code>optional int32 bookingModelID = 14;</code>
     *
     * <pre>
     * 预约模式
     * </pre>
     */
    int getBookingModelID();

    // optional string terImgUrl = 15;
    /**
     * <code>optional string terImgUrl = 15;</code>
     *
     * <pre>
     * 二维码地址
     * </pre>
     */
    boolean hasTerImgUrl();
    /**
     * <code>optional string terImgUrl = 15;</code>
     *
     * <pre>
     * 二维码地址
     * </pre>
     */
    java.lang.String getTerImgUrl();
    /**
     * <code>optional string terImgUrl = 15;</code>
     *
     * <pre>
     * 二维码地址
     * </pre>
     */
    com.google.protobuf.ByteString
        getTerImgUrlBytes();
  }
  /**
   * Protobuf type {@code biotech.osla.InstrumentDetail}
   *
   * <pre>
   * 仪器详细参数
   * </pre>
   */
  public static final class InstrumentDetail extends
      com.google.protobuf.GeneratedMessageLite
      implements InstrumentDetailOrBuilder {
    // Use InstrumentDetail.newBuilder() to construct.
    private InstrumentDetail(com.google.protobuf.GeneratedMessageLite.Builder builder) {
      super(builder);

    }
    private InstrumentDetail(boolean noInit) {}

    private static final InstrumentDetail defaultInstance;
    public static InstrumentDetail getDefaultInstance() {
      return defaultInstance;
    }

    public InstrumentDetail getDefaultInstanceForType() {
      return defaultInstance;
    }

    private InstrumentDetail(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              id_ = input.readInt32();
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              name_ = input.readBytes();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              status_ = input.readInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              minInterval_ = input.readInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              bookingHoldingTime_ = input.readInt32();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              alertTime_ = input.readInt32();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000040;
              offDelayTime_ = input.readInt32();
              break;
            }
            case 64: {
              bitField0_ |= 0x00000080;
              minOffTime_ = input.readInt32();
              break;
            }
            case 72: {
              bitField0_ |= 0x00000100;
              alertCurrent_ = input.readInt32();
              break;
            }
            case 82: {
              bitField0_ |= 0x00000200;
              clientSoftwareUpdateVersion_ = input.readBytes();
              break;
            }
            case 88: {
              bitField0_ |= 0x00000400;
              bookingBreakTime_ = input.readInt32();
              break;
            }
            case 96: {
              bitField0_ |= 0x00000800;
              looseMode_ = input.readBool();
              break;
            }
            case 106: {
              bitField0_ |= 0x00001000;
              workingTime_ = input.readBytes();
              break;
            }
            case 112: {
              bitField0_ |= 0x00002000;
              bookingModelID_ = input.readInt32();
              break;
            }
            case 122: {
              bitField0_ |= 0x00004000;
              terImgUrl_ = input.readBytes();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static com.google.protobuf.Parser<InstrumentDetail> PARSER =
        new com.google.protobuf.AbstractParser<InstrumentDetail>() {
      public InstrumentDetail parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new InstrumentDetail(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<InstrumentDetail> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required int32 id = 1;
    public static final int ID_FIELD_NUMBER = 1;
    private int id_;
    /**
     * <code>required int32 id = 1;</code>
     *
     * <pre>
     * 仪器ID
     * </pre>
     */
    public boolean hasId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int32 id = 1;</code>
     *
     * <pre>
     * 仪器ID
     * </pre>
     */
    public int getId() {
      return id_;
    }

    // required string name = 2;
    public static final int NAME_FIELD_NUMBER = 2;
    private java.lang.Object name_;
    /**
     * <code>required string name = 2;</code>
     *
     * <pre>
     * 仪器名称
     * </pre>
     */
    public boolean hasName() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required string name = 2;</code>
     *
     * <pre>
     * 仪器名称
     * </pre>
     */
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          name_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string name = 2;</code>
     *
     * <pre>
     * 仪器名称
     * </pre>
     */
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // required int32 status = 3;
    public static final int STATUS_FIELD_NUMBER = 3;
    private int status_;
    /**
     * <code>required int32 status = 3;</code>
     *
     * <pre>
     * 仪器状态
     * </pre>
     */
    public boolean hasStatus() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required int32 status = 3;</code>
     *
     * <pre>
     * 仪器状态
     * </pre>
     */
    public int getStatus() {
      return status_;
    }

    // required int32 min_interval = 4;
    public static final int MIN_INTERVAL_FIELD_NUMBER = 4;
    private int minInterval_;
    /**
     * <code>required int32 min_interval = 4;</code>
     *
     * <pre>
     * 最小可预约时间段
     * </pre>
     */
    public boolean hasMinInterval() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>required int32 min_interval = 4;</code>
     *
     * <pre>
     * 最小可预约时间段
     * </pre>
     */
    public int getMinInterval() {
      return minInterval_;
    }

    // required int32 booking_holding_time = 5;
    public static final int BOOKING_HOLDING_TIME_FIELD_NUMBER = 5;
    private int bookingHoldingTime_;
    /**
     * <code>required int32 booking_holding_time = 5;</code>
     *
     * <pre>
     * 预约保护时间
     * </pre>
     */
    public boolean hasBookingHoldingTime() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>required int32 booking_holding_time = 5;</code>
     *
     * <pre>
     * 预约保护时间
     * </pre>
     */
    public int getBookingHoldingTime() {
      return bookingHoldingTime_;
    }

    // required int32 alert_time = 6;
    public static final int ALERT_TIME_FIELD_NUMBER = 6;
    private int alertTime_;
    /**
     * <code>required int32 alert_time = 6;</code>
     *
     * <pre>
     * 使用超时提醒时间
     * </pre>
     */
    public boolean hasAlertTime() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>required int32 alert_time = 6;</code>
     *
     * <pre>
     * 使用超时提醒时间
     * </pre>
     */
    public int getAlertTime() {
      return alertTime_;
    }

    // optional int32 off_delay_time = 7;
    public static final int OFF_DELAY_TIME_FIELD_NUMBER = 7;
    private int offDelayTime_;
    /**
     * <code>optional int32 off_delay_time = 7;</code>
     *
     * <pre>
     * 断电延时时间
     * </pre>
     */
    public boolean hasOffDelayTime() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional int32 off_delay_time = 7;</code>
     *
     * <pre>
     * 断电延时时间
     * </pre>
     */
    public int getOffDelayTime() {
      return offDelayTime_;
    }

    // optional int32 min_off_time = 8;
    public static final int MIN_OFF_TIME_FIELD_NUMBER = 8;
    private int minOffTime_;
    /**
     * <code>optional int32 min_off_time = 8;</code>
     *
     * <pre>
     * 最短重上电时间
     * </pre>
     */
    public boolean hasMinOffTime() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional int32 min_off_time = 8;</code>
     *
     * <pre>
     * 最短重上电时间
     * </pre>
     */
    public int getMinOffTime() {
      return minOffTime_;
    }

    // optional int32 alert_current = 9;
    public static final int ALERT_CURRENT_FIELD_NUMBER = 9;
    private int alertCurrent_;
    /**
     * <code>optional int32 alert_current = 9;</code>
     *
     * <pre>
     * 报警电流
     * </pre>
     */
    public boolean hasAlertCurrent() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional int32 alert_current = 9;</code>
     *
     * <pre>
     * 报警电流
     * </pre>
     */
    public int getAlertCurrent() {
      return alertCurrent_;
    }

    // optional string client_software_update_version = 10;
    public static final int CLIENT_SOFTWARE_UPDATE_VERSION_FIELD_NUMBER = 10;
    private java.lang.Object clientSoftwareUpdateVersion_;
    /**
     * <code>optional string client_software_update_version = 10;</code>
     *
     * <pre>
     * 客户端软件最新版本号
     * </pre>
     */
    public boolean hasClientSoftwareUpdateVersion() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>optional string client_software_update_version = 10;</code>
     *
     * <pre>
     * 客户端软件最新版本号
     * </pre>
     */
    public java.lang.String getClientSoftwareUpdateVersion() {
      java.lang.Object ref = clientSoftwareUpdateVersion_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          clientSoftwareUpdateVersion_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string client_software_update_version = 10;</code>
     *
     * <pre>
     * 客户端软件最新版本号
     * </pre>
     */
    public com.google.protobuf.ByteString
        getClientSoftwareUpdateVersionBytes() {
      java.lang.Object ref = clientSoftwareUpdateVersion_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        clientSoftwareUpdateVersion_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional int32 booking_break_time = 11;
    public static final int BOOKING_BREAK_TIME_FIELD_NUMBER = 11;
    private int bookingBreakTime_;
    /**
     * <code>optional int32 booking_break_time = 11;</code>
     *
     * <pre>
     * 违约时间
     * </pre>
     */
    public boolean hasBookingBreakTime() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    /**
     * <code>optional int32 booking_break_time = 11;</code>
     *
     * <pre>
     * 违约时间
     * </pre>
     */
    public int getBookingBreakTime() {
      return bookingBreakTime_;
    }

    // optional bool looseMode = 12;
    public static final int LOOSEMODE_FIELD_NUMBER = 12;
    private boolean looseMode_;
    /**
     * <code>optional bool looseMode = 12;</code>
     *
     * <pre>
     * 宽松模式
     * </pre>
     */
    public boolean hasLooseMode() {
      return ((bitField0_ & 0x00000800) == 0x00000800);
    }
    /**
     * <code>optional bool looseMode = 12;</code>
     *
     * <pre>
     * 宽松模式
     * </pre>
     */
    public boolean getLooseMode() {
      return looseMode_;
    }

    // optional string working_time = 13;
    public static final int WORKING_TIME_FIELD_NUMBER = 13;
    private java.lang.Object workingTime_;
    /**
     * <code>optional string working_time = 13;</code>
     *
     * <pre>
     * 工作时间问题
     * </pre>
     */
    public boolean hasWorkingTime() {
      return ((bitField0_ & 0x00001000) == 0x00001000);
    }
    /**
     * <code>optional string working_time = 13;</code>
     *
     * <pre>
     * 工作时间问题
     * </pre>
     */
    public java.lang.String getWorkingTime() {
      java.lang.Object ref = workingTime_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          workingTime_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string working_time = 13;</code>
     *
     * <pre>
     * 工作时间问题
     * </pre>
     */
    public com.google.protobuf.ByteString
        getWorkingTimeBytes() {
      java.lang.Object ref = workingTime_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        workingTime_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional int32 bookingModelID = 14;
    public static final int BOOKINGMODELID_FIELD_NUMBER = 14;
    private int bookingModelID_;
    /**
     * <code>optional int32 bookingModelID = 14;</code>
     *
     * <pre>
     * 预约模式
     * </pre>
     */
    public boolean hasBookingModelID() {
      return ((bitField0_ & 0x00002000) == 0x00002000);
    }
    /**
     * <code>optional int32 bookingModelID = 14;</code>
     *
     * <pre>
     * 预约模式
     * </pre>
     */
    public int getBookingModelID() {
      return bookingModelID_;
    }

    // optional string terImgUrl = 15;
    public static final int TERIMGURL_FIELD_NUMBER = 15;
    private java.lang.Object terImgUrl_;
    /**
     * <code>optional string terImgUrl = 15;</code>
     *
     * <pre>
     * 二维码地址
     * </pre>
     */
    public boolean hasTerImgUrl() {
      return ((bitField0_ & 0x00004000) == 0x00004000);
    }
    /**
     * <code>optional string terImgUrl = 15;</code>
     *
     * <pre>
     * 二维码地址
     * </pre>
     */
    public java.lang.String getTerImgUrl() {
      java.lang.Object ref = terImgUrl_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          terImgUrl_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string terImgUrl = 15;</code>
     *
     * <pre>
     * 二维码地址
     * </pre>
     */
    public com.google.protobuf.ByteString
        getTerImgUrlBytes() {
      java.lang.Object ref = terImgUrl_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        terImgUrl_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private void initFields() {
      id_ = 0;
      name_ = "";
      status_ = 0;
      minInterval_ = 0;
      bookingHoldingTime_ = 0;
      alertTime_ = 0;
      offDelayTime_ = 0;
      minOffTime_ = 0;
      alertCurrent_ = 0;
      clientSoftwareUpdateVersion_ = "";
      bookingBreakTime_ = 0;
      looseMode_ = false;
      workingTime_ = "";
      bookingModelID_ = 0;
      terImgUrl_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasName()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasStatus()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasMinInterval()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasBookingHoldingTime()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasAlertTime()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, id_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getNameBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, status_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(4, minInterval_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(5, bookingHoldingTime_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeInt32(6, alertTime_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeInt32(7, offDelayTime_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeInt32(8, minOffTime_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeInt32(9, alertCurrent_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeBytes(10, getClientSoftwareUpdateVersionBytes());
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeInt32(11, bookingBreakTime_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        output.writeBool(12, looseMode_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        output.writeBytes(13, getWorkingTimeBytes());
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        output.writeInt32(14, bookingModelID_);
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        output.writeBytes(15, getTerImgUrlBytes());
      }
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, id_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getNameBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, status_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, minInterval_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, bookingHoldingTime_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, alertTime_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(7, offDelayTime_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(8, minOffTime_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(9, alertCurrent_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(10, getClientSoftwareUpdateVersionBytes());
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(11, bookingBreakTime_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(12, looseMode_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(13, getWorkingTimeBytes());
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(14, bookingModelID_);
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(15, getTerImgUrlBytes());
      }
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.slark.pengder.protocol.MessageProtos.InstrumentDetail parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.slark.pengder.protocol.MessageProtos.InstrumentDetail parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.slark.pengder.protocol.MessageProtos.InstrumentDetail parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.slark.pengder.protocol.MessageProtos.InstrumentDetail parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.slark.pengder.protocol.MessageProtos.InstrumentDetail parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.slark.pengder.protocol.MessageProtos.InstrumentDetail parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.slark.pengder.protocol.MessageProtos.InstrumentDetail parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.slark.pengder.protocol.MessageProtos.InstrumentDetail parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.slark.pengder.protocol.MessageProtos.InstrumentDetail parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.slark.pengder.protocol.MessageProtos.InstrumentDetail parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.slark.pengder.protocol.MessageProtos.InstrumentDetail prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    /**
     * Protobuf type {@code biotech.osla.InstrumentDetail}
     *
     * <pre>
     * 仪器详细参数
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.slark.pengder.protocol.MessageProtos.InstrumentDetail, Builder>
        implements com.slark.pengder.protocol.MessageProtos.InstrumentDetailOrBuilder {
      // Construct using com.slark.pengder.protocol.MessageProtos.InstrumentDetail.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        id_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        name_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        status_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        minInterval_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        bookingHoldingTime_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        alertTime_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        offDelayTime_ = 0;
        bitField0_ = (bitField0_ & ~0x00000040);
        minOffTime_ = 0;
        bitField0_ = (bitField0_ & ~0x00000080);
        alertCurrent_ = 0;
        bitField0_ = (bitField0_ & ~0x00000100);
        clientSoftwareUpdateVersion_ = "";
        bitField0_ = (bitField0_ & ~0x00000200);
        bookingBreakTime_ = 0;
        bitField0_ = (bitField0_ & ~0x00000400);
        looseMode_ = false;
        bitField0_ = (bitField0_ & ~0x00000800);
        workingTime_ = "";
        bitField0_ = (bitField0_ & ~0x00001000);
        bookingModelID_ = 0;
        bitField0_ = (bitField0_ & ~0x00002000);
        terImgUrl_ = "";
        bitField0_ = (bitField0_ & ~0x00004000);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.slark.pengder.protocol.MessageProtos.InstrumentDetail getDefaultInstanceForType() {
        return com.slark.pengder.protocol.MessageProtos.InstrumentDetail.getDefaultInstance();
      }

      public com.slark.pengder.protocol.MessageProtos.InstrumentDetail build() {
        com.slark.pengder.protocol.MessageProtos.InstrumentDetail result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.slark.pengder.protocol.MessageProtos.InstrumentDetail buildPartial() {
        com.slark.pengder.protocol.MessageProtos.InstrumentDetail result = new com.slark.pengder.protocol.MessageProtos.InstrumentDetail(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.id_ = id_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.name_ = name_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.status_ = status_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.minInterval_ = minInterval_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.bookingHoldingTime_ = bookingHoldingTime_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.alertTime_ = alertTime_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.offDelayTime_ = offDelayTime_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.minOffTime_ = minOffTime_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        result.alertCurrent_ = alertCurrent_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000200;
        }
        result.clientSoftwareUpdateVersion_ = clientSoftwareUpdateVersion_;
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000400;
        }
        result.bookingBreakTime_ = bookingBreakTime_;
        if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
          to_bitField0_ |= 0x00000800;
        }
        result.looseMode_ = looseMode_;
        if (((from_bitField0_ & 0x00001000) == 0x00001000)) {
          to_bitField0_ |= 0x00001000;
        }
        result.workingTime_ = workingTime_;
        if (((from_bitField0_ & 0x00002000) == 0x00002000)) {
          to_bitField0_ |= 0x00002000;
        }
        result.bookingModelID_ = bookingModelID_;
        if (((from_bitField0_ & 0x00004000) == 0x00004000)) {
          to_bitField0_ |= 0x00004000;
        }
        result.terImgUrl_ = terImgUrl_;
        result.bitField0_ = to_bitField0_;
        return result;
      }

      public Builder mergeFrom(com.slark.pengder.protocol.MessageProtos.InstrumentDetail other) {
        if (other == com.slark.pengder.protocol.MessageProtos.InstrumentDetail.getDefaultInstance()) return this;
        if (other.hasId()) {
          setId(other.getId());
        }
        if (other.hasName()) {
          bitField0_ |= 0x00000002;
          name_ = other.name_;
          
        }
        if (other.hasStatus()) {
          setStatus(other.getStatus());
        }
        if (other.hasMinInterval()) {
          setMinInterval(other.getMinInterval());
        }
        if (other.hasBookingHoldingTime()) {
          setBookingHoldingTime(other.getBookingHoldingTime());
        }
        if (other.hasAlertTime()) {
          setAlertTime(other.getAlertTime());
        }
        if (other.hasOffDelayTime()) {
          setOffDelayTime(other.getOffDelayTime());
        }
        if (other.hasMinOffTime()) {
          setMinOffTime(other.getMinOffTime());
        }
        if (other.hasAlertCurrent()) {
          setAlertCurrent(other.getAlertCurrent());
        }
        if (other.hasClientSoftwareUpdateVersion()) {
          bitField0_ |= 0x00000200;
          clientSoftwareUpdateVersion_ = other.clientSoftwareUpdateVersion_;
          
        }
        if (other.hasBookingBreakTime()) {
          setBookingBreakTime(other.getBookingBreakTime());
        }
        if (other.hasLooseMode()) {
          setLooseMode(other.getLooseMode());
        }
        if (other.hasWorkingTime()) {
          bitField0_ |= 0x00001000;
          workingTime_ = other.workingTime_;
          
        }
        if (other.hasBookingModelID()) {
          setBookingModelID(other.getBookingModelID());
        }
        if (other.hasTerImgUrl()) {
          bitField0_ |= 0x00004000;
          terImgUrl_ = other.terImgUrl_;
          
        }
        return this;
      }

      public final boolean isInitialized() {
        if (!hasId()) {
          
          return false;
        }
        if (!hasName()) {
          
          return false;
        }
        if (!hasStatus()) {
          
          return false;
        }
        if (!hasMinInterval()) {
          
          return false;
        }
        if (!hasBookingHoldingTime()) {
          
          return false;
        }
        if (!hasAlertTime()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.slark.pengder.protocol.MessageProtos.InstrumentDetail parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.slark.pengder.protocol.MessageProtos.InstrumentDetail) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required int32 id = 1;
      private int id_ ;
      /**
       * <code>required int32 id = 1;</code>
       *
       * <pre>
       * 仪器ID
       * </pre>
       */
      public boolean hasId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int32 id = 1;</code>
       *
       * <pre>
       * 仪器ID
       * </pre>
       */
      public int getId() {
        return id_;
      }
      /**
       * <code>required int32 id = 1;</code>
       *
       * <pre>
       * 仪器ID
       * </pre>
       */
      public Builder setId(int value) {
        bitField0_ |= 0x00000001;
        id_ = value;
        
        return this;
      }
      /**
       * <code>required int32 id = 1;</code>
       *
       * <pre>
       * 仪器ID
       * </pre>
       */
      public Builder clearId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        id_ = 0;
        
        return this;
      }

      // required string name = 2;
      private java.lang.Object name_ = "";
      /**
       * <code>required string name = 2;</code>
       *
       * <pre>
       * 仪器名称
       * </pre>
       */
      public boolean hasName() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required string name = 2;</code>
       *
       * <pre>
       * 仪器名称
       * </pre>
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          name_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string name = 2;</code>
       *
       * <pre>
       * 仪器名称
       * </pre>
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string name = 2;</code>
       *
       * <pre>
       * 仪器名称
       * </pre>
       */
      public Builder setName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        name_ = value;
        
        return this;
      }
      /**
       * <code>required string name = 2;</code>
       *
       * <pre>
       * 仪器名称
       * </pre>
       */
      public Builder clearName() {
        bitField0_ = (bitField0_ & ~0x00000002);
        name_ = getDefaultInstance().getName();
        
        return this;
      }
      /**
       * <code>required string name = 2;</code>
       *
       * <pre>
       * 仪器名称
       * </pre>
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        name_ = value;
        
        return this;
      }

      // required int32 status = 3;
      private int status_ ;
      /**
       * <code>required int32 status = 3;</code>
       *
       * <pre>
       * 仪器状态
       * </pre>
       */
      public boolean hasStatus() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required int32 status = 3;</code>
       *
       * <pre>
       * 仪器状态
       * </pre>
       */
      public int getStatus() {
        return status_;
      }
      /**
       * <code>required int32 status = 3;</code>
       *
       * <pre>
       * 仪器状态
       * </pre>
       */
      public Builder setStatus(int value) {
        bitField0_ |= 0x00000004;
        status_ = value;
        
        return this;
      }
      /**
       * <code>required int32 status = 3;</code>
       *
       * <pre>
       * 仪器状态
       * </pre>
       */
      public Builder clearStatus() {
        bitField0_ = (bitField0_ & ~0x00000004);
        status_ = 0;
        
        return this;
      }

      // required int32 min_interval = 4;
      private int minInterval_ ;
      /**
       * <code>required int32 min_interval = 4;</code>
       *
       * <pre>
       * 最小可预约时间段
       * </pre>
       */
      public boolean hasMinInterval() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>required int32 min_interval = 4;</code>
       *
       * <pre>
       * 最小可预约时间段
       * </pre>
       */
      public int getMinInterval() {
        return minInterval_;
      }
      /**
       * <code>required int32 min_interval = 4;</code>
       *
       * <pre>
       * 最小可预约时间段
       * </pre>
       */
      public Builder setMinInterval(int value) {
        bitField0_ |= 0x00000008;
        minInterval_ = value;
        
        return this;
      }
      /**
       * <code>required int32 min_interval = 4;</code>
       *
       * <pre>
       * 最小可预约时间段
       * </pre>
       */
      public Builder clearMinInterval() {
        bitField0_ = (bitField0_ & ~0x00000008);
        minInterval_ = 0;
        
        return this;
      }

      // required int32 booking_holding_time = 5;
      private int bookingHoldingTime_ ;
      /**
       * <code>required int32 booking_holding_time = 5;</code>
       *
       * <pre>
       * 预约保护时间
       * </pre>
       */
      public boolean hasBookingHoldingTime() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>required int32 booking_holding_time = 5;</code>
       *
       * <pre>
       * 预约保护时间
       * </pre>
       */
      public int getBookingHoldingTime() {
        return bookingHoldingTime_;
      }
      /**
       * <code>required int32 booking_holding_time = 5;</code>
       *
       * <pre>
       * 预约保护时间
       * </pre>
       */
      public Builder setBookingHoldingTime(int value) {
        bitField0_ |= 0x00000010;
        bookingHoldingTime_ = value;
        
        return this;
      }
      /**
       * <code>required int32 booking_holding_time = 5;</code>
       *
       * <pre>
       * 预约保护时间
       * </pre>
       */
      public Builder clearBookingHoldingTime() {
        bitField0_ = (bitField0_ & ~0x00000010);
        bookingHoldingTime_ = 0;
        
        return this;
      }

      // required int32 alert_time = 6;
      private int alertTime_ ;
      /**
       * <code>required int32 alert_time = 6;</code>
       *
       * <pre>
       * 使用超时提醒时间
       * </pre>
       */
      public boolean hasAlertTime() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>required int32 alert_time = 6;</code>
       *
       * <pre>
       * 使用超时提醒时间
       * </pre>
       */
      public int getAlertTime() {
        return alertTime_;
      }
      /**
       * <code>required int32 alert_time = 6;</code>
       *
       * <pre>
       * 使用超时提醒时间
       * </pre>
       */
      public Builder setAlertTime(int value) {
        bitField0_ |= 0x00000020;
        alertTime_ = value;
        
        return this;
      }
      /**
       * <code>required int32 alert_time = 6;</code>
       *
       * <pre>
       * 使用超时提醒时间
       * </pre>
       */
      public Builder clearAlertTime() {
        bitField0_ = (bitField0_ & ~0x00000020);
        alertTime_ = 0;
        
        return this;
      }

      // optional int32 off_delay_time = 7;
      private int offDelayTime_ ;
      /**
       * <code>optional int32 off_delay_time = 7;</code>
       *
       * <pre>
       * 断电延时时间
       * </pre>
       */
      public boolean hasOffDelayTime() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional int32 off_delay_time = 7;</code>
       *
       * <pre>
       * 断电延时时间
       * </pre>
       */
      public int getOffDelayTime() {
        return offDelayTime_;
      }
      /**
       * <code>optional int32 off_delay_time = 7;</code>
       *
       * <pre>
       * 断电延时时间
       * </pre>
       */
      public Builder setOffDelayTime(int value) {
        bitField0_ |= 0x00000040;
        offDelayTime_ = value;
        
        return this;
      }
      /**
       * <code>optional int32 off_delay_time = 7;</code>
       *
       * <pre>
       * 断电延时时间
       * </pre>
       */
      public Builder clearOffDelayTime() {
        bitField0_ = (bitField0_ & ~0x00000040);
        offDelayTime_ = 0;
        
        return this;
      }

      // optional int32 min_off_time = 8;
      private int minOffTime_ ;
      /**
       * <code>optional int32 min_off_time = 8;</code>
       *
       * <pre>
       * 最短重上电时间
       * </pre>
       */
      public boolean hasMinOffTime() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional int32 min_off_time = 8;</code>
       *
       * <pre>
       * 最短重上电时间
       * </pre>
       */
      public int getMinOffTime() {
        return minOffTime_;
      }
      /**
       * <code>optional int32 min_off_time = 8;</code>
       *
       * <pre>
       * 最短重上电时间
       * </pre>
       */
      public Builder setMinOffTime(int value) {
        bitField0_ |= 0x00000080;
        minOffTime_ = value;
        
        return this;
      }
      /**
       * <code>optional int32 min_off_time = 8;</code>
       *
       * <pre>
       * 最短重上电时间
       * </pre>
       */
      public Builder clearMinOffTime() {
        bitField0_ = (bitField0_ & ~0x00000080);
        minOffTime_ = 0;
        
        return this;
      }

      // optional int32 alert_current = 9;
      private int alertCurrent_ ;
      /**
       * <code>optional int32 alert_current = 9;</code>
       *
       * <pre>
       * 报警电流
       * </pre>
       */
      public boolean hasAlertCurrent() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional int32 alert_current = 9;</code>
       *
       * <pre>
       * 报警电流
       * </pre>
       */
      public int getAlertCurrent() {
        return alertCurrent_;
      }
      /**
       * <code>optional int32 alert_current = 9;</code>
       *
       * <pre>
       * 报警电流
       * </pre>
       */
      public Builder setAlertCurrent(int value) {
        bitField0_ |= 0x00000100;
        alertCurrent_ = value;
        
        return this;
      }
      /**
       * <code>optional int32 alert_current = 9;</code>
       *
       * <pre>
       * 报警电流
       * </pre>
       */
      public Builder clearAlertCurrent() {
        bitField0_ = (bitField0_ & ~0x00000100);
        alertCurrent_ = 0;
        
        return this;
      }

      // optional string client_software_update_version = 10;
      private java.lang.Object clientSoftwareUpdateVersion_ = "";
      /**
       * <code>optional string client_software_update_version = 10;</code>
       *
       * <pre>
       * 客户端软件最新版本号
       * </pre>
       */
      public boolean hasClientSoftwareUpdateVersion() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional string client_software_update_version = 10;</code>
       *
       * <pre>
       * 客户端软件最新版本号
       * </pre>
       */
      public java.lang.String getClientSoftwareUpdateVersion() {
        java.lang.Object ref = clientSoftwareUpdateVersion_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          clientSoftwareUpdateVersion_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string client_software_update_version = 10;</code>
       *
       * <pre>
       * 客户端软件最新版本号
       * </pre>
       */
      public com.google.protobuf.ByteString
          getClientSoftwareUpdateVersionBytes() {
        java.lang.Object ref = clientSoftwareUpdateVersion_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          clientSoftwareUpdateVersion_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string client_software_update_version = 10;</code>
       *
       * <pre>
       * 客户端软件最新版本号
       * </pre>
       */
      public Builder setClientSoftwareUpdateVersion(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000200;
        clientSoftwareUpdateVersion_ = value;
        
        return this;
      }
      /**
       * <code>optional string client_software_update_version = 10;</code>
       *
       * <pre>
       * 客户端软件最新版本号
       * </pre>
       */
      public Builder clearClientSoftwareUpdateVersion() {
        bitField0_ = (bitField0_ & ~0x00000200);
        clientSoftwareUpdateVersion_ = getDefaultInstance().getClientSoftwareUpdateVersion();
        
        return this;
      }
      /**
       * <code>optional string client_software_update_version = 10;</code>
       *
       * <pre>
       * 客户端软件最新版本号
       * </pre>
       */
      public Builder setClientSoftwareUpdateVersionBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000200;
        clientSoftwareUpdateVersion_ = value;
        
        return this;
      }

      // optional int32 booking_break_time = 11;
      private int bookingBreakTime_ ;
      /**
       * <code>optional int32 booking_break_time = 11;</code>
       *
       * <pre>
       * 违约时间
       * </pre>
       */
      public boolean hasBookingBreakTime() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>optional int32 booking_break_time = 11;</code>
       *
       * <pre>
       * 违约时间
       * </pre>
       */
      public int getBookingBreakTime() {
        return bookingBreakTime_;
      }
      /**
       * <code>optional int32 booking_break_time = 11;</code>
       *
       * <pre>
       * 违约时间
       * </pre>
       */
      public Builder setBookingBreakTime(int value) {
        bitField0_ |= 0x00000400;
        bookingBreakTime_ = value;
        
        return this;
      }
      /**
       * <code>optional int32 booking_break_time = 11;</code>
       *
       * <pre>
       * 违约时间
       * </pre>
       */
      public Builder clearBookingBreakTime() {
        bitField0_ = (bitField0_ & ~0x00000400);
        bookingBreakTime_ = 0;
        
        return this;
      }

      // optional bool looseMode = 12;
      private boolean looseMode_ ;
      /**
       * <code>optional bool looseMode = 12;</code>
       *
       * <pre>
       * 宽松模式
       * </pre>
       */
      public boolean hasLooseMode() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      /**
       * <code>optional bool looseMode = 12;</code>
       *
       * <pre>
       * 宽松模式
       * </pre>
       */
      public boolean getLooseMode() {
        return looseMode_;
      }
      /**
       * <code>optional bool looseMode = 12;</code>
       *
       * <pre>
       * 宽松模式
       * </pre>
       */
      public Builder setLooseMode(boolean value) {
        bitField0_ |= 0x00000800;
        looseMode_ = value;
        
        return this;
      }
      /**
       * <code>optional bool looseMode = 12;</code>
       *
       * <pre>
       * 宽松模式
       * </pre>
       */
      public Builder clearLooseMode() {
        bitField0_ = (bitField0_ & ~0x00000800);
        looseMode_ = false;
        
        return this;
      }

      // optional string working_time = 13;
      private java.lang.Object workingTime_ = "";
      /**
       * <code>optional string working_time = 13;</code>
       *
       * <pre>
       * 工作时间问题
       * </pre>
       */
      public boolean hasWorkingTime() {
        return ((bitField0_ & 0x00001000) == 0x00001000);
      }
      /**
       * <code>optional string working_time = 13;</code>
       *
       * <pre>
       * 工作时间问题
       * </pre>
       */
      public java.lang.String getWorkingTime() {
        java.lang.Object ref = workingTime_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          workingTime_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string working_time = 13;</code>
       *
       * <pre>
       * 工作时间问题
       * </pre>
       */
      public com.google.protobuf.ByteString
          getWorkingTimeBytes() {
        java.lang.Object ref = workingTime_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          workingTime_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string working_time = 13;</code>
       *
       * <pre>
       * 工作时间问题
       * </pre>
       */
      public Builder setWorkingTime(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00001000;
        workingTime_ = value;
        
        return this;
      }
      /**
       * <code>optional string working_time = 13;</code>
       *
       * <pre>
       * 工作时间问题
       * </pre>
       */
      public Builder clearWorkingTime() {
        bitField0_ = (bitField0_ & ~0x00001000);
        workingTime_ = getDefaultInstance().getWorkingTime();
        
        return this;
      }
      /**
       * <code>optional string working_time = 13;</code>
       *
       * <pre>
       * 工作时间问题
       * </pre>
       */
      public Builder setWorkingTimeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00001000;
        workingTime_ = value;
        
        return this;
      }

      // optional int32 bookingModelID = 14;
      private int bookingModelID_ ;
      /**
       * <code>optional int32 bookingModelID = 14;</code>
       *
       * <pre>
       * 预约模式
       * </pre>
       */
      public boolean hasBookingModelID() {
        return ((bitField0_ & 0x00002000) == 0x00002000);
      }
      /**
       * <code>optional int32 bookingModelID = 14;</code>
       *
       * <pre>
       * 预约模式
       * </pre>
       */
      public int getBookingModelID() {
        return bookingModelID_;
      }
      /**
       * <code>optional int32 bookingModelID = 14;</code>
       *
       * <pre>
       * 预约模式
       * </pre>
       */
      public Builder setBookingModelID(int value) {
        bitField0_ |= 0x00002000;
        bookingModelID_ = value;
        
        return this;
      }
      /**
       * <code>optional int32 bookingModelID = 14;</code>
       *
       * <pre>
       * 预约模式
       * </pre>
       */
      public Builder clearBookingModelID() {
        bitField0_ = (bitField0_ & ~0x00002000);
        bookingModelID_ = 0;
        
        return this;
      }

      // optional string terImgUrl = 15;
      private java.lang.Object terImgUrl_ = "";
      /**
       * <code>optional string terImgUrl = 15;</code>
       *
       * <pre>
       * 二维码地址
       * </pre>
       */
      public boolean hasTerImgUrl() {
        return ((bitField0_ & 0x00004000) == 0x00004000);
      }
      /**
       * <code>optional string terImgUrl = 15;</code>
       *
       * <pre>
       * 二维码地址
       * </pre>
       */
      public java.lang.String getTerImgUrl() {
        java.lang.Object ref = terImgUrl_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          terImgUrl_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string terImgUrl = 15;</code>
       *
       * <pre>
       * 二维码地址
       * </pre>
       */
      public com.google.protobuf.ByteString
          getTerImgUrlBytes() {
        java.lang.Object ref = terImgUrl_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          terImgUrl_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string terImgUrl = 15;</code>
       *
       * <pre>
       * 二维码地址
       * </pre>
       */
      public Builder setTerImgUrl(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00004000;
        terImgUrl_ = value;
        
        return this;
      }
      /**
       * <code>optional string terImgUrl = 15;</code>
       *
       * <pre>
       * 二维码地址
       * </pre>
       */
      public Builder clearTerImgUrl() {
        bitField0_ = (bitField0_ & ~0x00004000);
        terImgUrl_ = getDefaultInstance().getTerImgUrl();
        
        return this;
      }
      /**
       * <code>optional string terImgUrl = 15;</code>
       *
       * <pre>
       * 二维码地址
       * </pre>
       */
      public Builder setTerImgUrlBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00004000;
        terImgUrl_ = value;
        
        return this;
      }

      // @@protoc_insertion_point(builder_scope:biotech.osla.InstrumentDetail)
    }

    static {
      defaultInstance = new InstrumentDetail(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:biotech.osla.InstrumentDetail)
  }

  public interface ReservationOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {

    // required int32 id = 1;
    /**
     * <code>required int32 id = 1;</code>
     *
     * <pre>
     * 时间段ID
     * </pre>
     */
    boolean hasId();
    /**
     * <code>required int32 id = 1;</code>
     *
     * <pre>
     * 时间段ID
     * </pre>
     */
    int getId();

    // required int32 group_id = 2;
    /**
     * <code>required int32 group_id = 2;</code>
     *
     * <pre>
     * 课题组ID
     * </pre>
     */
    boolean hasGroupId();
    /**
     * <code>required int32 group_id = 2;</code>
     *
     * <pre>
     * 课题组ID
     * </pre>
     */
    int getGroupId();

    // required int32 week = 3;
    /**
     * <code>required int32 week = 3;</code>
     *
     * <pre>
     * 星期
     * </pre>
     */
    boolean hasWeek();
    /**
     * <code>required int32 week = 3;</code>
     *
     * <pre>
     * 星期
     * </pre>
     */
    int getWeek();

    // required int32 start_time = 4;
    /**
     * <code>required int32 start_time = 4;</code>
     *
     * <pre>
     * 开始时间
     * </pre>
     */
    boolean hasStartTime();
    /**
     * <code>required int32 start_time = 4;</code>
     *
     * <pre>
     * 开始时间
     * </pre>
     */
    int getStartTime();

    // required int32 end_time = 5;
    /**
     * <code>required int32 end_time = 5;</code>
     *
     * <pre>
     * 结束时间
     * </pre>
     */
    boolean hasEndTime();
    /**
     * <code>required int32 end_time = 5;</code>
     *
     * <pre>
     * 结束时间
     * </pre>
     */
    int getEndTime();

    // required int32 active_time = 6;
    /**
     * <code>required int32 active_time = 6;</code>
     *
     * <pre>
     * 生效时间
     * </pre>
     */
    boolean hasActiveTime();
    /**
     * <code>required int32 active_time = 6;</code>
     *
     * <pre>
     * 生效时间
     * </pre>
     */
    int getActiveTime();

    // required int32 expire_time = 7;
    /**
     * <code>required int32 expire_time = 7;</code>
     *
     * <pre>
     * 失效时间
     * </pre>
     */
    boolean hasExpireTime();
    /**
     * <code>required int32 expire_time = 7;</code>
     *
     * <pre>
     * 失效时间
     * </pre>
     */
    int getExpireTime();

    // optional int32 delete_time = 8;
    /**
     * <code>optional int32 delete_time = 8;</code>
     *
     * <pre>
     * 删除时间
     * </pre>
     */
    boolean hasDeleteTime();
    /**
     * <code>optional int32 delete_time = 8;</code>
     *
     * <pre>
     * 删除时间
     * </pre>
     */
    int getDeleteTime();
  }
  /**
   * Protobuf type {@code biotech.osla.Reservation}
   *
   * <pre>
   * 仪器专享时间
   * </pre>
   */
  public static final class Reservation extends
      com.google.protobuf.GeneratedMessageLite
      implements ReservationOrBuilder {
    // Use Reservation.newBuilder() to construct.
    private Reservation(com.google.protobuf.GeneratedMessageLite.Builder builder) {
      super(builder);

    }
    private Reservation(boolean noInit) {}

    private static final Reservation defaultInstance;
    public static Reservation getDefaultInstance() {
      return defaultInstance;
    }

    public Reservation getDefaultInstanceForType() {
      return defaultInstance;
    }

    private Reservation(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              id_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              groupId_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              week_ = input.readInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              startTime_ = input.readInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              endTime_ = input.readInt32();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              activeTime_ = input.readInt32();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000040;
              expireTime_ = input.readInt32();
              break;
            }
            case 64: {
              bitField0_ |= 0x00000080;
              deleteTime_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static com.google.protobuf.Parser<Reservation> PARSER =
        new com.google.protobuf.AbstractParser<Reservation>() {
      public Reservation parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Reservation(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<Reservation> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required int32 id = 1;
    public static final int ID_FIELD_NUMBER = 1;
    private int id_;
    /**
     * <code>required int32 id = 1;</code>
     *
     * <pre>
     * 时间段ID
     * </pre>
     */
    public boolean hasId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int32 id = 1;</code>
     *
     * <pre>
     * 时间段ID
     * </pre>
     */
    public int getId() {
      return id_;
    }

    // required int32 group_id = 2;
    public static final int GROUP_ID_FIELD_NUMBER = 2;
    private int groupId_;
    /**
     * <code>required int32 group_id = 2;</code>
     *
     * <pre>
     * 课题组ID
     * </pre>
     */
    public boolean hasGroupId() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required int32 group_id = 2;</code>
     *
     * <pre>
     * 课题组ID
     * </pre>
     */
    public int getGroupId() {
      return groupId_;
    }

    // required int32 week = 3;
    public static final int WEEK_FIELD_NUMBER = 3;
    private int week_;
    /**
     * <code>required int32 week = 3;</code>
     *
     * <pre>
     * 星期
     * </pre>
     */
    public boolean hasWeek() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required int32 week = 3;</code>
     *
     * <pre>
     * 星期
     * </pre>
     */
    public int getWeek() {
      return week_;
    }

    // required int32 start_time = 4;
    public static final int START_TIME_FIELD_NUMBER = 4;
    private int startTime_;
    /**
     * <code>required int32 start_time = 4;</code>
     *
     * <pre>
     * 开始时间
     * </pre>
     */
    public boolean hasStartTime() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>required int32 start_time = 4;</code>
     *
     * <pre>
     * 开始时间
     * </pre>
     */
    public int getStartTime() {
      return startTime_;
    }

    // required int32 end_time = 5;
    public static final int END_TIME_FIELD_NUMBER = 5;
    private int endTime_;
    /**
     * <code>required int32 end_time = 5;</code>
     *
     * <pre>
     * 结束时间
     * </pre>
     */
    public boolean hasEndTime() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>required int32 end_time = 5;</code>
     *
     * <pre>
     * 结束时间
     * </pre>
     */
    public int getEndTime() {
      return endTime_;
    }

    // required int32 active_time = 6;
    public static final int ACTIVE_TIME_FIELD_NUMBER = 6;
    private int activeTime_;
    /**
     * <code>required int32 active_time = 6;</code>
     *
     * <pre>
     * 生效时间
     * </pre>
     */
    public boolean hasActiveTime() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>required int32 active_time = 6;</code>
     *
     * <pre>
     * 生效时间
     * </pre>
     */
    public int getActiveTime() {
      return activeTime_;
    }

    // required int32 expire_time = 7;
    public static final int EXPIRE_TIME_FIELD_NUMBER = 7;
    private int expireTime_;
    /**
     * <code>required int32 expire_time = 7;</code>
     *
     * <pre>
     * 失效时间
     * </pre>
     */
    public boolean hasExpireTime() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>required int32 expire_time = 7;</code>
     *
     * <pre>
     * 失效时间
     * </pre>
     */
    public int getExpireTime() {
      return expireTime_;
    }

    // optional int32 delete_time = 8;
    public static final int DELETE_TIME_FIELD_NUMBER = 8;
    private int deleteTime_;
    /**
     * <code>optional int32 delete_time = 8;</code>
     *
     * <pre>
     * 删除时间
     * </pre>
     */
    public boolean hasDeleteTime() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional int32 delete_time = 8;</code>
     *
     * <pre>
     * 删除时间
     * </pre>
     */
    public int getDeleteTime() {
      return deleteTime_;
    }

    private void initFields() {
      id_ = 0;
      groupId_ = 0;
      week_ = 0;
      startTime_ = 0;
      endTime_ = 0;
      activeTime_ = 0;
      expireTime_ = 0;
      deleteTime_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasGroupId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasWeek()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasStartTime()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasEndTime()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasActiveTime()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasExpireTime()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, id_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, groupId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, week_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(4, startTime_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(5, endTime_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeInt32(6, activeTime_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeInt32(7, expireTime_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeInt32(8, deleteTime_);
      }
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, id_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, groupId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, week_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, startTime_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, endTime_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, activeTime_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(7, expireTime_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(8, deleteTime_);
      }
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.slark.pengder.protocol.MessageProtos.Reservation parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.slark.pengder.protocol.MessageProtos.Reservation parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.slark.pengder.protocol.MessageProtos.Reservation parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.slark.pengder.protocol.MessageProtos.Reservation parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.slark.pengder.protocol.MessageProtos.Reservation parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.slark.pengder.protocol.MessageProtos.Reservation parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.slark.pengder.protocol.MessageProtos.Reservation parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.slark.pengder.protocol.MessageProtos.Reservation parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.slark.pengder.protocol.MessageProtos.Reservation parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.slark.pengder.protocol.MessageProtos.Reservation parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.slark.pengder.protocol.MessageProtos.Reservation prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    /**
     * Protobuf type {@code biotech.osla.Reservation}
     *
     * <pre>
     * 仪器专享时间
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.slark.pengder.protocol.MessageProtos.Reservation, Builder>
        implements com.slark.pengder.protocol.MessageProtos.ReservationOrBuilder {
      // Construct using com.slark.pengder.protocol.MessageProtos.Reservation.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        id_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        groupId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        week_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        startTime_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        endTime_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        activeTime_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        expireTime_ = 0;
        bitField0_ = (bitField0_ & ~0x00000040);
        deleteTime_ = 0;
        bitField0_ = (bitField0_ & ~0x00000080);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.slark.pengder.protocol.MessageProtos.Reservation getDefaultInstanceForType() {
        return com.slark.pengder.protocol.MessageProtos.Reservation.getDefaultInstance();
      }

      public com.slark.pengder.protocol.MessageProtos.Reservation build() {
        com.slark.pengder.protocol.MessageProtos.Reservation result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.slark.pengder.protocol.MessageProtos.Reservation buildPartial() {
        com.slark.pengder.protocol.MessageProtos.Reservation result = new com.slark.pengder.protocol.MessageProtos.Reservation(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.id_ = id_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.groupId_ = groupId_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.week_ = week_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.startTime_ = startTime_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.endTime_ = endTime_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.activeTime_ = activeTime_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.expireTime_ = expireTime_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.deleteTime_ = deleteTime_;
        result.bitField0_ = to_bitField0_;
        return result;
      }

      public Builder mergeFrom(com.slark.pengder.protocol.MessageProtos.Reservation other) {
        if (other == com.slark.pengder.protocol.MessageProtos.Reservation.getDefaultInstance()) return this;
        if (other.hasId()) {
          setId(other.getId());
        }
        if (other.hasGroupId()) {
          setGroupId(other.getGroupId());
        }
        if (other.hasWeek()) {
          setWeek(other.getWeek());
        }
        if (other.hasStartTime()) {
          setStartTime(other.getStartTime());
        }
        if (other.hasEndTime()) {
          setEndTime(other.getEndTime());
        }
        if (other.hasActiveTime()) {
          setActiveTime(other.getActiveTime());
        }
        if (other.hasExpireTime()) {
          setExpireTime(other.getExpireTime());
        }
        if (other.hasDeleteTime()) {
          setDeleteTime(other.getDeleteTime());
        }
        return this;
      }

      public final boolean isInitialized() {
        if (!hasId()) {
          
          return false;
        }
        if (!hasGroupId()) {
          
          return false;
        }
        if (!hasWeek()) {
          
          return false;
        }
        if (!hasStartTime()) {
          
          return false;
        }
        if (!hasEndTime()) {
          
          return false;
        }
        if (!hasActiveTime()) {
          
          return false;
        }
        if (!hasExpireTime()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.slark.pengder.protocol.MessageProtos.Reservation parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.slark.pengder.protocol.MessageProtos.Reservation) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required int32 id = 1;
      private int id_ ;
      /**
       * <code>required int32 id = 1;</code>
       *
       * <pre>
       * 时间段ID
       * </pre>
       */
      public boolean hasId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int32 id = 1;</code>
       *
       * <pre>
       * 时间段ID
       * </pre>
       */
      public int getId() {
        return id_;
      }
      /**
       * <code>required int32 id = 1;</code>
       *
       * <pre>
       * 时间段ID
       * </pre>
       */
      public Builder setId(int value) {
        bitField0_ |= 0x00000001;
        id_ = value;
        
        return this;
      }
      /**
       * <code>required int32 id = 1;</code>
       *
       * <pre>
       * 时间段ID
       * </pre>
       */
      public Builder clearId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        id_ = 0;
        
        return this;
      }

      // required int32 group_id = 2;
      private int groupId_ ;
      /**
       * <code>required int32 group_id = 2;</code>
       *
       * <pre>
       * 课题组ID
       * </pre>
       */
      public boolean hasGroupId() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required int32 group_id = 2;</code>
       *
       * <pre>
       * 课题组ID
       * </pre>
       */
      public int getGroupId() {
        return groupId_;
      }
      /**
       * <code>required int32 group_id = 2;</code>
       *
       * <pre>
       * 课题组ID
       * </pre>
       */
      public Builder setGroupId(int value) {
        bitField0_ |= 0x00000002;
        groupId_ = value;
        
        return this;
      }
      /**
       * <code>required int32 group_id = 2;</code>
       *
       * <pre>
       * 课题组ID
       * </pre>
       */
      public Builder clearGroupId() {
        bitField0_ = (bitField0_ & ~0x00000002);
        groupId_ = 0;
        
        return this;
      }

      // required int32 week = 3;
      private int week_ ;
      /**
       * <code>required int32 week = 3;</code>
       *
       * <pre>
       * 星期
       * </pre>
       */
      public boolean hasWeek() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required int32 week = 3;</code>
       *
       * <pre>
       * 星期
       * </pre>
       */
      public int getWeek() {
        return week_;
      }
      /**
       * <code>required int32 week = 3;</code>
       *
       * <pre>
       * 星期
       * </pre>
       */
      public Builder setWeek(int value) {
        bitField0_ |= 0x00000004;
        week_ = value;
        
        return this;
      }
      /**
       * <code>required int32 week = 3;</code>
       *
       * <pre>
       * 星期
       * </pre>
       */
      public Builder clearWeek() {
        bitField0_ = (bitField0_ & ~0x00000004);
        week_ = 0;
        
        return this;
      }

      // required int32 start_time = 4;
      private int startTime_ ;
      /**
       * <code>required int32 start_time = 4;</code>
       *
       * <pre>
       * 开始时间
       * </pre>
       */
      public boolean hasStartTime() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>required int32 start_time = 4;</code>
       *
       * <pre>
       * 开始时间
       * </pre>
       */
      public int getStartTime() {
        return startTime_;
      }
      /**
       * <code>required int32 start_time = 4;</code>
       *
       * <pre>
       * 开始时间
       * </pre>
       */
      public Builder setStartTime(int value) {
        bitField0_ |= 0x00000008;
        startTime_ = value;
        
        return this;
      }
      /**
       * <code>required int32 start_time = 4;</code>
       *
       * <pre>
       * 开始时间
       * </pre>
       */
      public Builder clearStartTime() {
        bitField0_ = (bitField0_ & ~0x00000008);
        startTime_ = 0;
        
        return this;
      }

      // required int32 end_time = 5;
      private int endTime_ ;
      /**
       * <code>required int32 end_time = 5;</code>
       *
       * <pre>
       * 结束时间
       * </pre>
       */
      public boolean hasEndTime() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>required int32 end_time = 5;</code>
       *
       * <pre>
       * 结束时间
       * </pre>
       */
      public int getEndTime() {
        return endTime_;
      }
      /**
       * <code>required int32 end_time = 5;</code>
       *
       * <pre>
       * 结束时间
       * </pre>
       */
      public Builder setEndTime(int value) {
        bitField0_ |= 0x00000010;
        endTime_ = value;
        
        return this;
      }
      /**
       * <code>required int32 end_time = 5;</code>
       *
       * <pre>
       * 结束时间
       * </pre>
       */
      public Builder clearEndTime() {
        bitField0_ = (bitField0_ & ~0x00000010);
        endTime_ = 0;
        
        return this;
      }

      // required int32 active_time = 6;
      private int activeTime_ ;
      /**
       * <code>required int32 active_time = 6;</code>
       *
       * <pre>
       * 生效时间
       * </pre>
       */
      public boolean hasActiveTime() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>required int32 active_time = 6;</code>
       *
       * <pre>
       * 生效时间
       * </pre>
       */
      public int getActiveTime() {
        return activeTime_;
      }
      /**
       * <code>required int32 active_time = 6;</code>
       *
       * <pre>
       * 生效时间
       * </pre>
       */
      public Builder setActiveTime(int value) {
        bitField0_ |= 0x00000020;
        activeTime_ = value;
        
        return this;
      }
      /**
       * <code>required int32 active_time = 6;</code>
       *
       * <pre>
       * 生效时间
       * </pre>
       */
      public Builder clearActiveTime() {
        bitField0_ = (bitField0_ & ~0x00000020);
        activeTime_ = 0;
        
        return this;
      }

      // required int32 expire_time = 7;
      private int expireTime_ ;
      /**
       * <code>required int32 expire_time = 7;</code>
       *
       * <pre>
       * 失效时间
       * </pre>
       */
      public boolean hasExpireTime() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>required int32 expire_time = 7;</code>
       *
       * <pre>
       * 失效时间
       * </pre>
       */
      public int getExpireTime() {
        return expireTime_;
      }
      /**
       * <code>required int32 expire_time = 7;</code>
       *
       * <pre>
       * 失效时间
       * </pre>
       */
      public Builder setExpireTime(int value) {
        bitField0_ |= 0x00000040;
        expireTime_ = value;
        
        return this;
      }
      /**
       * <code>required int32 expire_time = 7;</code>
       *
       * <pre>
       * 失效时间
       * </pre>
       */
      public Builder clearExpireTime() {
        bitField0_ = (bitField0_ & ~0x00000040);
        expireTime_ = 0;
        
        return this;
      }

      // optional int32 delete_time = 8;
      private int deleteTime_ ;
      /**
       * <code>optional int32 delete_time = 8;</code>
       *
       * <pre>
       * 删除时间
       * </pre>
       */
      public boolean hasDeleteTime() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional int32 delete_time = 8;</code>
       *
       * <pre>
       * 删除时间
       * </pre>
       */
      public int getDeleteTime() {
        return deleteTime_;
      }
      /**
       * <code>optional int32 delete_time = 8;</code>
       *
       * <pre>
       * 删除时间
       * </pre>
       */
      public Builder setDeleteTime(int value) {
        bitField0_ |= 0x00000080;
        deleteTime_ = value;
        
        return this;
      }
      /**
       * <code>optional int32 delete_time = 8;</code>
       *
       * <pre>
       * 删除时间
       * </pre>
       */
      public Builder clearDeleteTime() {
        bitField0_ = (bitField0_ & ~0x00000080);
        deleteTime_ = 0;
        
        return this;
      }

      // @@protoc_insertion_point(builder_scope:biotech.osla.Reservation)
    }

    static {
      defaultInstance = new Reservation(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:biotech.osla.Reservation)
  }

  public interface ReservationListOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {

    // repeated .biotech.osla.Reservation reservation = 1;
    /**
     * <code>repeated .biotech.osla.Reservation reservation = 1;</code>
     */
    java.util.List<com.slark.pengder.protocol.MessageProtos.Reservation> 
        getReservationList();
    /**
     * <code>repeated .biotech.osla.Reservation reservation = 1;</code>
     */
    com.slark.pengder.protocol.MessageProtos.Reservation getReservation(int index);
    /**
     * <code>repeated .biotech.osla.Reservation reservation = 1;</code>
     */
    int getReservationCount();
  }
  /**
   * Protobuf type {@code biotech.osla.ReservationList}
   *
   * <pre>
   * 仪器专享时间列表
   * </pre>
   */
  public static final class ReservationList extends
      com.google.protobuf.GeneratedMessageLite
      implements ReservationListOrBuilder {
    // Use ReservationList.newBuilder() to construct.
    private ReservationList(com.google.protobuf.GeneratedMessageLite.Builder builder) {
      super(builder);

    }
    private ReservationList(boolean noInit) {}

    private static final ReservationList defaultInstance;
    public static ReservationList getDefaultInstance() {
      return defaultInstance;
    }

    public ReservationList getDefaultInstanceForType() {
      return defaultInstance;
    }

    private ReservationList(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                reservation_ = new java.util.ArrayList<com.slark.pengder.protocol.MessageProtos.Reservation>();
                mutable_bitField0_ |= 0x00000001;
              }
              reservation_.add(input.readMessage(com.slark.pengder.protocol.MessageProtos.Reservation.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          reservation_ = java.util.Collections.unmodifiableList(reservation_);
        }
        makeExtensionsImmutable();
      }
    }
    public static com.google.protobuf.Parser<ReservationList> PARSER =
        new com.google.protobuf.AbstractParser<ReservationList>() {
      public ReservationList parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ReservationList(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<ReservationList> getParserForType() {
      return PARSER;
    }

    // repeated .biotech.osla.Reservation reservation = 1;
    public static final int RESERVATION_FIELD_NUMBER = 1;
    private java.util.List<com.slark.pengder.protocol.MessageProtos.Reservation> reservation_;
    /**
     * <code>repeated .biotech.osla.Reservation reservation = 1;</code>
     */
    public java.util.List<com.slark.pengder.protocol.MessageProtos.Reservation> getReservationList() {
      return reservation_;
    }
    /**
     * <code>repeated .biotech.osla.Reservation reservation = 1;</code>
     */
    public java.util.List<? extends com.slark.pengder.protocol.MessageProtos.ReservationOrBuilder> 
        getReservationOrBuilderList() {
      return reservation_;
    }
    /**
     * <code>repeated .biotech.osla.Reservation reservation = 1;</code>
     */
    public int getReservationCount() {
      return reservation_.size();
    }
    /**
     * <code>repeated .biotech.osla.Reservation reservation = 1;</code>
     */
    public com.slark.pengder.protocol.MessageProtos.Reservation getReservation(int index) {
      return reservation_.get(index);
    }
    /**
     * <code>repeated .biotech.osla.Reservation reservation = 1;</code>
     */
    public com.slark.pengder.protocol.MessageProtos.ReservationOrBuilder getReservationOrBuilder(
        int index) {
      return reservation_.get(index);
    }

    private void initFields() {
      reservation_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      for (int i = 0; i < getReservationCount(); i++) {
        if (!getReservation(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < reservation_.size(); i++) {
        output.writeMessage(1, reservation_.get(i));
      }
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < reservation_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, reservation_.get(i));
      }
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.slark.pengder.protocol.MessageProtos.ReservationList parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.slark.pengder.protocol.MessageProtos.ReservationList parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.slark.pengder.protocol.MessageProtos.ReservationList parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.slark.pengder.protocol.MessageProtos.ReservationList parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.slark.pengder.protocol.MessageProtos.ReservationList parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.slark.pengder.protocol.MessageProtos.ReservationList parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.slark.pengder.protocol.MessageProtos.ReservationList parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.slark.pengder.protocol.MessageProtos.ReservationList parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.slark.pengder.protocol.MessageProtos.ReservationList parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.slark.pengder.protocol.MessageProtos.ReservationList parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.slark.pengder.protocol.MessageProtos.ReservationList prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    /**
     * Protobuf type {@code biotech.osla.ReservationList}
     *
     * <pre>
     * 仪器专享时间列表
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.slark.pengder.protocol.MessageProtos.ReservationList, Builder>
        implements com.slark.pengder.protocol.MessageProtos.ReservationListOrBuilder {
      // Construct using com.slark.pengder.protocol.MessageProtos.ReservationList.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        reservation_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.slark.pengder.protocol.MessageProtos.ReservationList getDefaultInstanceForType() {
        return com.slark.pengder.protocol.MessageProtos.ReservationList.getDefaultInstance();
      }

      public com.slark.pengder.protocol.MessageProtos.ReservationList build() {
        com.slark.pengder.protocol.MessageProtos.ReservationList result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.slark.pengder.protocol.MessageProtos.ReservationList buildPartial() {
        com.slark.pengder.protocol.MessageProtos.ReservationList result = new com.slark.pengder.protocol.MessageProtos.ReservationList(this);
        int from_bitField0_ = bitField0_;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          reservation_ = java.util.Collections.unmodifiableList(reservation_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.reservation_ = reservation_;
        return result;
      }

      public Builder mergeFrom(com.slark.pengder.protocol.MessageProtos.ReservationList other) {
        if (other == com.slark.pengder.protocol.MessageProtos.ReservationList.getDefaultInstance()) return this;
        if (!other.reservation_.isEmpty()) {
          if (reservation_.isEmpty()) {
            reservation_ = other.reservation_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureReservationIsMutable();
            reservation_.addAll(other.reservation_);
          }
          
        }
        return this;
      }

      public final boolean isInitialized() {
        for (int i = 0; i < getReservationCount(); i++) {
          if (!getReservation(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.slark.pengder.protocol.MessageProtos.ReservationList parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.slark.pengder.protocol.MessageProtos.ReservationList) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // repeated .biotech.osla.Reservation reservation = 1;
      private java.util.List<com.slark.pengder.protocol.MessageProtos.Reservation> reservation_ =
        java.util.Collections.emptyList();
      private void ensureReservationIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          reservation_ = new java.util.ArrayList<com.slark.pengder.protocol.MessageProtos.Reservation>(reservation_);
          bitField0_ |= 0x00000001;
         }
      }

      /**
       * <code>repeated .biotech.osla.Reservation reservation = 1;</code>
       */
      public java.util.List<com.slark.pengder.protocol.MessageProtos.Reservation> getReservationList() {
        return java.util.Collections.unmodifiableList(reservation_);
      }
      /**
       * <code>repeated .biotech.osla.Reservation reservation = 1;</code>
       */
      public int getReservationCount() {
        return reservation_.size();
      }
      /**
       * <code>repeated .biotech.osla.Reservation reservation = 1;</code>
       */
      public com.slark.pengder.protocol.MessageProtos.Reservation getReservation(int index) {
        return reservation_.get(index);
      }
      /**
       * <code>repeated .biotech.osla.Reservation reservation = 1;</code>
       */
      public Builder setReservation(
          int index, com.slark.pengder.protocol.MessageProtos.Reservation value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureReservationIsMutable();
        reservation_.set(index, value);

        return this;
      }
      /**
       * <code>repeated .biotech.osla.Reservation reservation = 1;</code>
       */
      public Builder setReservation(
          int index, com.slark.pengder.protocol.MessageProtos.Reservation.Builder builderForValue) {
        ensureReservationIsMutable();
        reservation_.set(index, builderForValue.build());

        return this;
      }
      /**
       * <code>repeated .biotech.osla.Reservation reservation = 1;</code>
       */
      public Builder addReservation(com.slark.pengder.protocol.MessageProtos.Reservation value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureReservationIsMutable();
        reservation_.add(value);

        return this;
      }
      /**
       * <code>repeated .biotech.osla.Reservation reservation = 1;</code>
       */
      public Builder addReservation(
          int index, com.slark.pengder.protocol.MessageProtos.Reservation value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureReservationIsMutable();
        reservation_.add(index, value);

        return this;
      }
      /**
       * <code>repeated .biotech.osla.Reservation reservation = 1;</code>
       */
      public Builder addReservation(
          com.slark.pengder.protocol.MessageProtos.Reservation.Builder builderForValue) {
        ensureReservationIsMutable();
        reservation_.add(builderForValue.build());

        return this;
      }
      /**
       * <code>repeated .biotech.osla.Reservation reservation = 1;</code>
       */
      public Builder addReservation(
          int index, com.slark.pengder.protocol.MessageProtos.Reservation.Builder builderForValue) {
        ensureReservationIsMutable();
        reservation_.add(index, builderForValue.build());

        return this;
      }
      /**
       * <code>repeated .biotech.osla.Reservation reservation = 1;</code>
       */
      public Builder addAllReservation(
          java.lang.Iterable<? extends com.slark.pengder.protocol.MessageProtos.Reservation> values) {
        ensureReservationIsMutable();
        super.addAll(values, reservation_);

        return this;
      }
      /**
       * <code>repeated .biotech.osla.Reservation reservation = 1;</code>
       */
      public Builder clearReservation() {
        reservation_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);

        return this;
      }
      /**
       * <code>repeated .biotech.osla.Reservation reservation = 1;</code>
       */
      public Builder removeReservation(int index) {
        ensureReservationIsMutable();
        reservation_.remove(index);

        return this;
      }

      // @@protoc_insertion_point(builder_scope:biotech.osla.ReservationList)
    }

    static {
      defaultInstance = new ReservationList(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:biotech.osla.ReservationList)
  }

  public interface UserOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {

    // required int32 id = 1;
    /**
     * <code>required int32 id = 1;</code>
     *
     * <pre>
     * 用户ID
     * </pre>
     */
    boolean hasId();
    /**
     * <code>required int32 id = 1;</code>
     *
     * <pre>
     * 用户ID
     * </pre>
     */
    int getId();

    // required int32 status = 2;
    /**
     * <code>required int32 status = 2;</code>
     *
     * <pre>
     * 用户状态
     * </pre>
     */
    boolean hasStatus();
    /**
     * <code>required int32 status = 2;</code>
     *
     * <pre>
     * 用户状态
     * </pre>
     */
    int getStatus();

    // required string first_name = 3;
    /**
     * <code>required string first_name = 3;</code>
     *
     * <pre>
     * 用户名字
     * </pre>
     */
    boolean hasFirstName();
    /**
     * <code>required string first_name = 3;</code>
     *
     * <pre>
     * 用户名字
     * </pre>
     */
    java.lang.String getFirstName();
    /**
     * <code>required string first_name = 3;</code>
     *
     * <pre>
     * 用户名字
     * </pre>
     */
    com.google.protobuf.ByteString
        getFirstNameBytes();

    // required string last_name = 4;
    /**
     * <code>required string last_name = 4;</code>
     *
     * <pre>
     * 用户姓氏
     * </pre>
     */
    boolean hasLastName();
    /**
     * <code>required string last_name = 4;</code>
     *
     * <pre>
     * 用户姓氏
     * </pre>
     */
    java.lang.String getLastName();
    /**
     * <code>required string last_name = 4;</code>
     *
     * <pre>
     * 用户姓氏
     * </pre>
     */
    com.google.protobuf.ByteString
        getLastNameBytes();

    // required string phone = 5;
    /**
     * <code>required string phone = 5;</code>
     *
     * <pre>
     * 用户电话
     * </pre>
     */
    boolean hasPhone();
    /**
     * <code>required string phone = 5;</code>
     *
     * <pre>
     * 用户电话
     * </pre>
     */
    java.lang.String getPhone();
    /**
     * <code>required string phone = 5;</code>
     *
     * <pre>
     * 用户电话
     * </pre>
     */
    com.google.protobuf.ByteString
        getPhoneBytes();

    // optional string card_serial = 6;
    /**
     * <code>optional string card_serial = 6;</code>
     *
     * <pre>
     * 用户一卡通序列号
     * </pre>
     */
    boolean hasCardSerial();
    /**
     * <code>optional string card_serial = 6;</code>
     *
     * <pre>
     * 用户一卡通序列号
     * </pre>
     */
    java.lang.String getCardSerial();
    /**
     * <code>optional string card_serial = 6;</code>
     *
     * <pre>
     * 用户一卡通序列号
     * </pre>
     */
    com.google.protobuf.ByteString
        getCardSerialBytes();

    // optional int32 account_id = 7;
    /**
     * <code>optional int32 account_id = 7;</code>
     *
     * <pre>
     * 用户当前账户ID
     * </pre>
     */
    boolean hasAccountId();
    /**
     * <code>optional int32 account_id = 7;</code>
     *
     * <pre>
     * 用户当前账户ID
     * </pre>
     */
    int getAccountId();

    // required int32 isblack = 8;
    /**
     * <code>required int32 isblack = 8;</code>
     *
     * <pre>
     * 是否黑名单
     * </pre>
     */
    boolean hasIsblack();
    /**
     * <code>required int32 isblack = 8;</code>
     *
     * <pre>
     * 是否黑名单
     * </pre>
     */
    int getIsblack();

    // optional int32 penaltyStopStart = 9;
    /**
     * <code>optional int32 penaltyStopStart = 9;</code>
     *
     * <pre>
     * 罚停开始时间
     * </pre>
     */
    boolean hasPenaltyStopStart();
    /**
     * <code>optional int32 penaltyStopStart = 9;</code>
     *
     * <pre>
     * 罚停开始时间
     * </pre>
     */
    int getPenaltyStopStart();

    // optional int32 penaltyStopEnd = 10;
    /**
     * <code>optional int32 penaltyStopEnd = 10;</code>
     *
     * <pre>
     * 罚停结束时间
     * </pre>
     */
    boolean hasPenaltyStopEnd();
    /**
     * <code>optional int32 penaltyStopEnd = 10;</code>
     *
     * <pre>
     * 罚停结束时间
     * </pre>
     */
    int getPenaltyStopEnd();
  }
  /**
   * Protobuf type {@code biotech.osla.User}
   *
   * <pre>
   * 用户
   * </pre>
   */
  public static final class User extends
      com.google.protobuf.GeneratedMessageLite
      implements UserOrBuilder {
    // Use User.newBuilder() to construct.
    private User(com.google.protobuf.GeneratedMessageLite.Builder builder) {
      super(builder);

    }
    private User(boolean noInit) {}

    private static final User defaultInstance;
    public static User getDefaultInstance() {
      return defaultInstance;
    }

    public User getDefaultInstanceForType() {
      return defaultInstance;
    }

    private User(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              id_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              status_ = input.readInt32();
              break;
            }
            case 26: {
              bitField0_ |= 0x00000004;
              firstName_ = input.readBytes();
              break;
            }
            case 34: {
              bitField0_ |= 0x00000008;
              lastName_ = input.readBytes();
              break;
            }
            case 42: {
              bitField0_ |= 0x00000010;
              phone_ = input.readBytes();
              break;
            }
            case 50: {
              bitField0_ |= 0x00000020;
              cardSerial_ = input.readBytes();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000040;
              accountId_ = input.readInt32();
              break;
            }
            case 64: {
              bitField0_ |= 0x00000080;
              isblack_ = input.readInt32();
              break;
            }
            case 72: {
              bitField0_ |= 0x00000100;
              penaltyStopStart_ = input.readInt32();
              break;
            }
            case 80: {
              bitField0_ |= 0x00000200;
              penaltyStopEnd_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static com.google.protobuf.Parser<User> PARSER =
        new com.google.protobuf.AbstractParser<User>() {
      public User parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new User(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<User> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required int32 id = 1;
    public static final int ID_FIELD_NUMBER = 1;
    private int id_;
    /**
     * <code>required int32 id = 1;</code>
     *
     * <pre>
     * 用户ID
     * </pre>
     */
    public boolean hasId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int32 id = 1;</code>
     *
     * <pre>
     * 用户ID
     * </pre>
     */
    public int getId() {
      return id_;
    }

    // required int32 status = 2;
    public static final int STATUS_FIELD_NUMBER = 2;
    private int status_;
    /**
     * <code>required int32 status = 2;</code>
     *
     * <pre>
     * 用户状态
     * </pre>
     */
    public boolean hasStatus() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required int32 status = 2;</code>
     *
     * <pre>
     * 用户状态
     * </pre>
     */
    public int getStatus() {
      return status_;
    }

    // required string first_name = 3;
    public static final int FIRST_NAME_FIELD_NUMBER = 3;
    private java.lang.Object firstName_;
    /**
     * <code>required string first_name = 3;</code>
     *
     * <pre>
     * 用户名字
     * </pre>
     */
    public boolean hasFirstName() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required string first_name = 3;</code>
     *
     * <pre>
     * 用户名字
     * </pre>
     */
    public java.lang.String getFirstName() {
      java.lang.Object ref = firstName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          firstName_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string first_name = 3;</code>
     *
     * <pre>
     * 用户名字
     * </pre>
     */
    public com.google.protobuf.ByteString
        getFirstNameBytes() {
      java.lang.Object ref = firstName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        firstName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // required string last_name = 4;
    public static final int LAST_NAME_FIELD_NUMBER = 4;
    private java.lang.Object lastName_;
    /**
     * <code>required string last_name = 4;</code>
     *
     * <pre>
     * 用户姓氏
     * </pre>
     */
    public boolean hasLastName() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>required string last_name = 4;</code>
     *
     * <pre>
     * 用户姓氏
     * </pre>
     */
    public java.lang.String getLastName() {
      java.lang.Object ref = lastName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          lastName_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string last_name = 4;</code>
     *
     * <pre>
     * 用户姓氏
     * </pre>
     */
    public com.google.protobuf.ByteString
        getLastNameBytes() {
      java.lang.Object ref = lastName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        lastName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // required string phone = 5;
    public static final int PHONE_FIELD_NUMBER = 5;
    private java.lang.Object phone_;
    /**
     * <code>required string phone = 5;</code>
     *
     * <pre>
     * 用户电话
     * </pre>
     */
    public boolean hasPhone() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>required string phone = 5;</code>
     *
     * <pre>
     * 用户电话
     * </pre>
     */
    public java.lang.String getPhone() {
      java.lang.Object ref = phone_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          phone_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string phone = 5;</code>
     *
     * <pre>
     * 用户电话
     * </pre>
     */
    public com.google.protobuf.ByteString
        getPhoneBytes() {
      java.lang.Object ref = phone_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        phone_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional string card_serial = 6;
    public static final int CARD_SERIAL_FIELD_NUMBER = 6;
    private java.lang.Object cardSerial_;
    /**
     * <code>optional string card_serial = 6;</code>
     *
     * <pre>
     * 用户一卡通序列号
     * </pre>
     */
    public boolean hasCardSerial() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional string card_serial = 6;</code>
     *
     * <pre>
     * 用户一卡通序列号
     * </pre>
     */
    public java.lang.String getCardSerial() {
      java.lang.Object ref = cardSerial_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          cardSerial_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string card_serial = 6;</code>
     *
     * <pre>
     * 用户一卡通序列号
     * </pre>
     */
    public com.google.protobuf.ByteString
        getCardSerialBytes() {
      java.lang.Object ref = cardSerial_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        cardSerial_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional int32 account_id = 7;
    public static final int ACCOUNT_ID_FIELD_NUMBER = 7;
    private int accountId_;
    /**
     * <code>optional int32 account_id = 7;</code>
     *
     * <pre>
     * 用户当前账户ID
     * </pre>
     */
    public boolean hasAccountId() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional int32 account_id = 7;</code>
     *
     * <pre>
     * 用户当前账户ID
     * </pre>
     */
    public int getAccountId() {
      return accountId_;
    }

    // required int32 isblack = 8;
    public static final int ISBLACK_FIELD_NUMBER = 8;
    private int isblack_;
    /**
     * <code>required int32 isblack = 8;</code>
     *
     * <pre>
     * 是否黑名单
     * </pre>
     */
    public boolean hasIsblack() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>required int32 isblack = 8;</code>
     *
     * <pre>
     * 是否黑名单
     * </pre>
     */
    public int getIsblack() {
      return isblack_;
    }

    // optional int32 penaltyStopStart = 9;
    public static final int PENALTYSTOPSTART_FIELD_NUMBER = 9;
    private int penaltyStopStart_;
    /**
     * <code>optional int32 penaltyStopStart = 9;</code>
     *
     * <pre>
     * 罚停开始时间
     * </pre>
     */
    public boolean hasPenaltyStopStart() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional int32 penaltyStopStart = 9;</code>
     *
     * <pre>
     * 罚停开始时间
     * </pre>
     */
    public int getPenaltyStopStart() {
      return penaltyStopStart_;
    }

    // optional int32 penaltyStopEnd = 10;
    public static final int PENALTYSTOPEND_FIELD_NUMBER = 10;
    private int penaltyStopEnd_;
    /**
     * <code>optional int32 penaltyStopEnd = 10;</code>
     *
     * <pre>
     * 罚停结束时间
     * </pre>
     */
    public boolean hasPenaltyStopEnd() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>optional int32 penaltyStopEnd = 10;</code>
     *
     * <pre>
     * 罚停结束时间
     * </pre>
     */
    public int getPenaltyStopEnd() {
      return penaltyStopEnd_;
    }

    private void initFields() {
      id_ = 0;
      status_ = 0;
      firstName_ = "";
      lastName_ = "";
      phone_ = "";
      cardSerial_ = "";
      accountId_ = 0;
      isblack_ = 0;
      penaltyStopStart_ = 0;
      penaltyStopEnd_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasStatus()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasFirstName()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasLastName()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasPhone()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasIsblack()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, id_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, status_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBytes(3, getFirstNameBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeBytes(4, getLastNameBytes());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeBytes(5, getPhoneBytes());
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeBytes(6, getCardSerialBytes());
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeInt32(7, accountId_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeInt32(8, isblack_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeInt32(9, penaltyStopStart_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeInt32(10, penaltyStopEnd_);
      }
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, id_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, status_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, getFirstNameBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(4, getLastNameBytes());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(5, getPhoneBytes());
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(6, getCardSerialBytes());
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(7, accountId_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(8, isblack_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(9, penaltyStopStart_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(10, penaltyStopEnd_);
      }
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.slark.pengder.protocol.MessageProtos.User parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.slark.pengder.protocol.MessageProtos.User parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.slark.pengder.protocol.MessageProtos.User parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.slark.pengder.protocol.MessageProtos.User parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.slark.pengder.protocol.MessageProtos.User parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.slark.pengder.protocol.MessageProtos.User parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.slark.pengder.protocol.MessageProtos.User parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.slark.pengder.protocol.MessageProtos.User parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.slark.pengder.protocol.MessageProtos.User parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.slark.pengder.protocol.MessageProtos.User parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.slark.pengder.protocol.MessageProtos.User prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    /**
     * Protobuf type {@code biotech.osla.User}
     *
     * <pre>
     * 用户
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.slark.pengder.protocol.MessageProtos.User, Builder>
        implements com.slark.pengder.protocol.MessageProtos.UserOrBuilder {
      // Construct using com.slark.pengder.protocol.MessageProtos.User.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        id_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        status_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        firstName_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        lastName_ = "";
        bitField0_ = (bitField0_ & ~0x00000008);
        phone_ = "";
        bitField0_ = (bitField0_ & ~0x00000010);
        cardSerial_ = "";
        bitField0_ = (bitField0_ & ~0x00000020);
        accountId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000040);
        isblack_ = 0;
        bitField0_ = (bitField0_ & ~0x00000080);
        penaltyStopStart_ = 0;
        bitField0_ = (bitField0_ & ~0x00000100);
        penaltyStopEnd_ = 0;
        bitField0_ = (bitField0_ & ~0x00000200);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.slark.pengder.protocol.MessageProtos.User getDefaultInstanceForType() {
        return com.slark.pengder.protocol.MessageProtos.User.getDefaultInstance();
      }

      public com.slark.pengder.protocol.MessageProtos.User build() {
        com.slark.pengder.protocol.MessageProtos.User result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.slark.pengder.protocol.MessageProtos.User buildPartial() {
        com.slark.pengder.protocol.MessageProtos.User result = new com.slark.pengder.protocol.MessageProtos.User(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.id_ = id_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.status_ = status_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.firstName_ = firstName_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.lastName_ = lastName_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.phone_ = phone_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.cardSerial_ = cardSerial_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.accountId_ = accountId_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.isblack_ = isblack_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        result.penaltyStopStart_ = penaltyStopStart_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000200;
        }
        result.penaltyStopEnd_ = penaltyStopEnd_;
        result.bitField0_ = to_bitField0_;
        return result;
      }

      public Builder mergeFrom(com.slark.pengder.protocol.MessageProtos.User other) {
        if (other == com.slark.pengder.protocol.MessageProtos.User.getDefaultInstance()) return this;
        if (other.hasId()) {
          setId(other.getId());
        }
        if (other.hasStatus()) {
          setStatus(other.getStatus());
        }
        if (other.hasFirstName()) {
          bitField0_ |= 0x00000004;
          firstName_ = other.firstName_;
          
        }
        if (other.hasLastName()) {
          bitField0_ |= 0x00000008;
          lastName_ = other.lastName_;
          
        }
        if (other.hasPhone()) {
          bitField0_ |= 0x00000010;
          phone_ = other.phone_;
          
        }
        if (other.hasCardSerial()) {
          bitField0_ |= 0x00000020;
          cardSerial_ = other.cardSerial_;
          
        }
        if (other.hasAccountId()) {
          setAccountId(other.getAccountId());
        }
        if (other.hasIsblack()) {
          setIsblack(other.getIsblack());
        }
        if (other.hasPenaltyStopStart()) {
          setPenaltyStopStart(other.getPenaltyStopStart());
        }
        if (other.hasPenaltyStopEnd()) {
          setPenaltyStopEnd(other.getPenaltyStopEnd());
        }
        return this;
      }

      public final boolean isInitialized() {
        if (!hasId()) {
          
          return false;
        }
        if (!hasStatus()) {
          
          return false;
        }
        if (!hasFirstName()) {
          
          return false;
        }
        if (!hasLastName()) {
          
          return false;
        }
        if (!hasPhone()) {
          
          return false;
        }
        if (!hasIsblack()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.slark.pengder.protocol.MessageProtos.User parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.slark.pengder.protocol.MessageProtos.User) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required int32 id = 1;
      private int id_ ;
      /**
       * <code>required int32 id = 1;</code>
       *
       * <pre>
       * 用户ID
       * </pre>
       */
      public boolean hasId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int32 id = 1;</code>
       *
       * <pre>
       * 用户ID
       * </pre>
       */
      public int getId() {
        return id_;
      }
      /**
       * <code>required int32 id = 1;</code>
       *
       * <pre>
       * 用户ID
       * </pre>
       */
      public Builder setId(int value) {
        bitField0_ |= 0x00000001;
        id_ = value;
        
        return this;
      }
      /**
       * <code>required int32 id = 1;</code>
       *
       * <pre>
       * 用户ID
       * </pre>
       */
      public Builder clearId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        id_ = 0;
        
        return this;
      }

      // required int32 status = 2;
      private int status_ ;
      /**
       * <code>required int32 status = 2;</code>
       *
       * <pre>
       * 用户状态
       * </pre>
       */
      public boolean hasStatus() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required int32 status = 2;</code>
       *
       * <pre>
       * 用户状态
       * </pre>
       */
      public int getStatus() {
        return status_;
      }
      /**
       * <code>required int32 status = 2;</code>
       *
       * <pre>
       * 用户状态
       * </pre>
       */
      public Builder setStatus(int value) {
        bitField0_ |= 0x00000002;
        status_ = value;
        
        return this;
      }
      /**
       * <code>required int32 status = 2;</code>
       *
       * <pre>
       * 用户状态
       * </pre>
       */
      public Builder clearStatus() {
        bitField0_ = (bitField0_ & ~0x00000002);
        status_ = 0;
        
        return this;
      }

      // required string first_name = 3;
      private java.lang.Object firstName_ = "";
      /**
       * <code>required string first_name = 3;</code>
       *
       * <pre>
       * 用户名字
       * </pre>
       */
      public boolean hasFirstName() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required string first_name = 3;</code>
       *
       * <pre>
       * 用户名字
       * </pre>
       */
      public java.lang.String getFirstName() {
        java.lang.Object ref = firstName_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          firstName_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string first_name = 3;</code>
       *
       * <pre>
       * 用户名字
       * </pre>
       */
      public com.google.protobuf.ByteString
          getFirstNameBytes() {
        java.lang.Object ref = firstName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          firstName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string first_name = 3;</code>
       *
       * <pre>
       * 用户名字
       * </pre>
       */
      public Builder setFirstName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        firstName_ = value;
        
        return this;
      }
      /**
       * <code>required string first_name = 3;</code>
       *
       * <pre>
       * 用户名字
       * </pre>
       */
      public Builder clearFirstName() {
        bitField0_ = (bitField0_ & ~0x00000004);
        firstName_ = getDefaultInstance().getFirstName();
        
        return this;
      }
      /**
       * <code>required string first_name = 3;</code>
       *
       * <pre>
       * 用户名字
       * </pre>
       */
      public Builder setFirstNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        firstName_ = value;
        
        return this;
      }

      // required string last_name = 4;
      private java.lang.Object lastName_ = "";
      /**
       * <code>required string last_name = 4;</code>
       *
       * <pre>
       * 用户姓氏
       * </pre>
       */
      public boolean hasLastName() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>required string last_name = 4;</code>
       *
       * <pre>
       * 用户姓氏
       * </pre>
       */
      public java.lang.String getLastName() {
        java.lang.Object ref = lastName_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          lastName_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string last_name = 4;</code>
       *
       * <pre>
       * 用户姓氏
       * </pre>
       */
      public com.google.protobuf.ByteString
          getLastNameBytes() {
        java.lang.Object ref = lastName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          lastName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string last_name = 4;</code>
       *
       * <pre>
       * 用户姓氏
       * </pre>
       */
      public Builder setLastName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        lastName_ = value;
        
        return this;
      }
      /**
       * <code>required string last_name = 4;</code>
       *
       * <pre>
       * 用户姓氏
       * </pre>
       */
      public Builder clearLastName() {
        bitField0_ = (bitField0_ & ~0x00000008);
        lastName_ = getDefaultInstance().getLastName();
        
        return this;
      }
      /**
       * <code>required string last_name = 4;</code>
       *
       * <pre>
       * 用户姓氏
       * </pre>
       */
      public Builder setLastNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        lastName_ = value;
        
        return this;
      }

      // required string phone = 5;
      private java.lang.Object phone_ = "";
      /**
       * <code>required string phone = 5;</code>
       *
       * <pre>
       * 用户电话
       * </pre>
       */
      public boolean hasPhone() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>required string phone = 5;</code>
       *
       * <pre>
       * 用户电话
       * </pre>
       */
      public java.lang.String getPhone() {
        java.lang.Object ref = phone_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          phone_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string phone = 5;</code>
       *
       * <pre>
       * 用户电话
       * </pre>
       */
      public com.google.protobuf.ByteString
          getPhoneBytes() {
        java.lang.Object ref = phone_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          phone_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string phone = 5;</code>
       *
       * <pre>
       * 用户电话
       * </pre>
       */
      public Builder setPhone(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
        phone_ = value;
        
        return this;
      }
      /**
       * <code>required string phone = 5;</code>
       *
       * <pre>
       * 用户电话
       * </pre>
       */
      public Builder clearPhone() {
        bitField0_ = (bitField0_ & ~0x00000010);
        phone_ = getDefaultInstance().getPhone();
        
        return this;
      }
      /**
       * <code>required string phone = 5;</code>
       *
       * <pre>
       * 用户电话
       * </pre>
       */
      public Builder setPhoneBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
        phone_ = value;
        
        return this;
      }

      // optional string card_serial = 6;
      private java.lang.Object cardSerial_ = "";
      /**
       * <code>optional string card_serial = 6;</code>
       *
       * <pre>
       * 用户一卡通序列号
       * </pre>
       */
      public boolean hasCardSerial() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional string card_serial = 6;</code>
       *
       * <pre>
       * 用户一卡通序列号
       * </pre>
       */
      public java.lang.String getCardSerial() {
        java.lang.Object ref = cardSerial_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          cardSerial_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string card_serial = 6;</code>
       *
       * <pre>
       * 用户一卡通序列号
       * </pre>
       */
      public com.google.protobuf.ByteString
          getCardSerialBytes() {
        java.lang.Object ref = cardSerial_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          cardSerial_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string card_serial = 6;</code>
       *
       * <pre>
       * 用户一卡通序列号
       * </pre>
       */
      public Builder setCardSerial(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000020;
        cardSerial_ = value;
        
        return this;
      }
      /**
       * <code>optional string card_serial = 6;</code>
       *
       * <pre>
       * 用户一卡通序列号
       * </pre>
       */
      public Builder clearCardSerial() {
        bitField0_ = (bitField0_ & ~0x00000020);
        cardSerial_ = getDefaultInstance().getCardSerial();
        
        return this;
      }
      /**
       * <code>optional string card_serial = 6;</code>
       *
       * <pre>
       * 用户一卡通序列号
       * </pre>
       */
      public Builder setCardSerialBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000020;
        cardSerial_ = value;
        
        return this;
      }

      // optional int32 account_id = 7;
      private int accountId_ ;
      /**
       * <code>optional int32 account_id = 7;</code>
       *
       * <pre>
       * 用户当前账户ID
       * </pre>
       */
      public boolean hasAccountId() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional int32 account_id = 7;</code>
       *
       * <pre>
       * 用户当前账户ID
       * </pre>
       */
      public int getAccountId() {
        return accountId_;
      }
      /**
       * <code>optional int32 account_id = 7;</code>
       *
       * <pre>
       * 用户当前账户ID
       * </pre>
       */
      public Builder setAccountId(int value) {
        bitField0_ |= 0x00000040;
        accountId_ = value;
        
        return this;
      }
      /**
       * <code>optional int32 account_id = 7;</code>
       *
       * <pre>
       * 用户当前账户ID
       * </pre>
       */
      public Builder clearAccountId() {
        bitField0_ = (bitField0_ & ~0x00000040);
        accountId_ = 0;
        
        return this;
      }

      // required int32 isblack = 8;
      private int isblack_ ;
      /**
       * <code>required int32 isblack = 8;</code>
       *
       * <pre>
       * 是否黑名单
       * </pre>
       */
      public boolean hasIsblack() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>required int32 isblack = 8;</code>
       *
       * <pre>
       * 是否黑名单
       * </pre>
       */
      public int getIsblack() {
        return isblack_;
      }
      /**
       * <code>required int32 isblack = 8;</code>
       *
       * <pre>
       * 是否黑名单
       * </pre>
       */
      public Builder setIsblack(int value) {
        bitField0_ |= 0x00000080;
        isblack_ = value;
        
        return this;
      }
      /**
       * <code>required int32 isblack = 8;</code>
       *
       * <pre>
       * 是否黑名单
       * </pre>
       */
      public Builder clearIsblack() {
        bitField0_ = (bitField0_ & ~0x00000080);
        isblack_ = 0;
        
        return this;
      }

      // optional int32 penaltyStopStart = 9;
      private int penaltyStopStart_ ;
      /**
       * <code>optional int32 penaltyStopStart = 9;</code>
       *
       * <pre>
       * 罚停开始时间
       * </pre>
       */
      public boolean hasPenaltyStopStart() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional int32 penaltyStopStart = 9;</code>
       *
       * <pre>
       * 罚停开始时间
       * </pre>
       */
      public int getPenaltyStopStart() {
        return penaltyStopStart_;
      }
      /**
       * <code>optional int32 penaltyStopStart = 9;</code>
       *
       * <pre>
       * 罚停开始时间
       * </pre>
       */
      public Builder setPenaltyStopStart(int value) {
        bitField0_ |= 0x00000100;
        penaltyStopStart_ = value;
        
        return this;
      }
      /**
       * <code>optional int32 penaltyStopStart = 9;</code>
       *
       * <pre>
       * 罚停开始时间
       * </pre>
       */
      public Builder clearPenaltyStopStart() {
        bitField0_ = (bitField0_ & ~0x00000100);
        penaltyStopStart_ = 0;
        
        return this;
      }

      // optional int32 penaltyStopEnd = 10;
      private int penaltyStopEnd_ ;
      /**
       * <code>optional int32 penaltyStopEnd = 10;</code>
       *
       * <pre>
       * 罚停结束时间
       * </pre>
       */
      public boolean hasPenaltyStopEnd() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional int32 penaltyStopEnd = 10;</code>
       *
       * <pre>
       * 罚停结束时间
       * </pre>
       */
      public int getPenaltyStopEnd() {
        return penaltyStopEnd_;
      }
      /**
       * <code>optional int32 penaltyStopEnd = 10;</code>
       *
       * <pre>
       * 罚停结束时间
       * </pre>
       */
      public Builder setPenaltyStopEnd(int value) {
        bitField0_ |= 0x00000200;
        penaltyStopEnd_ = value;
        
        return this;
      }
      /**
       * <code>optional int32 penaltyStopEnd = 10;</code>
       *
       * <pre>
       * 罚停结束时间
       * </pre>
       */
      public Builder clearPenaltyStopEnd() {
        bitField0_ = (bitField0_ & ~0x00000200);
        penaltyStopEnd_ = 0;
        
        return this;
      }

      // @@protoc_insertion_point(builder_scope:biotech.osla.User)
    }

    static {
      defaultInstance = new User(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:biotech.osla.User)
  }

  public interface UserListOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {

    // repeated .biotech.osla.User user = 1;
    /**
     * <code>repeated .biotech.osla.User user = 1;</code>
     */
    java.util.List<com.slark.pengder.protocol.MessageProtos.User> 
        getUserList();
    /**
     * <code>repeated .biotech.osla.User user = 1;</code>
     */
    com.slark.pengder.protocol.MessageProtos.User getUser(int index);
    /**
     * <code>repeated .biotech.osla.User user = 1;</code>
     */
    int getUserCount();
  }
  /**
   * Protobuf type {@code biotech.osla.UserList}
   *
   * <pre>
   * 用户列表
   * </pre>
   */
  public static final class UserList extends
      com.google.protobuf.GeneratedMessageLite
      implements UserListOrBuilder {
    // Use UserList.newBuilder() to construct.
    private UserList(com.google.protobuf.GeneratedMessageLite.Builder builder) {
      super(builder);

    }
    private UserList(boolean noInit) {}

    private static final UserList defaultInstance;
    public static UserList getDefaultInstance() {
      return defaultInstance;
    }

    public UserList getDefaultInstanceForType() {
      return defaultInstance;
    }

    private UserList(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                user_ = new java.util.ArrayList<com.slark.pengder.protocol.MessageProtos.User>();
                mutable_bitField0_ |= 0x00000001;
              }
              user_.add(input.readMessage(com.slark.pengder.protocol.MessageProtos.User.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          user_ = java.util.Collections.unmodifiableList(user_);
        }
        makeExtensionsImmutable();
      }
    }
    public static com.google.protobuf.Parser<UserList> PARSER =
        new com.google.protobuf.AbstractParser<UserList>() {
      public UserList parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new UserList(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<UserList> getParserForType() {
      return PARSER;
    }

    // repeated .biotech.osla.User user = 1;
    public static final int USER_FIELD_NUMBER = 1;
    private java.util.List<com.slark.pengder.protocol.MessageProtos.User> user_;
    /**
     * <code>repeated .biotech.osla.User user = 1;</code>
     */
    public java.util.List<com.slark.pengder.protocol.MessageProtos.User> getUserList() {
      return user_;
    }
    /**
     * <code>repeated .biotech.osla.User user = 1;</code>
     */
    public java.util.List<? extends com.slark.pengder.protocol.MessageProtos.UserOrBuilder> 
        getUserOrBuilderList() {
      return user_;
    }
    /**
     * <code>repeated .biotech.osla.User user = 1;</code>
     */
    public int getUserCount() {
      return user_.size();
    }
    /**
     * <code>repeated .biotech.osla.User user = 1;</code>
     */
    public com.slark.pengder.protocol.MessageProtos.User getUser(int index) {
      return user_.get(index);
    }
    /**
     * <code>repeated .biotech.osla.User user = 1;</code>
     */
    public com.slark.pengder.protocol.MessageProtos.UserOrBuilder getUserOrBuilder(
        int index) {
      return user_.get(index);
    }

    private void initFields() {
      user_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      for (int i = 0; i < getUserCount(); i++) {
        if (!getUser(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < user_.size(); i++) {
        output.writeMessage(1, user_.get(i));
      }
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < user_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, user_.get(i));
      }
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.slark.pengder.protocol.MessageProtos.UserList parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.slark.pengder.protocol.MessageProtos.UserList parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.slark.pengder.protocol.MessageProtos.UserList parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.slark.pengder.protocol.MessageProtos.UserList parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.slark.pengder.protocol.MessageProtos.UserList parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.slark.pengder.protocol.MessageProtos.UserList parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.slark.pengder.protocol.MessageProtos.UserList parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.slark.pengder.protocol.MessageProtos.UserList parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.slark.pengder.protocol.MessageProtos.UserList parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.slark.pengder.protocol.MessageProtos.UserList parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.slark.pengder.protocol.MessageProtos.UserList prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    /**
     * Protobuf type {@code biotech.osla.UserList}
     *
     * <pre>
     * 用户列表
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.slark.pengder.protocol.MessageProtos.UserList, Builder>
        implements com.slark.pengder.protocol.MessageProtos.UserListOrBuilder {
      // Construct using com.slark.pengder.protocol.MessageProtos.UserList.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        user_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.slark.pengder.protocol.MessageProtos.UserList getDefaultInstanceForType() {
        return com.slark.pengder.protocol.MessageProtos.UserList.getDefaultInstance();
      }

      public com.slark.pengder.protocol.MessageProtos.UserList build() {
        com.slark.pengder.protocol.MessageProtos.UserList result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.slark.pengder.protocol.MessageProtos.UserList buildPartial() {
        com.slark.pengder.protocol.MessageProtos.UserList result = new com.slark.pengder.protocol.MessageProtos.UserList(this);
        int from_bitField0_ = bitField0_;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          user_ = java.util.Collections.unmodifiableList(user_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.user_ = user_;
        return result;
      }

      public Builder mergeFrom(com.slark.pengder.protocol.MessageProtos.UserList other) {
        if (other == com.slark.pengder.protocol.MessageProtos.UserList.getDefaultInstance()) return this;
        if (!other.user_.isEmpty()) {
          if (user_.isEmpty()) {
            user_ = other.user_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureUserIsMutable();
            user_.addAll(other.user_);
          }
          
        }
        return this;
      }

      public final boolean isInitialized() {
        for (int i = 0; i < getUserCount(); i++) {
          if (!getUser(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.slark.pengder.protocol.MessageProtos.UserList parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.slark.pengder.protocol.MessageProtos.UserList) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // repeated .biotech.osla.User user = 1;
      private java.util.List<com.slark.pengder.protocol.MessageProtos.User> user_ =
        java.util.Collections.emptyList();
      private void ensureUserIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          user_ = new java.util.ArrayList<com.slark.pengder.protocol.MessageProtos.User>(user_);
          bitField0_ |= 0x00000001;
         }
      }

      /**
       * <code>repeated .biotech.osla.User user = 1;</code>
       */
      public java.util.List<com.slark.pengder.protocol.MessageProtos.User> getUserList() {
        return java.util.Collections.unmodifiableList(user_);
      }
      /**
       * <code>repeated .biotech.osla.User user = 1;</code>
       */
      public int getUserCount() {
        return user_.size();
      }
      /**
       * <code>repeated .biotech.osla.User user = 1;</code>
       */
      public com.slark.pengder.protocol.MessageProtos.User getUser(int index) {
        return user_.get(index);
      }
      /**
       * <code>repeated .biotech.osla.User user = 1;</code>
       */
      public Builder setUser(
          int index, com.slark.pengder.protocol.MessageProtos.User value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureUserIsMutable();
        user_.set(index, value);

        return this;
      }
      /**
       * <code>repeated .biotech.osla.User user = 1;</code>
       */
      public Builder setUser(
          int index, com.slark.pengder.protocol.MessageProtos.User.Builder builderForValue) {
        ensureUserIsMutable();
        user_.set(index, builderForValue.build());

        return this;
      }
      /**
       * <code>repeated .biotech.osla.User user = 1;</code>
       */
      public Builder addUser(com.slark.pengder.protocol.MessageProtos.User value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureUserIsMutable();
        user_.add(value);

        return this;
      }
      /**
       * <code>repeated .biotech.osla.User user = 1;</code>
       */
      public Builder addUser(
          int index, com.slark.pengder.protocol.MessageProtos.User value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureUserIsMutable();
        user_.add(index, value);

        return this;
      }
      /**
       * <code>repeated .biotech.osla.User user = 1;</code>
       */
      public Builder addUser(
          com.slark.pengder.protocol.MessageProtos.User.Builder builderForValue) {
        ensureUserIsMutable();
        user_.add(builderForValue.build());

        return this;
      }
      /**
       * <code>repeated .biotech.osla.User user = 1;</code>
       */
      public Builder addUser(
          int index, com.slark.pengder.protocol.MessageProtos.User.Builder builderForValue) {
        ensureUserIsMutable();
        user_.add(index, builderForValue.build());

        return this;
      }
      /**
       * <code>repeated .biotech.osla.User user = 1;</code>
       */
      public Builder addAllUser(
          java.lang.Iterable<? extends com.slark.pengder.protocol.MessageProtos.User> values) {
        ensureUserIsMutable();
        super.addAll(values, user_);

        return this;
      }
      /**
       * <code>repeated .biotech.osla.User user = 1;</code>
       */
      public Builder clearUser() {
        user_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);

        return this;
      }
      /**
       * <code>repeated .biotech.osla.User user = 1;</code>
       */
      public Builder removeUser(int index) {
        ensureUserIsMutable();
        user_.remove(index);

        return this;
      }

      // @@protoc_insertion_point(builder_scope:biotech.osla.UserList)
    }

    static {
      defaultInstance = new UserList(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:biotech.osla.UserList)
  }

  public interface AccountOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {

    // required int32 id = 1;
    /**
     * <code>required int32 id = 1;</code>
     *
     * <pre>
     * 账户ID
     * </pre>
     */
    boolean hasId();
    /**
     * <code>required int32 id = 1;</code>
     *
     * <pre>
     * 账户ID
     * </pre>
     */
    int getId();

    // required int32 status = 2;
    /**
     * <code>required int32 status = 2;</code>
     *
     * <pre>
     * 账户状态
     * </pre>
     */
    boolean hasStatus();
    /**
     * <code>required int32 status = 2;</code>
     *
     * <pre>
     * 账户状态
     * </pre>
     */
    int getStatus();

    // required int32 group_id = 3;
    /**
     * <code>required int32 group_id = 3;</code>
     *
     * <pre>
     * 账户所属课题组
     * </pre>
     */
    boolean hasGroupId();
    /**
     * <code>required int32 group_id = 3;</code>
     *
     * <pre>
     * 账户所属课题组
     * </pre>
     */
    int getGroupId();

    // required int32 deposit = 4;
    /**
     * <code>required int32 deposit = 4;</code>
     *
     * <pre>
     * 账户余额
     * </pre>
     */
    boolean hasDeposit();
    /**
     * <code>required int32 deposit = 4;</code>
     *
     * <pre>
     * 账户余额
     * </pre>
     */
    int getDeposit();

    // required int32 credit = 5;
    /**
     * <code>required int32 credit = 5;</code>
     *
     * <pre>
     * 信用额度
     * </pre>
     */
    boolean hasCredit();
    /**
     * <code>required int32 credit = 5;</code>
     *
     * <pre>
     * 信用额度
     * </pre>
     */
    int getCredit();

    // required int32 credit_temp = 6;
    /**
     * <code>required int32 credit_temp = 6;</code>
     *
     * <pre>
     * 临时信用额度
     * </pre>
     */
    boolean hasCreditTemp();
    /**
     * <code>required int32 credit_temp = 6;</code>
     *
     * <pre>
     * 临时信用额度
     * </pre>
     */
    int getCreditTemp();

    // required int32 credit_temp_expire_time = 7;
    /**
     * <code>required int32 credit_temp_expire_time = 7;</code>
     *
     * <pre>
     * 临时信用额度失效时间
     * </pre>
     */
    boolean hasCreditTempExpireTime();
    /**
     * <code>required int32 credit_temp_expire_time = 7;</code>
     *
     * <pre>
     * 临时信用额度失效时间
     * </pre>
     */
    int getCreditTempExpireTime();
  }
  /**
   * Protobuf type {@code biotech.osla.Account}
   *
   * <pre>
   * 账户
   * </pre>
   */
  public static final class Account extends
      com.google.protobuf.GeneratedMessageLite
      implements AccountOrBuilder {
    // Use Account.newBuilder() to construct.
    private Account(com.google.protobuf.GeneratedMessageLite.Builder builder) {
      super(builder);

    }
    private Account(boolean noInit) {}

    private static final Account defaultInstance;
    public static Account getDefaultInstance() {
      return defaultInstance;
    }

    public Account getDefaultInstanceForType() {
      return defaultInstance;
    }

    private Account(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              id_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              status_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              groupId_ = input.readInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              deposit_ = input.readInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              credit_ = input.readInt32();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              creditTemp_ = input.readInt32();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000040;
              creditTempExpireTime_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static com.google.protobuf.Parser<Account> PARSER =
        new com.google.protobuf.AbstractParser<Account>() {
      public Account parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Account(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<Account> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required int32 id = 1;
    public static final int ID_FIELD_NUMBER = 1;
    private int id_;
    /**
     * <code>required int32 id = 1;</code>
     *
     * <pre>
     * 账户ID
     * </pre>
     */
    public boolean hasId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int32 id = 1;</code>
     *
     * <pre>
     * 账户ID
     * </pre>
     */
    public int getId() {
      return id_;
    }

    // required int32 status = 2;
    public static final int STATUS_FIELD_NUMBER = 2;
    private int status_;
    /**
     * <code>required int32 status = 2;</code>
     *
     * <pre>
     * 账户状态
     * </pre>
     */
    public boolean hasStatus() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required int32 status = 2;</code>
     *
     * <pre>
     * 账户状态
     * </pre>
     */
    public int getStatus() {
      return status_;
    }

    // required int32 group_id = 3;
    public static final int GROUP_ID_FIELD_NUMBER = 3;
    private int groupId_;
    /**
     * <code>required int32 group_id = 3;</code>
     *
     * <pre>
     * 账户所属课题组
     * </pre>
     */
    public boolean hasGroupId() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required int32 group_id = 3;</code>
     *
     * <pre>
     * 账户所属课题组
     * </pre>
     */
    public int getGroupId() {
      return groupId_;
    }

    // required int32 deposit = 4;
    public static final int DEPOSIT_FIELD_NUMBER = 4;
    private int deposit_;
    /**
     * <code>required int32 deposit = 4;</code>
     *
     * <pre>
     * 账户余额
     * </pre>
     */
    public boolean hasDeposit() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>required int32 deposit = 4;</code>
     *
     * <pre>
     * 账户余额
     * </pre>
     */
    public int getDeposit() {
      return deposit_;
    }

    // required int32 credit = 5;
    public static final int CREDIT_FIELD_NUMBER = 5;
    private int credit_;
    /**
     * <code>required int32 credit = 5;</code>
     *
     * <pre>
     * 信用额度
     * </pre>
     */
    public boolean hasCredit() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>required int32 credit = 5;</code>
     *
     * <pre>
     * 信用额度
     * </pre>
     */
    public int getCredit() {
      return credit_;
    }

    // required int32 credit_temp = 6;
    public static final int CREDIT_TEMP_FIELD_NUMBER = 6;
    private int creditTemp_;
    /**
     * <code>required int32 credit_temp = 6;</code>
     *
     * <pre>
     * 临时信用额度
     * </pre>
     */
    public boolean hasCreditTemp() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>required int32 credit_temp = 6;</code>
     *
     * <pre>
     * 临时信用额度
     * </pre>
     */
    public int getCreditTemp() {
      return creditTemp_;
    }

    // required int32 credit_temp_expire_time = 7;
    public static final int CREDIT_TEMP_EXPIRE_TIME_FIELD_NUMBER = 7;
    private int creditTempExpireTime_;
    /**
     * <code>required int32 credit_temp_expire_time = 7;</code>
     *
     * <pre>
     * 临时信用额度失效时间
     * </pre>
     */
    public boolean hasCreditTempExpireTime() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>required int32 credit_temp_expire_time = 7;</code>
     *
     * <pre>
     * 临时信用额度失效时间
     * </pre>
     */
    public int getCreditTempExpireTime() {
      return creditTempExpireTime_;
    }

    private void initFields() {
      id_ = 0;
      status_ = 0;
      groupId_ = 0;
      deposit_ = 0;
      credit_ = 0;
      creditTemp_ = 0;
      creditTempExpireTime_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasStatus()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasGroupId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasDeposit()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasCredit()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasCreditTemp()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasCreditTempExpireTime()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, id_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, status_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, groupId_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(4, deposit_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(5, credit_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeInt32(6, creditTemp_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeInt32(7, creditTempExpireTime_);
      }
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, id_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, status_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, groupId_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, deposit_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, credit_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, creditTemp_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(7, creditTempExpireTime_);
      }
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.slark.pengder.protocol.MessageProtos.Account parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.slark.pengder.protocol.MessageProtos.Account parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.slark.pengder.protocol.MessageProtos.Account parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.slark.pengder.protocol.MessageProtos.Account parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.slark.pengder.protocol.MessageProtos.Account parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.slark.pengder.protocol.MessageProtos.Account parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.slark.pengder.protocol.MessageProtos.Account parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.slark.pengder.protocol.MessageProtos.Account parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.slark.pengder.protocol.MessageProtos.Account parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.slark.pengder.protocol.MessageProtos.Account parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.slark.pengder.protocol.MessageProtos.Account prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    /**
     * Protobuf type {@code biotech.osla.Account}
     *
     * <pre>
     * 账户
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.slark.pengder.protocol.MessageProtos.Account, Builder>
        implements com.slark.pengder.protocol.MessageProtos.AccountOrBuilder {
      // Construct using com.slark.pengder.protocol.MessageProtos.Account.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        id_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        status_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        groupId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        deposit_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        credit_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        creditTemp_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        creditTempExpireTime_ = 0;
        bitField0_ = (bitField0_ & ~0x00000040);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.slark.pengder.protocol.MessageProtos.Account getDefaultInstanceForType() {
        return com.slark.pengder.protocol.MessageProtos.Account.getDefaultInstance();
      }

      public com.slark.pengder.protocol.MessageProtos.Account build() {
        com.slark.pengder.protocol.MessageProtos.Account result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.slark.pengder.protocol.MessageProtos.Account buildPartial() {
        com.slark.pengder.protocol.MessageProtos.Account result = new com.slark.pengder.protocol.MessageProtos.Account(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.id_ = id_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.status_ = status_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.groupId_ = groupId_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.deposit_ = deposit_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.credit_ = credit_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.creditTemp_ = creditTemp_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.creditTempExpireTime_ = creditTempExpireTime_;
        result.bitField0_ = to_bitField0_;
        return result;
      }

      public Builder mergeFrom(com.slark.pengder.protocol.MessageProtos.Account other) {
        if (other == com.slark.pengder.protocol.MessageProtos.Account.getDefaultInstance()) return this;
        if (other.hasId()) {
          setId(other.getId());
        }
        if (other.hasStatus()) {
          setStatus(other.getStatus());
        }
        if (other.hasGroupId()) {
          setGroupId(other.getGroupId());
        }
        if (other.hasDeposit()) {
          setDeposit(other.getDeposit());
        }
        if (other.hasCredit()) {
          setCredit(other.getCredit());
        }
        if (other.hasCreditTemp()) {
          setCreditTemp(other.getCreditTemp());
        }
        if (other.hasCreditTempExpireTime()) {
          setCreditTempExpireTime(other.getCreditTempExpireTime());
        }
        return this;
      }

      public final boolean isInitialized() {
        if (!hasId()) {
          
          return false;
        }
        if (!hasStatus()) {
          
          return false;
        }
        if (!hasGroupId()) {
          
          return false;
        }
        if (!hasDeposit()) {
          
          return false;
        }
        if (!hasCredit()) {
          
          return false;
        }
        if (!hasCreditTemp()) {
          
          return false;
        }
        if (!hasCreditTempExpireTime()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.slark.pengder.protocol.MessageProtos.Account parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.slark.pengder.protocol.MessageProtos.Account) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required int32 id = 1;
      private int id_ ;
      /**
       * <code>required int32 id = 1;</code>
       *
       * <pre>
       * 账户ID
       * </pre>
       */
      public boolean hasId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int32 id = 1;</code>
       *
       * <pre>
       * 账户ID
       * </pre>
       */
      public int getId() {
        return id_;
      }
      /**
       * <code>required int32 id = 1;</code>
       *
       * <pre>
       * 账户ID
       * </pre>
       */
      public Builder setId(int value) {
        bitField0_ |= 0x00000001;
        id_ = value;
        
        return this;
      }
      /**
       * <code>required int32 id = 1;</code>
       *
       * <pre>
       * 账户ID
       * </pre>
       */
      public Builder clearId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        id_ = 0;
        
        return this;
      }

      // required int32 status = 2;
      private int status_ ;
      /**
       * <code>required int32 status = 2;</code>
       *
       * <pre>
       * 账户状态
       * </pre>
       */
      public boolean hasStatus() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required int32 status = 2;</code>
       *
       * <pre>
       * 账户状态
       * </pre>
       */
      public int getStatus() {
        return status_;
      }
      /**
       * <code>required int32 status = 2;</code>
       *
       * <pre>
       * 账户状态
       * </pre>
       */
      public Builder setStatus(int value) {
        bitField0_ |= 0x00000002;
        status_ = value;
        
        return this;
      }
      /**
       * <code>required int32 status = 2;</code>
       *
       * <pre>
       * 账户状态
       * </pre>
       */
      public Builder clearStatus() {
        bitField0_ = (bitField0_ & ~0x00000002);
        status_ = 0;
        
        return this;
      }

      // required int32 group_id = 3;
      private int groupId_ ;
      /**
       * <code>required int32 group_id = 3;</code>
       *
       * <pre>
       * 账户所属课题组
       * </pre>
       */
      public boolean hasGroupId() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required int32 group_id = 3;</code>
       *
       * <pre>
       * 账户所属课题组
       * </pre>
       */
      public int getGroupId() {
        return groupId_;
      }
      /**
       * <code>required int32 group_id = 3;</code>
       *
       * <pre>
       * 账户所属课题组
       * </pre>
       */
      public Builder setGroupId(int value) {
        bitField0_ |= 0x00000004;
        groupId_ = value;
        
        return this;
      }
      /**
       * <code>required int32 group_id = 3;</code>
       *
       * <pre>
       * 账户所属课题组
       * </pre>
       */
      public Builder clearGroupId() {
        bitField0_ = (bitField0_ & ~0x00000004);
        groupId_ = 0;
        
        return this;
      }

      // required int32 deposit = 4;
      private int deposit_ ;
      /**
       * <code>required int32 deposit = 4;</code>
       *
       * <pre>
       * 账户余额
       * </pre>
       */
      public boolean hasDeposit() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>required int32 deposit = 4;</code>
       *
       * <pre>
       * 账户余额
       * </pre>
       */
      public int getDeposit() {
        return deposit_;
      }
      /**
       * <code>required int32 deposit = 4;</code>
       *
       * <pre>
       * 账户余额
       * </pre>
       */
      public Builder setDeposit(int value) {
        bitField0_ |= 0x00000008;
        deposit_ = value;
        
        return this;
      }
      /**
       * <code>required int32 deposit = 4;</code>
       *
       * <pre>
       * 账户余额
       * </pre>
       */
      public Builder clearDeposit() {
        bitField0_ = (bitField0_ & ~0x00000008);
        deposit_ = 0;
        
        return this;
      }

      // required int32 credit = 5;
      private int credit_ ;
      /**
       * <code>required int32 credit = 5;</code>
       *
       * <pre>
       * 信用额度
       * </pre>
       */
      public boolean hasCredit() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>required int32 credit = 5;</code>
       *
       * <pre>
       * 信用额度
       * </pre>
       */
      public int getCredit() {
        return credit_;
      }
      /**
       * <code>required int32 credit = 5;</code>
       *
       * <pre>
       * 信用额度
       * </pre>
       */
      public Builder setCredit(int value) {
        bitField0_ |= 0x00000010;
        credit_ = value;
        
        return this;
      }
      /**
       * <code>required int32 credit = 5;</code>
       *
       * <pre>
       * 信用额度
       * </pre>
       */
      public Builder clearCredit() {
        bitField0_ = (bitField0_ & ~0x00000010);
        credit_ = 0;
        
        return this;
      }

      // required int32 credit_temp = 6;
      private int creditTemp_ ;
      /**
       * <code>required int32 credit_temp = 6;</code>
       *
       * <pre>
       * 临时信用额度
       * </pre>
       */
      public boolean hasCreditTemp() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>required int32 credit_temp = 6;</code>
       *
       * <pre>
       * 临时信用额度
       * </pre>
       */
      public int getCreditTemp() {
        return creditTemp_;
      }
      /**
       * <code>required int32 credit_temp = 6;</code>
       *
       * <pre>
       * 临时信用额度
       * </pre>
       */
      public Builder setCreditTemp(int value) {
        bitField0_ |= 0x00000020;
        creditTemp_ = value;
        
        return this;
      }
      /**
       * <code>required int32 credit_temp = 6;</code>
       *
       * <pre>
       * 临时信用额度
       * </pre>
       */
      public Builder clearCreditTemp() {
        bitField0_ = (bitField0_ & ~0x00000020);
        creditTemp_ = 0;
        
        return this;
      }

      // required int32 credit_temp_expire_time = 7;
      private int creditTempExpireTime_ ;
      /**
       * <code>required int32 credit_temp_expire_time = 7;</code>
       *
       * <pre>
       * 临时信用额度失效时间
       * </pre>
       */
      public boolean hasCreditTempExpireTime() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>required int32 credit_temp_expire_time = 7;</code>
       *
       * <pre>
       * 临时信用额度失效时间
       * </pre>
       */
      public int getCreditTempExpireTime() {
        return creditTempExpireTime_;
      }
      /**
       * <code>required int32 credit_temp_expire_time = 7;</code>
       *
       * <pre>
       * 临时信用额度失效时间
       * </pre>
       */
      public Builder setCreditTempExpireTime(int value) {
        bitField0_ |= 0x00000040;
        creditTempExpireTime_ = value;
        
        return this;
      }
      /**
       * <code>required int32 credit_temp_expire_time = 7;</code>
       *
       * <pre>
       * 临时信用额度失效时间
       * </pre>
       */
      public Builder clearCreditTempExpireTime() {
        bitField0_ = (bitField0_ & ~0x00000040);
        creditTempExpireTime_ = 0;
        
        return this;
      }

      // @@protoc_insertion_point(builder_scope:biotech.osla.Account)
    }

    static {
      defaultInstance = new Account(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:biotech.osla.Account)
  }

  public interface AccountListOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {

    // repeated .biotech.osla.Account accout = 1;
    /**
     * <code>repeated .biotech.osla.Account accout = 1;</code>
     */
    java.util.List<com.slark.pengder.protocol.MessageProtos.Account> 
        getAccoutList();
    /**
     * <code>repeated .biotech.osla.Account accout = 1;</code>
     */
    com.slark.pengder.protocol.MessageProtos.Account getAccout(int index);
    /**
     * <code>repeated .biotech.osla.Account accout = 1;</code>
     */
    int getAccoutCount();
  }
  /**
   * Protobuf type {@code biotech.osla.AccountList}
   *
   * <pre>
   * 账户列表
   * </pre>
   */
  public static final class AccountList extends
      com.google.protobuf.GeneratedMessageLite
      implements AccountListOrBuilder {
    // Use AccountList.newBuilder() to construct.
    private AccountList(com.google.protobuf.GeneratedMessageLite.Builder builder) {
      super(builder);

    }
    private AccountList(boolean noInit) {}

    private static final AccountList defaultInstance;
    public static AccountList getDefaultInstance() {
      return defaultInstance;
    }

    public AccountList getDefaultInstanceForType() {
      return defaultInstance;
    }

    private AccountList(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                accout_ = new java.util.ArrayList<com.slark.pengder.protocol.MessageProtos.Account>();
                mutable_bitField0_ |= 0x00000001;
              }
              accout_.add(input.readMessage(com.slark.pengder.protocol.MessageProtos.Account.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          accout_ = java.util.Collections.unmodifiableList(accout_);
        }
        makeExtensionsImmutable();
      }
    }
    public static com.google.protobuf.Parser<AccountList> PARSER =
        new com.google.protobuf.AbstractParser<AccountList>() {
      public AccountList parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new AccountList(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<AccountList> getParserForType() {
      return PARSER;
    }

    // repeated .biotech.osla.Account accout = 1;
    public static final int ACCOUT_FIELD_NUMBER = 1;
    private java.util.List<com.slark.pengder.protocol.MessageProtos.Account> accout_;
    /**
     * <code>repeated .biotech.osla.Account accout = 1;</code>
     */
    public java.util.List<com.slark.pengder.protocol.MessageProtos.Account> getAccoutList() {
      return accout_;
    }
    /**
     * <code>repeated .biotech.osla.Account accout = 1;</code>
     */
    public java.util.List<? extends com.slark.pengder.protocol.MessageProtos.AccountOrBuilder> 
        getAccoutOrBuilderList() {
      return accout_;
    }
    /**
     * <code>repeated .biotech.osla.Account accout = 1;</code>
     */
    public int getAccoutCount() {
      return accout_.size();
    }
    /**
     * <code>repeated .biotech.osla.Account accout = 1;</code>
     */
    public com.slark.pengder.protocol.MessageProtos.Account getAccout(int index) {
      return accout_.get(index);
    }
    /**
     * <code>repeated .biotech.osla.Account accout = 1;</code>
     */
    public com.slark.pengder.protocol.MessageProtos.AccountOrBuilder getAccoutOrBuilder(
        int index) {
      return accout_.get(index);
    }

    private void initFields() {
      accout_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      for (int i = 0; i < getAccoutCount(); i++) {
        if (!getAccout(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < accout_.size(); i++) {
        output.writeMessage(1, accout_.get(i));
      }
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < accout_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, accout_.get(i));
      }
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.slark.pengder.protocol.MessageProtos.AccountList parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.slark.pengder.protocol.MessageProtos.AccountList parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.slark.pengder.protocol.MessageProtos.AccountList parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.slark.pengder.protocol.MessageProtos.AccountList parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.slark.pengder.protocol.MessageProtos.AccountList parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.slark.pengder.protocol.MessageProtos.AccountList parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.slark.pengder.protocol.MessageProtos.AccountList parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.slark.pengder.protocol.MessageProtos.AccountList parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.slark.pengder.protocol.MessageProtos.AccountList parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.slark.pengder.protocol.MessageProtos.AccountList parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.slark.pengder.protocol.MessageProtos.AccountList prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    /**
     * Protobuf type {@code biotech.osla.AccountList}
     *
     * <pre>
     * 账户列表
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.slark.pengder.protocol.MessageProtos.AccountList, Builder>
        implements com.slark.pengder.protocol.MessageProtos.AccountListOrBuilder {
      // Construct using com.slark.pengder.protocol.MessageProtos.AccountList.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        accout_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.slark.pengder.protocol.MessageProtos.AccountList getDefaultInstanceForType() {
        return com.slark.pengder.protocol.MessageProtos.AccountList.getDefaultInstance();
      }

      public com.slark.pengder.protocol.MessageProtos.AccountList build() {
        com.slark.pengder.protocol.MessageProtos.AccountList result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.slark.pengder.protocol.MessageProtos.AccountList buildPartial() {
        com.slark.pengder.protocol.MessageProtos.AccountList result = new com.slark.pengder.protocol.MessageProtos.AccountList(this);
        int from_bitField0_ = bitField0_;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          accout_ = java.util.Collections.unmodifiableList(accout_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.accout_ = accout_;
        return result;
      }

      public Builder mergeFrom(com.slark.pengder.protocol.MessageProtos.AccountList other) {
        if (other == com.slark.pengder.protocol.MessageProtos.AccountList.getDefaultInstance()) return this;
        if (!other.accout_.isEmpty()) {
          if (accout_.isEmpty()) {
            accout_ = other.accout_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureAccoutIsMutable();
            accout_.addAll(other.accout_);
          }
          
        }
        return this;
      }

      public final boolean isInitialized() {
        for (int i = 0; i < getAccoutCount(); i++) {
          if (!getAccout(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.slark.pengder.protocol.MessageProtos.AccountList parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.slark.pengder.protocol.MessageProtos.AccountList) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // repeated .biotech.osla.Account accout = 1;
      private java.util.List<com.slark.pengder.protocol.MessageProtos.Account> accout_ =
        java.util.Collections.emptyList();
      private void ensureAccoutIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          accout_ = new java.util.ArrayList<com.slark.pengder.protocol.MessageProtos.Account>(accout_);
          bitField0_ |= 0x00000001;
         }
      }

      /**
       * <code>repeated .biotech.osla.Account accout = 1;</code>
       */
      public java.util.List<com.slark.pengder.protocol.MessageProtos.Account> getAccoutList() {
        return java.util.Collections.unmodifiableList(accout_);
      }
      /**
       * <code>repeated .biotech.osla.Account accout = 1;</code>
       */
      public int getAccoutCount() {
        return accout_.size();
      }
      /**
       * <code>repeated .biotech.osla.Account accout = 1;</code>
       */
      public com.slark.pengder.protocol.MessageProtos.Account getAccout(int index) {
        return accout_.get(index);
      }
      /**
       * <code>repeated .biotech.osla.Account accout = 1;</code>
       */
      public Builder setAccout(
          int index, com.slark.pengder.protocol.MessageProtos.Account value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureAccoutIsMutable();
        accout_.set(index, value);

        return this;
      }
      /**
       * <code>repeated .biotech.osla.Account accout = 1;</code>
       */
      public Builder setAccout(
          int index, com.slark.pengder.protocol.MessageProtos.Account.Builder builderForValue) {
        ensureAccoutIsMutable();
        accout_.set(index, builderForValue.build());

        return this;
      }
      /**
       * <code>repeated .biotech.osla.Account accout = 1;</code>
       */
      public Builder addAccout(com.slark.pengder.protocol.MessageProtos.Account value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureAccoutIsMutable();
        accout_.add(value);

        return this;
      }
      /**
       * <code>repeated .biotech.osla.Account accout = 1;</code>
       */
      public Builder addAccout(
          int index, com.slark.pengder.protocol.MessageProtos.Account value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureAccoutIsMutable();
        accout_.add(index, value);

        return this;
      }
      /**
       * <code>repeated .biotech.osla.Account accout = 1;</code>
       */
      public Builder addAccout(
          com.slark.pengder.protocol.MessageProtos.Account.Builder builderForValue) {
        ensureAccoutIsMutable();
        accout_.add(builderForValue.build());

        return this;
      }
      /**
       * <code>repeated .biotech.osla.Account accout = 1;</code>
       */
      public Builder addAccout(
          int index, com.slark.pengder.protocol.MessageProtos.Account.Builder builderForValue) {
        ensureAccoutIsMutable();
        accout_.add(index, builderForValue.build());

        return this;
      }
      /**
       * <code>repeated .biotech.osla.Account accout = 1;</code>
       */
      public Builder addAllAccout(
          java.lang.Iterable<? extends com.slark.pengder.protocol.MessageProtos.Account> values) {
        ensureAccoutIsMutable();
        super.addAll(values, accout_);

        return this;
      }
      /**
       * <code>repeated .biotech.osla.Account accout = 1;</code>
       */
      public Builder clearAccout() {
        accout_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);

        return this;
      }
      /**
       * <code>repeated .biotech.osla.Account accout = 1;</code>
       */
      public Builder removeAccout(int index) {
        ensureAccoutIsMutable();
        accout_.remove(index);

        return this;
      }

      // @@protoc_insertion_point(builder_scope:biotech.osla.AccountList)
    }

    static {
      defaultInstance = new AccountList(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:biotech.osla.AccountList)
  }

  public interface UserRightOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {

    // required int32 user_id = 1;
    /**
     * <code>required int32 user_id = 1;</code>
     */
    boolean hasUserId();
    /**
     * <code>required int32 user_id = 1;</code>
     */
    int getUserId();

    // required int32 right = 2;
    /**
     * <code>required int32 right = 2;</code>
     *
     * <pre>
     * 用户在本仪器上的资格
     * </pre>
     */
    boolean hasRight();
    /**
     * <code>required int32 right = 2;</code>
     *
     * <pre>
     * 用户在本仪器上的资格
     * </pre>
     */
    int getRight();

    // required int32 right_temp = 3;
    /**
     * <code>required int32 right_temp = 3;</code>
     *
     * <pre>
     * 用户的临时资格
     * </pre>
     */
    boolean hasRightTemp();
    /**
     * <code>required int32 right_temp = 3;</code>
     *
     * <pre>
     * 用户的临时资格
     * </pre>
     */
    int getRightTemp();
  }
  /**
   * Protobuf type {@code biotech.osla.UserRight}
   *
   * <pre>
   * 用户资格表
   * </pre>
   */
  public static final class UserRight extends
      com.google.protobuf.GeneratedMessageLite
      implements UserRightOrBuilder {
    // Use UserRight.newBuilder() to construct.
    private UserRight(com.google.protobuf.GeneratedMessageLite.Builder builder) {
      super(builder);

    }
    private UserRight(boolean noInit) {}

    private static final UserRight defaultInstance;
    public static UserRight getDefaultInstance() {
      return defaultInstance;
    }

    public UserRight getDefaultInstanceForType() {
      return defaultInstance;
    }

    private UserRight(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              userId_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              right_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              rightTemp_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static com.google.protobuf.Parser<UserRight> PARSER =
        new com.google.protobuf.AbstractParser<UserRight>() {
      public UserRight parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new UserRight(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<UserRight> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required int32 user_id = 1;
    public static final int USER_ID_FIELD_NUMBER = 1;
    private int userId_;
    /**
     * <code>required int32 user_id = 1;</code>
     */
    public boolean hasUserId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int32 user_id = 1;</code>
     */
    public int getUserId() {
      return userId_;
    }

    // required int32 right = 2;
    public static final int RIGHT_FIELD_NUMBER = 2;
    private int right_;
    /**
     * <code>required int32 right = 2;</code>
     *
     * <pre>
     * 用户在本仪器上的资格
     * </pre>
     */
    public boolean hasRight() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required int32 right = 2;</code>
     *
     * <pre>
     * 用户在本仪器上的资格
     * </pre>
     */
    public int getRight() {
      return right_;
    }

    // required int32 right_temp = 3;
    public static final int RIGHT_TEMP_FIELD_NUMBER = 3;
    private int rightTemp_;
    /**
     * <code>required int32 right_temp = 3;</code>
     *
     * <pre>
     * 用户的临时资格
     * </pre>
     */
    public boolean hasRightTemp() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required int32 right_temp = 3;</code>
     *
     * <pre>
     * 用户的临时资格
     * </pre>
     */
    public int getRightTemp() {
      return rightTemp_;
    }

    private void initFields() {
      userId_ = 0;
      right_ = 0;
      rightTemp_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasUserId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasRight()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasRightTemp()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, userId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, right_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, rightTemp_);
      }
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, userId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, right_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, rightTemp_);
      }
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.slark.pengder.protocol.MessageProtos.UserRight parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.slark.pengder.protocol.MessageProtos.UserRight parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.slark.pengder.protocol.MessageProtos.UserRight parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.slark.pengder.protocol.MessageProtos.UserRight parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.slark.pengder.protocol.MessageProtos.UserRight parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.slark.pengder.protocol.MessageProtos.UserRight parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.slark.pengder.protocol.MessageProtos.UserRight parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.slark.pengder.protocol.MessageProtos.UserRight parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.slark.pengder.protocol.MessageProtos.UserRight parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.slark.pengder.protocol.MessageProtos.UserRight parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.slark.pengder.protocol.MessageProtos.UserRight prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    /**
     * Protobuf type {@code biotech.osla.UserRight}
     *
     * <pre>
     * 用户资格表
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.slark.pengder.protocol.MessageProtos.UserRight, Builder>
        implements com.slark.pengder.protocol.MessageProtos.UserRightOrBuilder {
      // Construct using com.slark.pengder.protocol.MessageProtos.UserRight.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        userId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        right_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        rightTemp_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.slark.pengder.protocol.MessageProtos.UserRight getDefaultInstanceForType() {
        return com.slark.pengder.protocol.MessageProtos.UserRight.getDefaultInstance();
      }

      public com.slark.pengder.protocol.MessageProtos.UserRight build() {
        com.slark.pengder.protocol.MessageProtos.UserRight result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.slark.pengder.protocol.MessageProtos.UserRight buildPartial() {
        com.slark.pengder.protocol.MessageProtos.UserRight result = new com.slark.pengder.protocol.MessageProtos.UserRight(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.userId_ = userId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.right_ = right_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.rightTemp_ = rightTemp_;
        result.bitField0_ = to_bitField0_;
        return result;
      }

      public Builder mergeFrom(com.slark.pengder.protocol.MessageProtos.UserRight other) {
        if (other == com.slark.pengder.protocol.MessageProtos.UserRight.getDefaultInstance()) return this;
        if (other.hasUserId()) {
          setUserId(other.getUserId());
        }
        if (other.hasRight()) {
          setRight(other.getRight());
        }
        if (other.hasRightTemp()) {
          setRightTemp(other.getRightTemp());
        }
        return this;
      }

      public final boolean isInitialized() {
        if (!hasUserId()) {
          
          return false;
        }
        if (!hasRight()) {
          
          return false;
        }
        if (!hasRightTemp()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.slark.pengder.protocol.MessageProtos.UserRight parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.slark.pengder.protocol.MessageProtos.UserRight) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required int32 user_id = 1;
      private int userId_ ;
      /**
       * <code>required int32 user_id = 1;</code>
       */
      public boolean hasUserId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int32 user_id = 1;</code>
       */
      public int getUserId() {
        return userId_;
      }
      /**
       * <code>required int32 user_id = 1;</code>
       */
      public Builder setUserId(int value) {
        bitField0_ |= 0x00000001;
        userId_ = value;
        
        return this;
      }
      /**
       * <code>required int32 user_id = 1;</code>
       */
      public Builder clearUserId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        userId_ = 0;
        
        return this;
      }

      // required int32 right = 2;
      private int right_ ;
      /**
       * <code>required int32 right = 2;</code>
       *
       * <pre>
       * 用户在本仪器上的资格
       * </pre>
       */
      public boolean hasRight() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required int32 right = 2;</code>
       *
       * <pre>
       * 用户在本仪器上的资格
       * </pre>
       */
      public int getRight() {
        return right_;
      }
      /**
       * <code>required int32 right = 2;</code>
       *
       * <pre>
       * 用户在本仪器上的资格
       * </pre>
       */
      public Builder setRight(int value) {
        bitField0_ |= 0x00000002;
        right_ = value;
        
        return this;
      }
      /**
       * <code>required int32 right = 2;</code>
       *
       * <pre>
       * 用户在本仪器上的资格
       * </pre>
       */
      public Builder clearRight() {
        bitField0_ = (bitField0_ & ~0x00000002);
        right_ = 0;
        
        return this;
      }

      // required int32 right_temp = 3;
      private int rightTemp_ ;
      /**
       * <code>required int32 right_temp = 3;</code>
       *
       * <pre>
       * 用户的临时资格
       * </pre>
       */
      public boolean hasRightTemp() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required int32 right_temp = 3;</code>
       *
       * <pre>
       * 用户的临时资格
       * </pre>
       */
      public int getRightTemp() {
        return rightTemp_;
      }
      /**
       * <code>required int32 right_temp = 3;</code>
       *
       * <pre>
       * 用户的临时资格
       * </pre>
       */
      public Builder setRightTemp(int value) {
        bitField0_ |= 0x00000004;
        rightTemp_ = value;
        
        return this;
      }
      /**
       * <code>required int32 right_temp = 3;</code>
       *
       * <pre>
       * 用户的临时资格
       * </pre>
       */
      public Builder clearRightTemp() {
        bitField0_ = (bitField0_ & ~0x00000004);
        rightTemp_ = 0;
        
        return this;
      }

      // @@protoc_insertion_point(builder_scope:biotech.osla.UserRight)
    }

    static {
      defaultInstance = new UserRight(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:biotech.osla.UserRight)
  }

  public interface UserRightListOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {

    // repeated .biotech.osla.UserRight user_right = 1;
    /**
     * <code>repeated .biotech.osla.UserRight user_right = 1;</code>
     */
    java.util.List<com.slark.pengder.protocol.MessageProtos.UserRight> 
        getUserRightList();
    /**
     * <code>repeated .biotech.osla.UserRight user_right = 1;</code>
     */
    com.slark.pengder.protocol.MessageProtos.UserRight getUserRight(int index);
    /**
     * <code>repeated .biotech.osla.UserRight user_right = 1;</code>
     */
    int getUserRightCount();
  }
  /**
   * Protobuf type {@code biotech.osla.UserRightList}
   */
  public static final class UserRightList extends
      com.google.protobuf.GeneratedMessageLite
      implements UserRightListOrBuilder {
    // Use UserRightList.newBuilder() to construct.
    private UserRightList(com.google.protobuf.GeneratedMessageLite.Builder builder) {
      super(builder);

    }
    private UserRightList(boolean noInit) {}

    private static final UserRightList defaultInstance;
    public static UserRightList getDefaultInstance() {
      return defaultInstance;
    }

    public UserRightList getDefaultInstanceForType() {
      return defaultInstance;
    }

    private UserRightList(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                userRight_ = new java.util.ArrayList<com.slark.pengder.protocol.MessageProtos.UserRight>();
                mutable_bitField0_ |= 0x00000001;
              }
              userRight_.add(input.readMessage(com.slark.pengder.protocol.MessageProtos.UserRight.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          userRight_ = java.util.Collections.unmodifiableList(userRight_);
        }
        makeExtensionsImmutable();
      }
    }
    public static com.google.protobuf.Parser<UserRightList> PARSER =
        new com.google.protobuf.AbstractParser<UserRightList>() {
      public UserRightList parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new UserRightList(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<UserRightList> getParserForType() {
      return PARSER;
    }

    // repeated .biotech.osla.UserRight user_right = 1;
    public static final int USER_RIGHT_FIELD_NUMBER = 1;
    private java.util.List<com.slark.pengder.protocol.MessageProtos.UserRight> userRight_;
    /**
     * <code>repeated .biotech.osla.UserRight user_right = 1;</code>
     */
    public java.util.List<com.slark.pengder.protocol.MessageProtos.UserRight> getUserRightList() {
      return userRight_;
    }
    /**
     * <code>repeated .biotech.osla.UserRight user_right = 1;</code>
     */
    public java.util.List<? extends com.slark.pengder.protocol.MessageProtos.UserRightOrBuilder> 
        getUserRightOrBuilderList() {
      return userRight_;
    }
    /**
     * <code>repeated .biotech.osla.UserRight user_right = 1;</code>
     */
    public int getUserRightCount() {
      return userRight_.size();
    }
    /**
     * <code>repeated .biotech.osla.UserRight user_right = 1;</code>
     */
    public com.slark.pengder.protocol.MessageProtos.UserRight getUserRight(int index) {
      return userRight_.get(index);
    }
    /**
     * <code>repeated .biotech.osla.UserRight user_right = 1;</code>
     */
    public com.slark.pengder.protocol.MessageProtos.UserRightOrBuilder getUserRightOrBuilder(
        int index) {
      return userRight_.get(index);
    }

    private void initFields() {
      userRight_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      for (int i = 0; i < getUserRightCount(); i++) {
        if (!getUserRight(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < userRight_.size(); i++) {
        output.writeMessage(1, userRight_.get(i));
      }
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < userRight_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, userRight_.get(i));
      }
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.slark.pengder.protocol.MessageProtos.UserRightList parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.slark.pengder.protocol.MessageProtos.UserRightList parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.slark.pengder.protocol.MessageProtos.UserRightList parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.slark.pengder.protocol.MessageProtos.UserRightList parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.slark.pengder.protocol.MessageProtos.UserRightList parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.slark.pengder.protocol.MessageProtos.UserRightList parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.slark.pengder.protocol.MessageProtos.UserRightList parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.slark.pengder.protocol.MessageProtos.UserRightList parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.slark.pengder.protocol.MessageProtos.UserRightList parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.slark.pengder.protocol.MessageProtos.UserRightList parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.slark.pengder.protocol.MessageProtos.UserRightList prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    /**
     * Protobuf type {@code biotech.osla.UserRightList}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.slark.pengder.protocol.MessageProtos.UserRightList, Builder>
        implements com.slark.pengder.protocol.MessageProtos.UserRightListOrBuilder {
      // Construct using com.slark.pengder.protocol.MessageProtos.UserRightList.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        userRight_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.slark.pengder.protocol.MessageProtos.UserRightList getDefaultInstanceForType() {
        return com.slark.pengder.protocol.MessageProtos.UserRightList.getDefaultInstance();
      }

      public com.slark.pengder.protocol.MessageProtos.UserRightList build() {
        com.slark.pengder.protocol.MessageProtos.UserRightList result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.slark.pengder.protocol.MessageProtos.UserRightList buildPartial() {
        com.slark.pengder.protocol.MessageProtos.UserRightList result = new com.slark.pengder.protocol.MessageProtos.UserRightList(this);
        int from_bitField0_ = bitField0_;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          userRight_ = java.util.Collections.unmodifiableList(userRight_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.userRight_ = userRight_;
        return result;
      }

      public Builder mergeFrom(com.slark.pengder.protocol.MessageProtos.UserRightList other) {
        if (other == com.slark.pengder.protocol.MessageProtos.UserRightList.getDefaultInstance()) return this;
        if (!other.userRight_.isEmpty()) {
          if (userRight_.isEmpty()) {
            userRight_ = other.userRight_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureUserRightIsMutable();
            userRight_.addAll(other.userRight_);
          }
          
        }
        return this;
      }

      public final boolean isInitialized() {
        for (int i = 0; i < getUserRightCount(); i++) {
          if (!getUserRight(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.slark.pengder.protocol.MessageProtos.UserRightList parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.slark.pengder.protocol.MessageProtos.UserRightList) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // repeated .biotech.osla.UserRight user_right = 1;
      private java.util.List<com.slark.pengder.protocol.MessageProtos.UserRight> userRight_ =
        java.util.Collections.emptyList();
      private void ensureUserRightIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          userRight_ = new java.util.ArrayList<com.slark.pengder.protocol.MessageProtos.UserRight>(userRight_);
          bitField0_ |= 0x00000001;
         }
      }

      /**
       * <code>repeated .biotech.osla.UserRight user_right = 1;</code>
       */
      public java.util.List<com.slark.pengder.protocol.MessageProtos.UserRight> getUserRightList() {
        return java.util.Collections.unmodifiableList(userRight_);
      }
      /**
       * <code>repeated .biotech.osla.UserRight user_right = 1;</code>
       */
      public int getUserRightCount() {
        return userRight_.size();
      }
      /**
       * <code>repeated .biotech.osla.UserRight user_right = 1;</code>
       */
      public com.slark.pengder.protocol.MessageProtos.UserRight getUserRight(int index) {
        return userRight_.get(index);
      }
      /**
       * <code>repeated .biotech.osla.UserRight user_right = 1;</code>
       */
      public Builder setUserRight(
          int index, com.slark.pengder.protocol.MessageProtos.UserRight value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureUserRightIsMutable();
        userRight_.set(index, value);

        return this;
      }
      /**
       * <code>repeated .biotech.osla.UserRight user_right = 1;</code>
       */
      public Builder setUserRight(
          int index, com.slark.pengder.protocol.MessageProtos.UserRight.Builder builderForValue) {
        ensureUserRightIsMutable();
        userRight_.set(index, builderForValue.build());

        return this;
      }
      /**
       * <code>repeated .biotech.osla.UserRight user_right = 1;</code>
       */
      public Builder addUserRight(com.slark.pengder.protocol.MessageProtos.UserRight value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureUserRightIsMutable();
        userRight_.add(value);

        return this;
      }
      /**
       * <code>repeated .biotech.osla.UserRight user_right = 1;</code>
       */
      public Builder addUserRight(
          int index, com.slark.pengder.protocol.MessageProtos.UserRight value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureUserRightIsMutable();
        userRight_.add(index, value);

        return this;
      }
      /**
       * <code>repeated .biotech.osla.UserRight user_right = 1;</code>
       */
      public Builder addUserRight(
          com.slark.pengder.protocol.MessageProtos.UserRight.Builder builderForValue) {
        ensureUserRightIsMutable();
        userRight_.add(builderForValue.build());

        return this;
      }
      /**
       * <code>repeated .biotech.osla.UserRight user_right = 1;</code>
       */
      public Builder addUserRight(
          int index, com.slark.pengder.protocol.MessageProtos.UserRight.Builder builderForValue) {
        ensureUserRightIsMutable();
        userRight_.add(index, builderForValue.build());

        return this;
      }
      /**
       * <code>repeated .biotech.osla.UserRight user_right = 1;</code>
       */
      public Builder addAllUserRight(
          java.lang.Iterable<? extends com.slark.pengder.protocol.MessageProtos.UserRight> values) {
        ensureUserRightIsMutable();
        super.addAll(values, userRight_);

        return this;
      }
      /**
       * <code>repeated .biotech.osla.UserRight user_right = 1;</code>
       */
      public Builder clearUserRight() {
        userRight_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);

        return this;
      }
      /**
       * <code>repeated .biotech.osla.UserRight user_right = 1;</code>
       */
      public Builder removeUserRight(int index) {
        ensureUserRightIsMutable();
        userRight_.remove(index);

        return this;
      }

      // @@protoc_insertion_point(builder_scope:biotech.osla.UserRightList)
    }

    static {
      defaultInstance = new UserRightList(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:biotech.osla.UserRightList)
  }

  public interface TempCardBindingOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {

    // required string card_serial = 1;
    /**
     * <code>required string card_serial = 1;</code>
     *
     * <pre>
     * 卡号
     * </pre>
     */
    boolean hasCardSerial();
    /**
     * <code>required string card_serial = 1;</code>
     *
     * <pre>
     * 卡号
     * </pre>
     */
    java.lang.String getCardSerial();
    /**
     * <code>required string card_serial = 1;</code>
     *
     * <pre>
     * 卡号
     * </pre>
     */
    com.google.protobuf.ByteString
        getCardSerialBytes();

    // required int32 user_id = 2;
    /**
     * <code>required int32 user_id = 2;</code>
     *
     * <pre>
     * 用户
     * </pre>
     */
    boolean hasUserId();
    /**
     * <code>required int32 user_id = 2;</code>
     *
     * <pre>
     * 用户
     * </pre>
     */
    int getUserId();

    // required int32 active_time = 3;
    /**
     * <code>required int32 active_time = 3;</code>
     *
     * <pre>
     * 生效时间
     * </pre>
     */
    boolean hasActiveTime();
    /**
     * <code>required int32 active_time = 3;</code>
     *
     * <pre>
     * 生效时间
     * </pre>
     */
    int getActiveTime();

    // required int32 expire_time = 4;
    /**
     * <code>required int32 expire_time = 4;</code>
     *
     * <pre>
     * 失效时间
     * </pre>
     */
    boolean hasExpireTime();
    /**
     * <code>required int32 expire_time = 4;</code>
     *
     * <pre>
     * 失效时间
     * </pre>
     */
    int getExpireTime();

    // optional int32 id = 5;
    /**
     * <code>optional int32 id = 5;</code>
     *
     * <pre>
     * 临时卡ID，重构新增
     * </pre>
     */
    boolean hasId();
    /**
     * <code>optional int32 id = 5;</code>
     *
     * <pre>
     * 临时卡ID，重构新增
     * </pre>
     */
    int getId();
  }
  /**
   * Protobuf type {@code biotech.osla.TempCardBinding}
   *
   * <pre>
   * 临时卡关联
   * </pre>
   */
  public static final class TempCardBinding extends
      com.google.protobuf.GeneratedMessageLite
      implements TempCardBindingOrBuilder {
    // Use TempCardBinding.newBuilder() to construct.
    private TempCardBinding(com.google.protobuf.GeneratedMessageLite.Builder builder) {
      super(builder);

    }
    private TempCardBinding(boolean noInit) {}

    private static final TempCardBinding defaultInstance;
    public static TempCardBinding getDefaultInstance() {
      return defaultInstance;
    }

    public TempCardBinding getDefaultInstanceForType() {
      return defaultInstance;
    }

    private TempCardBinding(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              cardSerial_ = input.readBytes();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              userId_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              activeTime_ = input.readInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              expireTime_ = input.readInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              id_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static com.google.protobuf.Parser<TempCardBinding> PARSER =
        new com.google.protobuf.AbstractParser<TempCardBinding>() {
      public TempCardBinding parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new TempCardBinding(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<TempCardBinding> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required string card_serial = 1;
    public static final int CARD_SERIAL_FIELD_NUMBER = 1;
    private java.lang.Object cardSerial_;
    /**
     * <code>required string card_serial = 1;</code>
     *
     * <pre>
     * 卡号
     * </pre>
     */
    public boolean hasCardSerial() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required string card_serial = 1;</code>
     *
     * <pre>
     * 卡号
     * </pre>
     */
    public java.lang.String getCardSerial() {
      java.lang.Object ref = cardSerial_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          cardSerial_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string card_serial = 1;</code>
     *
     * <pre>
     * 卡号
     * </pre>
     */
    public com.google.protobuf.ByteString
        getCardSerialBytes() {
      java.lang.Object ref = cardSerial_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        cardSerial_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // required int32 user_id = 2;
    public static final int USER_ID_FIELD_NUMBER = 2;
    private int userId_;
    /**
     * <code>required int32 user_id = 2;</code>
     *
     * <pre>
     * 用户
     * </pre>
     */
    public boolean hasUserId() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required int32 user_id = 2;</code>
     *
     * <pre>
     * 用户
     * </pre>
     */
    public int getUserId() {
      return userId_;
    }

    // required int32 active_time = 3;
    public static final int ACTIVE_TIME_FIELD_NUMBER = 3;
    private int activeTime_;
    /**
     * <code>required int32 active_time = 3;</code>
     *
     * <pre>
     * 生效时间
     * </pre>
     */
    public boolean hasActiveTime() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required int32 active_time = 3;</code>
     *
     * <pre>
     * 生效时间
     * </pre>
     */
    public int getActiveTime() {
      return activeTime_;
    }

    // required int32 expire_time = 4;
    public static final int EXPIRE_TIME_FIELD_NUMBER = 4;
    private int expireTime_;
    /**
     * <code>required int32 expire_time = 4;</code>
     *
     * <pre>
     * 失效时间
     * </pre>
     */
    public boolean hasExpireTime() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>required int32 expire_time = 4;</code>
     *
     * <pre>
     * 失效时间
     * </pre>
     */
    public int getExpireTime() {
      return expireTime_;
    }

    // optional int32 id = 5;
    public static final int ID_FIELD_NUMBER = 5;
    private int id_;
    /**
     * <code>optional int32 id = 5;</code>
     *
     * <pre>
     * 临时卡ID，重构新增
     * </pre>
     */
    public boolean hasId() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional int32 id = 5;</code>
     *
     * <pre>
     * 临时卡ID，重构新增
     * </pre>
     */
    public int getId() {
      return id_;
    }

    private void initFields() {
      cardSerial_ = "";
      userId_ = 0;
      activeTime_ = 0;
      expireTime_ = 0;
      id_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasCardSerial()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasUserId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasActiveTime()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasExpireTime()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getCardSerialBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, userId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, activeTime_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(4, expireTime_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(5, id_);
      }
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getCardSerialBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, userId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, activeTime_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, expireTime_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, id_);
      }
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.slark.pengder.protocol.MessageProtos.TempCardBinding parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.slark.pengder.protocol.MessageProtos.TempCardBinding parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.slark.pengder.protocol.MessageProtos.TempCardBinding parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.slark.pengder.protocol.MessageProtos.TempCardBinding parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.slark.pengder.protocol.MessageProtos.TempCardBinding parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.slark.pengder.protocol.MessageProtos.TempCardBinding parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.slark.pengder.protocol.MessageProtos.TempCardBinding parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.slark.pengder.protocol.MessageProtos.TempCardBinding parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.slark.pengder.protocol.MessageProtos.TempCardBinding parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.slark.pengder.protocol.MessageProtos.TempCardBinding parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.slark.pengder.protocol.MessageProtos.TempCardBinding prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    /**
     * Protobuf type {@code biotech.osla.TempCardBinding}
     *
     * <pre>
     * 临时卡关联
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.slark.pengder.protocol.MessageProtos.TempCardBinding, Builder>
        implements com.slark.pengder.protocol.MessageProtos.TempCardBindingOrBuilder {
      // Construct using com.slark.pengder.protocol.MessageProtos.TempCardBinding.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        cardSerial_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        userId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        activeTime_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        expireTime_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        id_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.slark.pengder.protocol.MessageProtos.TempCardBinding getDefaultInstanceForType() {
        return com.slark.pengder.protocol.MessageProtos.TempCardBinding.getDefaultInstance();
      }

      public com.slark.pengder.protocol.MessageProtos.TempCardBinding build() {
        com.slark.pengder.protocol.MessageProtos.TempCardBinding result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.slark.pengder.protocol.MessageProtos.TempCardBinding buildPartial() {
        com.slark.pengder.protocol.MessageProtos.TempCardBinding result = new com.slark.pengder.protocol.MessageProtos.TempCardBinding(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.cardSerial_ = cardSerial_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.userId_ = userId_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.activeTime_ = activeTime_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.expireTime_ = expireTime_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.id_ = id_;
        result.bitField0_ = to_bitField0_;
        return result;
      }

      public Builder mergeFrom(com.slark.pengder.protocol.MessageProtos.TempCardBinding other) {
        if (other == com.slark.pengder.protocol.MessageProtos.TempCardBinding.getDefaultInstance()) return this;
        if (other.hasCardSerial()) {
          bitField0_ |= 0x00000001;
          cardSerial_ = other.cardSerial_;
          
        }
        if (other.hasUserId()) {
          setUserId(other.getUserId());
        }
        if (other.hasActiveTime()) {
          setActiveTime(other.getActiveTime());
        }
        if (other.hasExpireTime()) {
          setExpireTime(other.getExpireTime());
        }
        if (other.hasId()) {
          setId(other.getId());
        }
        return this;
      }

      public final boolean isInitialized() {
        if (!hasCardSerial()) {
          
          return false;
        }
        if (!hasUserId()) {
          
          return false;
        }
        if (!hasActiveTime()) {
          
          return false;
        }
        if (!hasExpireTime()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.slark.pengder.protocol.MessageProtos.TempCardBinding parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.slark.pengder.protocol.MessageProtos.TempCardBinding) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required string card_serial = 1;
      private java.lang.Object cardSerial_ = "";
      /**
       * <code>required string card_serial = 1;</code>
       *
       * <pre>
       * 卡号
       * </pre>
       */
      public boolean hasCardSerial() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required string card_serial = 1;</code>
       *
       * <pre>
       * 卡号
       * </pre>
       */
      public java.lang.String getCardSerial() {
        java.lang.Object ref = cardSerial_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          cardSerial_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string card_serial = 1;</code>
       *
       * <pre>
       * 卡号
       * </pre>
       */
      public com.google.protobuf.ByteString
          getCardSerialBytes() {
        java.lang.Object ref = cardSerial_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          cardSerial_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string card_serial = 1;</code>
       *
       * <pre>
       * 卡号
       * </pre>
       */
      public Builder setCardSerial(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        cardSerial_ = value;
        
        return this;
      }
      /**
       * <code>required string card_serial = 1;</code>
       *
       * <pre>
       * 卡号
       * </pre>
       */
      public Builder clearCardSerial() {
        bitField0_ = (bitField0_ & ~0x00000001);
        cardSerial_ = getDefaultInstance().getCardSerial();
        
        return this;
      }
      /**
       * <code>required string card_serial = 1;</code>
       *
       * <pre>
       * 卡号
       * </pre>
       */
      public Builder setCardSerialBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        cardSerial_ = value;
        
        return this;
      }

      // required int32 user_id = 2;
      private int userId_ ;
      /**
       * <code>required int32 user_id = 2;</code>
       *
       * <pre>
       * 用户
       * </pre>
       */
      public boolean hasUserId() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required int32 user_id = 2;</code>
       *
       * <pre>
       * 用户
       * </pre>
       */
      public int getUserId() {
        return userId_;
      }
      /**
       * <code>required int32 user_id = 2;</code>
       *
       * <pre>
       * 用户
       * </pre>
       */
      public Builder setUserId(int value) {
        bitField0_ |= 0x00000002;
        userId_ = value;
        
        return this;
      }
      /**
       * <code>required int32 user_id = 2;</code>
       *
       * <pre>
       * 用户
       * </pre>
       */
      public Builder clearUserId() {
        bitField0_ = (bitField0_ & ~0x00000002);
        userId_ = 0;
        
        return this;
      }

      // required int32 active_time = 3;
      private int activeTime_ ;
      /**
       * <code>required int32 active_time = 3;</code>
       *
       * <pre>
       * 生效时间
       * </pre>
       */
      public boolean hasActiveTime() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required int32 active_time = 3;</code>
       *
       * <pre>
       * 生效时间
       * </pre>
       */
      public int getActiveTime() {
        return activeTime_;
      }
      /**
       * <code>required int32 active_time = 3;</code>
       *
       * <pre>
       * 生效时间
       * </pre>
       */
      public Builder setActiveTime(int value) {
        bitField0_ |= 0x00000004;
        activeTime_ = value;
        
        return this;
      }
      /**
       * <code>required int32 active_time = 3;</code>
       *
       * <pre>
       * 生效时间
       * </pre>
       */
      public Builder clearActiveTime() {
        bitField0_ = (bitField0_ & ~0x00000004);
        activeTime_ = 0;
        
        return this;
      }

      // required int32 expire_time = 4;
      private int expireTime_ ;
      /**
       * <code>required int32 expire_time = 4;</code>
       *
       * <pre>
       * 失效时间
       * </pre>
       */
      public boolean hasExpireTime() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>required int32 expire_time = 4;</code>
       *
       * <pre>
       * 失效时间
       * </pre>
       */
      public int getExpireTime() {
        return expireTime_;
      }
      /**
       * <code>required int32 expire_time = 4;</code>
       *
       * <pre>
       * 失效时间
       * </pre>
       */
      public Builder setExpireTime(int value) {
        bitField0_ |= 0x00000008;
        expireTime_ = value;
        
        return this;
      }
      /**
       * <code>required int32 expire_time = 4;</code>
       *
       * <pre>
       * 失效时间
       * </pre>
       */
      public Builder clearExpireTime() {
        bitField0_ = (bitField0_ & ~0x00000008);
        expireTime_ = 0;
        
        return this;
      }

      // optional int32 id = 5;
      private int id_ ;
      /**
       * <code>optional int32 id = 5;</code>
       *
       * <pre>
       * 临时卡ID，重构新增
       * </pre>
       */
      public boolean hasId() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional int32 id = 5;</code>
       *
       * <pre>
       * 临时卡ID，重构新增
       * </pre>
       */
      public int getId() {
        return id_;
      }
      /**
       * <code>optional int32 id = 5;</code>
       *
       * <pre>
       * 临时卡ID，重构新增
       * </pre>
       */
      public Builder setId(int value) {
        bitField0_ |= 0x00000010;
        id_ = value;
        
        return this;
      }
      /**
       * <code>optional int32 id = 5;</code>
       *
       * <pre>
       * 临时卡ID，重构新增
       * </pre>
       */
      public Builder clearId() {
        bitField0_ = (bitField0_ & ~0x00000010);
        id_ = 0;
        
        return this;
      }

      // @@protoc_insertion_point(builder_scope:biotech.osla.TempCardBinding)
    }

    static {
      defaultInstance = new TempCardBinding(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:biotech.osla.TempCardBinding)
  }

  public interface TempCardBindingListOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {

    // repeated .biotech.osla.TempCardBinding temp_card_binding = 1;
    /**
     * <code>repeated .biotech.osla.TempCardBinding temp_card_binding = 1;</code>
     */
    java.util.List<com.slark.pengder.protocol.MessageProtos.TempCardBinding> 
        getTempCardBindingList();
    /**
     * <code>repeated .biotech.osla.TempCardBinding temp_card_binding = 1;</code>
     */
    com.slark.pengder.protocol.MessageProtos.TempCardBinding getTempCardBinding(int index);
    /**
     * <code>repeated .biotech.osla.TempCardBinding temp_card_binding = 1;</code>
     */
    int getTempCardBindingCount();
  }
  /**
   * Protobuf type {@code biotech.osla.TempCardBindingList}
   *
   * <pre>
   * 临时卡关联列表
   * </pre>
   */
  public static final class TempCardBindingList extends
      com.google.protobuf.GeneratedMessageLite
      implements TempCardBindingListOrBuilder {
    // Use TempCardBindingList.newBuilder() to construct.
    private TempCardBindingList(com.google.protobuf.GeneratedMessageLite.Builder builder) {
      super(builder);

    }
    private TempCardBindingList(boolean noInit) {}

    private static final TempCardBindingList defaultInstance;
    public static TempCardBindingList getDefaultInstance() {
      return defaultInstance;
    }

    public TempCardBindingList getDefaultInstanceForType() {
      return defaultInstance;
    }

    private TempCardBindingList(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                tempCardBinding_ = new java.util.ArrayList<com.slark.pengder.protocol.MessageProtos.TempCardBinding>();
                mutable_bitField0_ |= 0x00000001;
              }
              tempCardBinding_.add(input.readMessage(com.slark.pengder.protocol.MessageProtos.TempCardBinding.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          tempCardBinding_ = java.util.Collections.unmodifiableList(tempCardBinding_);
        }
        makeExtensionsImmutable();
      }
    }
    public static com.google.protobuf.Parser<TempCardBindingList> PARSER =
        new com.google.protobuf.AbstractParser<TempCardBindingList>() {
      public TempCardBindingList parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new TempCardBindingList(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<TempCardBindingList> getParserForType() {
      return PARSER;
    }

    // repeated .biotech.osla.TempCardBinding temp_card_binding = 1;
    public static final int TEMP_CARD_BINDING_FIELD_NUMBER = 1;
    private java.util.List<com.slark.pengder.protocol.MessageProtos.TempCardBinding> tempCardBinding_;
    /**
     * <code>repeated .biotech.osla.TempCardBinding temp_card_binding = 1;</code>
     */
    public java.util.List<com.slark.pengder.protocol.MessageProtos.TempCardBinding> getTempCardBindingList() {
      return tempCardBinding_;
    }
    /**
     * <code>repeated .biotech.osla.TempCardBinding temp_card_binding = 1;</code>
     */
    public java.util.List<? extends com.slark.pengder.protocol.MessageProtos.TempCardBindingOrBuilder> 
        getTempCardBindingOrBuilderList() {
      return tempCardBinding_;
    }
    /**
     * <code>repeated .biotech.osla.TempCardBinding temp_card_binding = 1;</code>
     */
    public int getTempCardBindingCount() {
      return tempCardBinding_.size();
    }
    /**
     * <code>repeated .biotech.osla.TempCardBinding temp_card_binding = 1;</code>
     */
    public com.slark.pengder.protocol.MessageProtos.TempCardBinding getTempCardBinding(int index) {
      return tempCardBinding_.get(index);
    }
    /**
     * <code>repeated .biotech.osla.TempCardBinding temp_card_binding = 1;</code>
     */
    public com.slark.pengder.protocol.MessageProtos.TempCardBindingOrBuilder getTempCardBindingOrBuilder(
        int index) {
      return tempCardBinding_.get(index);
    }

    private void initFields() {
      tempCardBinding_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      for (int i = 0; i < getTempCardBindingCount(); i++) {
        if (!getTempCardBinding(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < tempCardBinding_.size(); i++) {
        output.writeMessage(1, tempCardBinding_.get(i));
      }
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < tempCardBinding_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, tempCardBinding_.get(i));
      }
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.slark.pengder.protocol.MessageProtos.TempCardBindingList parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.slark.pengder.protocol.MessageProtos.TempCardBindingList parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.slark.pengder.protocol.MessageProtos.TempCardBindingList parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.slark.pengder.protocol.MessageProtos.TempCardBindingList parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.slark.pengder.protocol.MessageProtos.TempCardBindingList parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.slark.pengder.protocol.MessageProtos.TempCardBindingList parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.slark.pengder.protocol.MessageProtos.TempCardBindingList parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.slark.pengder.protocol.MessageProtos.TempCardBindingList parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.slark.pengder.protocol.MessageProtos.TempCardBindingList parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.slark.pengder.protocol.MessageProtos.TempCardBindingList parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.slark.pengder.protocol.MessageProtos.TempCardBindingList prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    /**
     * Protobuf type {@code biotech.osla.TempCardBindingList}
     *
     * <pre>
     * 临时卡关联列表
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.slark.pengder.protocol.MessageProtos.TempCardBindingList, Builder>
        implements com.slark.pengder.protocol.MessageProtos.TempCardBindingListOrBuilder {
      // Construct using com.slark.pengder.protocol.MessageProtos.TempCardBindingList.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        tempCardBinding_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.slark.pengder.protocol.MessageProtos.TempCardBindingList getDefaultInstanceForType() {
        return com.slark.pengder.protocol.MessageProtos.TempCardBindingList.getDefaultInstance();
      }

      public com.slark.pengder.protocol.MessageProtos.TempCardBindingList build() {
        com.slark.pengder.protocol.MessageProtos.TempCardBindingList result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.slark.pengder.protocol.MessageProtos.TempCardBindingList buildPartial() {
        com.slark.pengder.protocol.MessageProtos.TempCardBindingList result = new com.slark.pengder.protocol.MessageProtos.TempCardBindingList(this);
        int from_bitField0_ = bitField0_;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          tempCardBinding_ = java.util.Collections.unmodifiableList(tempCardBinding_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.tempCardBinding_ = tempCardBinding_;
        return result;
      }

      public Builder mergeFrom(com.slark.pengder.protocol.MessageProtos.TempCardBindingList other) {
        if (other == com.slark.pengder.protocol.MessageProtos.TempCardBindingList.getDefaultInstance()) return this;
        if (!other.tempCardBinding_.isEmpty()) {
          if (tempCardBinding_.isEmpty()) {
            tempCardBinding_ = other.tempCardBinding_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureTempCardBindingIsMutable();
            tempCardBinding_.addAll(other.tempCardBinding_);
          }
          
        }
        return this;
      }

      public final boolean isInitialized() {
        for (int i = 0; i < getTempCardBindingCount(); i++) {
          if (!getTempCardBinding(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.slark.pengder.protocol.MessageProtos.TempCardBindingList parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.slark.pengder.protocol.MessageProtos.TempCardBindingList) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // repeated .biotech.osla.TempCardBinding temp_card_binding = 1;
      private java.util.List<com.slark.pengder.protocol.MessageProtos.TempCardBinding> tempCardBinding_ =
        java.util.Collections.emptyList();
      private void ensureTempCardBindingIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          tempCardBinding_ = new java.util.ArrayList<com.slark.pengder.protocol.MessageProtos.TempCardBinding>(tempCardBinding_);
          bitField0_ |= 0x00000001;
         }
      }

      /**
       * <code>repeated .biotech.osla.TempCardBinding temp_card_binding = 1;</code>
       */
      public java.util.List<com.slark.pengder.protocol.MessageProtos.TempCardBinding> getTempCardBindingList() {
        return java.util.Collections.unmodifiableList(tempCardBinding_);
      }
      /**
       * <code>repeated .biotech.osla.TempCardBinding temp_card_binding = 1;</code>
       */
      public int getTempCardBindingCount() {
        return tempCardBinding_.size();
      }
      /**
       * <code>repeated .biotech.osla.TempCardBinding temp_card_binding = 1;</code>
       */
      public com.slark.pengder.protocol.MessageProtos.TempCardBinding getTempCardBinding(int index) {
        return tempCardBinding_.get(index);
      }
      /**
       * <code>repeated .biotech.osla.TempCardBinding temp_card_binding = 1;</code>
       */
      public Builder setTempCardBinding(
          int index, com.slark.pengder.protocol.MessageProtos.TempCardBinding value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureTempCardBindingIsMutable();
        tempCardBinding_.set(index, value);

        return this;
      }
      /**
       * <code>repeated .biotech.osla.TempCardBinding temp_card_binding = 1;</code>
       */
      public Builder setTempCardBinding(
          int index, com.slark.pengder.protocol.MessageProtos.TempCardBinding.Builder builderForValue) {
        ensureTempCardBindingIsMutable();
        tempCardBinding_.set(index, builderForValue.build());

        return this;
      }
      /**
       * <code>repeated .biotech.osla.TempCardBinding temp_card_binding = 1;</code>
       */
      public Builder addTempCardBinding(com.slark.pengder.protocol.MessageProtos.TempCardBinding value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureTempCardBindingIsMutable();
        tempCardBinding_.add(value);

        return this;
      }
      /**
       * <code>repeated .biotech.osla.TempCardBinding temp_card_binding = 1;</code>
       */
      public Builder addTempCardBinding(
          int index, com.slark.pengder.protocol.MessageProtos.TempCardBinding value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureTempCardBindingIsMutable();
        tempCardBinding_.add(index, value);

        return this;
      }
      /**
       * <code>repeated .biotech.osla.TempCardBinding temp_card_binding = 1;</code>
       */
      public Builder addTempCardBinding(
          com.slark.pengder.protocol.MessageProtos.TempCardBinding.Builder builderForValue) {
        ensureTempCardBindingIsMutable();
        tempCardBinding_.add(builderForValue.build());

        return this;
      }
      /**
       * <code>repeated .biotech.osla.TempCardBinding temp_card_binding = 1;</code>
       */
      public Builder addTempCardBinding(
          int index, com.slark.pengder.protocol.MessageProtos.TempCardBinding.Builder builderForValue) {
        ensureTempCardBindingIsMutable();
        tempCardBinding_.add(index, builderForValue.build());

        return this;
      }
      /**
       * <code>repeated .biotech.osla.TempCardBinding temp_card_binding = 1;</code>
       */
      public Builder addAllTempCardBinding(
          java.lang.Iterable<? extends com.slark.pengder.protocol.MessageProtos.TempCardBinding> values) {
        ensureTempCardBindingIsMutable();
        super.addAll(values, tempCardBinding_);

        return this;
      }
      /**
       * <code>repeated .biotech.osla.TempCardBinding temp_card_binding = 1;</code>
       */
      public Builder clearTempCardBinding() {
        tempCardBinding_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);

        return this;
      }
      /**
       * <code>repeated .biotech.osla.TempCardBinding temp_card_binding = 1;</code>
       */
      public Builder removeTempCardBinding(int index) {
        ensureTempCardBindingIsMutable();
        tempCardBinding_.remove(index);

        return this;
      }

      // @@protoc_insertion_point(builder_scope:biotech.osla.TempCardBindingList)
    }

    static {
      defaultInstance = new TempCardBindingList(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:biotech.osla.TempCardBindingList)
  }

  public interface BookingOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {

    // required int32 id = 1;
    /**
     * <code>required int32 id = 1;</code>
     *
     * <pre>
     * 预约ID
     * </pre>
     */
    boolean hasId();
    /**
     * <code>required int32 id = 1;</code>
     *
     * <pre>
     * 预约ID
     * </pre>
     */
    int getId();

    // required int32 user_id = 2;
    /**
     * <code>required int32 user_id = 2;</code>
     *
     * <pre>
     * 用户ID
     * </pre>
     */
    boolean hasUserId();
    /**
     * <code>required int32 user_id = 2;</code>
     *
     * <pre>
     * 用户ID
     * </pre>
     */
    int getUserId();

    // required int32 start_time = 3;
    /**
     * <code>required int32 start_time = 3;</code>
     *
     * <pre>
     * 开始时间
     * </pre>
     */
    boolean hasStartTime();
    /**
     * <code>required int32 start_time = 3;</code>
     *
     * <pre>
     * 开始时间
     * </pre>
     */
    int getStartTime();

    // required int32 end_time = 4;
    /**
     * <code>required int32 end_time = 4;</code>
     *
     * <pre>
     * 结束时间
     * </pre>
     */
    boolean hasEndTime();
    /**
     * <code>required int32 end_time = 4;</code>
     *
     * <pre>
     * 结束时间
     * </pre>
     */
    int getEndTime();

    // required int32 type = 5;
    /**
     * <code>required int32 type = 5;</code>
     *
     * <pre>
     * 预约类型
     * </pre>
     */
    boolean hasType();
    /**
     * <code>required int32 type = 5;</code>
     *
     * <pre>
     * 预约类型
     * </pre>
     */
    int getType();

    // required int32 status = 6;
    /**
     * <code>required int32 status = 6;</code>
     *
     * <pre>
     * 预约状态
     * </pre>
     */
    boolean hasStatus();
    /**
     * <code>required int32 status = 6;</code>
     *
     * <pre>
     * 预约状态
     * </pre>
     */
    int getStatus();

    // optional bool isTips = 7;
    /**
     * <code>optional bool isTips = 7;</code>
     *
     * <pre>
     * 是否播报了预约即将结束
     * </pre>
     */
    boolean hasIsTips();
    /**
     * <code>optional bool isTips = 7;</code>
     *
     * <pre>
     * 是否播报了预约即将结束
     * </pre>
     */
    boolean getIsTips();

    // optional bool isEnd = 8;
    /**
     * <code>optional bool isEnd = 8;</code>
     *
     * <pre>
     * 预约时间是否使用完毕
     * </pre>
     */
    boolean hasIsEnd();
    /**
     * <code>optional bool isEnd = 8;</code>
     *
     * <pre>
     * 预约时间是否使用完毕
     * </pre>
     */
    boolean getIsEnd();
  }
  /**
   * Protobuf type {@code biotech.osla.Booking}
   *
   * <pre>
   * 预约记录
   * </pre>
   */
  public static final class Booking extends
      com.google.protobuf.GeneratedMessageLite
      implements BookingOrBuilder {
    // Use Booking.newBuilder() to construct.
    private Booking(com.google.protobuf.GeneratedMessageLite.Builder builder) {
      super(builder);

    }
    private Booking(boolean noInit) {}

    private static final Booking defaultInstance;
    public static Booking getDefaultInstance() {
      return defaultInstance;
    }

    public Booking getDefaultInstanceForType() {
      return defaultInstance;
    }

    private Booking(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              id_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              userId_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              startTime_ = input.readInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              endTime_ = input.readInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              type_ = input.readInt32();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              status_ = input.readInt32();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000040;
              isTips_ = input.readBool();
              break;
            }
            case 64: {
              bitField0_ |= 0x00000080;
              isEnd_ = input.readBool();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static com.google.protobuf.Parser<Booking> PARSER =
        new com.google.protobuf.AbstractParser<Booking>() {
      public Booking parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Booking(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<Booking> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required int32 id = 1;
    public static final int ID_FIELD_NUMBER = 1;
    private int id_;
    /**
     * <code>required int32 id = 1;</code>
     *
     * <pre>
     * 预约ID
     * </pre>
     */
    public boolean hasId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int32 id = 1;</code>
     *
     * <pre>
     * 预约ID
     * </pre>
     */
    public int getId() {
      return id_;
    }

    // required int32 user_id = 2;
    public static final int USER_ID_FIELD_NUMBER = 2;
    private int userId_;
    /**
     * <code>required int32 user_id = 2;</code>
     *
     * <pre>
     * 用户ID
     * </pre>
     */
    public boolean hasUserId() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required int32 user_id = 2;</code>
     *
     * <pre>
     * 用户ID
     * </pre>
     */
    public int getUserId() {
      return userId_;
    }

    // required int32 start_time = 3;
    public static final int START_TIME_FIELD_NUMBER = 3;
    private int startTime_;
    /**
     * <code>required int32 start_time = 3;</code>
     *
     * <pre>
     * 开始时间
     * </pre>
     */
    public boolean hasStartTime() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required int32 start_time = 3;</code>
     *
     * <pre>
     * 开始时间
     * </pre>
     */
    public int getStartTime() {
      return startTime_;
    }

    // required int32 end_time = 4;
    public static final int END_TIME_FIELD_NUMBER = 4;
    private int endTime_;
    /**
     * <code>required int32 end_time = 4;</code>
     *
     * <pre>
     * 结束时间
     * </pre>
     */
    public boolean hasEndTime() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>required int32 end_time = 4;</code>
     *
     * <pre>
     * 结束时间
     * </pre>
     */
    public int getEndTime() {
      return endTime_;
    }

    // required int32 type = 5;
    public static final int TYPE_FIELD_NUMBER = 5;
    private int type_;
    /**
     * <code>required int32 type = 5;</code>
     *
     * <pre>
     * 预约类型
     * </pre>
     */
    public boolean hasType() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>required int32 type = 5;</code>
     *
     * <pre>
     * 预约类型
     * </pre>
     */
    public int getType() {
      return type_;
    }

    // required int32 status = 6;
    public static final int STATUS_FIELD_NUMBER = 6;
    private int status_;
    /**
     * <code>required int32 status = 6;</code>
     *
     * <pre>
     * 预约状态
     * </pre>
     */
    public boolean hasStatus() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>required int32 status = 6;</code>
     *
     * <pre>
     * 预约状态
     * </pre>
     */
    public int getStatus() {
      return status_;
    }

    // optional bool isTips = 7;
    public static final int ISTIPS_FIELD_NUMBER = 7;
    private boolean isTips_;
    /**
     * <code>optional bool isTips = 7;</code>
     *
     * <pre>
     * 是否播报了预约即将结束
     * </pre>
     */
    public boolean hasIsTips() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional bool isTips = 7;</code>
     *
     * <pre>
     * 是否播报了预约即将结束
     * </pre>
     */
    public boolean getIsTips() {
      return isTips_;
    }

    // optional bool isEnd = 8;
    public static final int ISEND_FIELD_NUMBER = 8;
    private boolean isEnd_;
    /**
     * <code>optional bool isEnd = 8;</code>
     *
     * <pre>
     * 预约时间是否使用完毕
     * </pre>
     */
    public boolean hasIsEnd() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional bool isEnd = 8;</code>
     *
     * <pre>
     * 预约时间是否使用完毕
     * </pre>
     */
    public boolean getIsEnd() {
      return isEnd_;
    }

    private void initFields() {
      id_ = 0;
      userId_ = 0;
      startTime_ = 0;
      endTime_ = 0;
      type_ = 0;
      status_ = 0;
      isTips_ = false;
      isEnd_ = false;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasUserId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasStartTime()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasEndTime()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasType()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasStatus()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, id_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, userId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, startTime_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(4, endTime_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(5, type_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeInt32(6, status_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeBool(7, isTips_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeBool(8, isEnd_);
      }
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, id_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, userId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, startTime_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, endTime_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, type_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, status_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(7, isTips_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(8, isEnd_);
      }
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.slark.pengder.protocol.MessageProtos.Booking parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.slark.pengder.protocol.MessageProtos.Booking parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.slark.pengder.protocol.MessageProtos.Booking parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.slark.pengder.protocol.MessageProtos.Booking parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.slark.pengder.protocol.MessageProtos.Booking parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.slark.pengder.protocol.MessageProtos.Booking parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.slark.pengder.protocol.MessageProtos.Booking parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.slark.pengder.protocol.MessageProtos.Booking parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.slark.pengder.protocol.MessageProtos.Booking parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.slark.pengder.protocol.MessageProtos.Booking parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.slark.pengder.protocol.MessageProtos.Booking prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    /**
     * Protobuf type {@code biotech.osla.Booking}
     *
     * <pre>
     * 预约记录
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.slark.pengder.protocol.MessageProtos.Booking, Builder>
        implements com.slark.pengder.protocol.MessageProtos.BookingOrBuilder {
      // Construct using com.slark.pengder.protocol.MessageProtos.Booking.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        id_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        userId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        startTime_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        endTime_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        type_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        status_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        isTips_ = false;
        bitField0_ = (bitField0_ & ~0x00000040);
        isEnd_ = false;
        bitField0_ = (bitField0_ & ~0x00000080);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.slark.pengder.protocol.MessageProtos.Booking getDefaultInstanceForType() {
        return com.slark.pengder.protocol.MessageProtos.Booking.getDefaultInstance();
      }

      public com.slark.pengder.protocol.MessageProtos.Booking build() {
        com.slark.pengder.protocol.MessageProtos.Booking result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.slark.pengder.protocol.MessageProtos.Booking buildPartial() {
        com.slark.pengder.protocol.MessageProtos.Booking result = new com.slark.pengder.protocol.MessageProtos.Booking(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.id_ = id_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.userId_ = userId_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.startTime_ = startTime_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.endTime_ = endTime_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.type_ = type_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.status_ = status_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.isTips_ = isTips_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.isEnd_ = isEnd_;
        result.bitField0_ = to_bitField0_;
        return result;
      }

      public Builder mergeFrom(com.slark.pengder.protocol.MessageProtos.Booking other) {
        if (other == com.slark.pengder.protocol.MessageProtos.Booking.getDefaultInstance()) return this;
        if (other.hasId()) {
          setId(other.getId());
        }
        if (other.hasUserId()) {
          setUserId(other.getUserId());
        }
        if (other.hasStartTime()) {
          setStartTime(other.getStartTime());
        }
        if (other.hasEndTime()) {
          setEndTime(other.getEndTime());
        }
        if (other.hasType()) {
          setType(other.getType());
        }
        if (other.hasStatus()) {
          setStatus(other.getStatus());
        }
        if (other.hasIsTips()) {
          setIsTips(other.getIsTips());
        }
        if (other.hasIsEnd()) {
          setIsEnd(other.getIsEnd());
        }
        return this;
      }

      public final boolean isInitialized() {
        if (!hasId()) {
          
          return false;
        }
        if (!hasUserId()) {
          
          return false;
        }
        if (!hasStartTime()) {
          
          return false;
        }
        if (!hasEndTime()) {
          
          return false;
        }
        if (!hasType()) {
          
          return false;
        }
        if (!hasStatus()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.slark.pengder.protocol.MessageProtos.Booking parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.slark.pengder.protocol.MessageProtos.Booking) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required int32 id = 1;
      private int id_ ;
      /**
       * <code>required int32 id = 1;</code>
       *
       * <pre>
       * 预约ID
       * </pre>
       */
      public boolean hasId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int32 id = 1;</code>
       *
       * <pre>
       * 预约ID
       * </pre>
       */
      public int getId() {
        return id_;
      }
      /**
       * <code>required int32 id = 1;</code>
       *
       * <pre>
       * 预约ID
       * </pre>
       */
      public Builder setId(int value) {
        bitField0_ |= 0x00000001;
        id_ = value;
        
        return this;
      }
      /**
       * <code>required int32 id = 1;</code>
       *
       * <pre>
       * 预约ID
       * </pre>
       */
      public Builder clearId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        id_ = 0;
        
        return this;
      }

      // required int32 user_id = 2;
      private int userId_ ;
      /**
       * <code>required int32 user_id = 2;</code>
       *
       * <pre>
       * 用户ID
       * </pre>
       */
      public boolean hasUserId() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required int32 user_id = 2;</code>
       *
       * <pre>
       * 用户ID
       * </pre>
       */
      public int getUserId() {
        return userId_;
      }
      /**
       * <code>required int32 user_id = 2;</code>
       *
       * <pre>
       * 用户ID
       * </pre>
       */
      public Builder setUserId(int value) {
        bitField0_ |= 0x00000002;
        userId_ = value;
        
        return this;
      }
      /**
       * <code>required int32 user_id = 2;</code>
       *
       * <pre>
       * 用户ID
       * </pre>
       */
      public Builder clearUserId() {
        bitField0_ = (bitField0_ & ~0x00000002);
        userId_ = 0;
        
        return this;
      }

      // required int32 start_time = 3;
      private int startTime_ ;
      /**
       * <code>required int32 start_time = 3;</code>
       *
       * <pre>
       * 开始时间
       * </pre>
       */
      public boolean hasStartTime() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required int32 start_time = 3;</code>
       *
       * <pre>
       * 开始时间
       * </pre>
       */
      public int getStartTime() {
        return startTime_;
      }
      /**
       * <code>required int32 start_time = 3;</code>
       *
       * <pre>
       * 开始时间
       * </pre>
       */
      public Builder setStartTime(int value) {
        bitField0_ |= 0x00000004;
        startTime_ = value;
        
        return this;
      }
      /**
       * <code>required int32 start_time = 3;</code>
       *
       * <pre>
       * 开始时间
       * </pre>
       */
      public Builder clearStartTime() {
        bitField0_ = (bitField0_ & ~0x00000004);
        startTime_ = 0;
        
        return this;
      }

      // required int32 end_time = 4;
      private int endTime_ ;
      /**
       * <code>required int32 end_time = 4;</code>
       *
       * <pre>
       * 结束时间
       * </pre>
       */
      public boolean hasEndTime() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>required int32 end_time = 4;</code>
       *
       * <pre>
       * 结束时间
       * </pre>
       */
      public int getEndTime() {
        return endTime_;
      }
      /**
       * <code>required int32 end_time = 4;</code>
       *
       * <pre>
       * 结束时间
       * </pre>
       */
      public Builder setEndTime(int value) {
        bitField0_ |= 0x00000008;
        endTime_ = value;
        
        return this;
      }
      /**
       * <code>required int32 end_time = 4;</code>
       *
       * <pre>
       * 结束时间
       * </pre>
       */
      public Builder clearEndTime() {
        bitField0_ = (bitField0_ & ~0x00000008);
        endTime_ = 0;
        
        return this;
      }

      // required int32 type = 5;
      private int type_ ;
      /**
       * <code>required int32 type = 5;</code>
       *
       * <pre>
       * 预约类型
       * </pre>
       */
      public boolean hasType() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>required int32 type = 5;</code>
       *
       * <pre>
       * 预约类型
       * </pre>
       */
      public int getType() {
        return type_;
      }
      /**
       * <code>required int32 type = 5;</code>
       *
       * <pre>
       * 预约类型
       * </pre>
       */
      public Builder setType(int value) {
        bitField0_ |= 0x00000010;
        type_ = value;
        
        return this;
      }
      /**
       * <code>required int32 type = 5;</code>
       *
       * <pre>
       * 预约类型
       * </pre>
       */
      public Builder clearType() {
        bitField0_ = (bitField0_ & ~0x00000010);
        type_ = 0;
        
        return this;
      }

      // required int32 status = 6;
      private int status_ ;
      /**
       * <code>required int32 status = 6;</code>
       *
       * <pre>
       * 预约状态
       * </pre>
       */
      public boolean hasStatus() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>required int32 status = 6;</code>
       *
       * <pre>
       * 预约状态
       * </pre>
       */
      public int getStatus() {
        return status_;
      }
      /**
       * <code>required int32 status = 6;</code>
       *
       * <pre>
       * 预约状态
       * </pre>
       */
      public Builder setStatus(int value) {
        bitField0_ |= 0x00000020;
        status_ = value;
        
        return this;
      }
      /**
       * <code>required int32 status = 6;</code>
       *
       * <pre>
       * 预约状态
       * </pre>
       */
      public Builder clearStatus() {
        bitField0_ = (bitField0_ & ~0x00000020);
        status_ = 0;
        
        return this;
      }

      // optional bool isTips = 7;
      private boolean isTips_ ;
      /**
       * <code>optional bool isTips = 7;</code>
       *
       * <pre>
       * 是否播报了预约即将结束
       * </pre>
       */
      public boolean hasIsTips() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional bool isTips = 7;</code>
       *
       * <pre>
       * 是否播报了预约即将结束
       * </pre>
       */
      public boolean getIsTips() {
        return isTips_;
      }
      /**
       * <code>optional bool isTips = 7;</code>
       *
       * <pre>
       * 是否播报了预约即将结束
       * </pre>
       */
      public Builder setIsTips(boolean value) {
        bitField0_ |= 0x00000040;
        isTips_ = value;
        
        return this;
      }
      /**
       * <code>optional bool isTips = 7;</code>
       *
       * <pre>
       * 是否播报了预约即将结束
       * </pre>
       */
      public Builder clearIsTips() {
        bitField0_ = (bitField0_ & ~0x00000040);
        isTips_ = false;
        
        return this;
      }

      // optional bool isEnd = 8;
      private boolean isEnd_ ;
      /**
       * <code>optional bool isEnd = 8;</code>
       *
       * <pre>
       * 预约时间是否使用完毕
       * </pre>
       */
      public boolean hasIsEnd() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional bool isEnd = 8;</code>
       *
       * <pre>
       * 预约时间是否使用完毕
       * </pre>
       */
      public boolean getIsEnd() {
        return isEnd_;
      }
      /**
       * <code>optional bool isEnd = 8;</code>
       *
       * <pre>
       * 预约时间是否使用完毕
       * </pre>
       */
      public Builder setIsEnd(boolean value) {
        bitField0_ |= 0x00000080;
        isEnd_ = value;
        
        return this;
      }
      /**
       * <code>optional bool isEnd = 8;</code>
       *
       * <pre>
       * 预约时间是否使用完毕
       * </pre>
       */
      public Builder clearIsEnd() {
        bitField0_ = (bitField0_ & ~0x00000080);
        isEnd_ = false;
        
        return this;
      }

      // @@protoc_insertion_point(builder_scope:biotech.osla.Booking)
    }

    static {
      defaultInstance = new Booking(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:biotech.osla.Booking)
  }

  public interface BookingListOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {

    // repeated .biotech.osla.Booking booking = 1;
    /**
     * <code>repeated .biotech.osla.Booking booking = 1;</code>
     */
    java.util.List<com.slark.pengder.protocol.MessageProtos.Booking> 
        getBookingList();
    /**
     * <code>repeated .biotech.osla.Booking booking = 1;</code>
     */
    com.slark.pengder.protocol.MessageProtos.Booking getBooking(int index);
    /**
     * <code>repeated .biotech.osla.Booking booking = 1;</code>
     */
    int getBookingCount();
  }
  /**
   * Protobuf type {@code biotech.osla.BookingList}
   *
   * <pre>
   * 预约记录列表
   * </pre>
   */
  public static final class BookingList extends
      com.google.protobuf.GeneratedMessageLite
      implements BookingListOrBuilder {
    // Use BookingList.newBuilder() to construct.
    private BookingList(com.google.protobuf.GeneratedMessageLite.Builder builder) {
      super(builder);

    }
    private BookingList(boolean noInit) {}

    private static final BookingList defaultInstance;
    public static BookingList getDefaultInstance() {
      return defaultInstance;
    }

    public BookingList getDefaultInstanceForType() {
      return defaultInstance;
    }

    private BookingList(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                booking_ = new java.util.ArrayList<com.slark.pengder.protocol.MessageProtos.Booking>();
                mutable_bitField0_ |= 0x00000001;
              }
              booking_.add(input.readMessage(com.slark.pengder.protocol.MessageProtos.Booking.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          booking_ = java.util.Collections.unmodifiableList(booking_);
        }
        makeExtensionsImmutable();
      }
    }
    public static com.google.protobuf.Parser<BookingList> PARSER =
        new com.google.protobuf.AbstractParser<BookingList>() {
      public BookingList parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new BookingList(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<BookingList> getParserForType() {
      return PARSER;
    }

    // repeated .biotech.osla.Booking booking = 1;
    public static final int BOOKING_FIELD_NUMBER = 1;
    private java.util.List<com.slark.pengder.protocol.MessageProtos.Booking> booking_;
    /**
     * <code>repeated .biotech.osla.Booking booking = 1;</code>
     */
    public java.util.List<com.slark.pengder.protocol.MessageProtos.Booking> getBookingList() {
      return booking_;
    }
    /**
     * <code>repeated .biotech.osla.Booking booking = 1;</code>
     */
    public java.util.List<? extends com.slark.pengder.protocol.MessageProtos.BookingOrBuilder> 
        getBookingOrBuilderList() {
      return booking_;
    }
    /**
     * <code>repeated .biotech.osla.Booking booking = 1;</code>
     */
    public int getBookingCount() {
      return booking_.size();
    }
    /**
     * <code>repeated .biotech.osla.Booking booking = 1;</code>
     */
    public com.slark.pengder.protocol.MessageProtos.Booking getBooking(int index) {
      return booking_.get(index);
    }
    /**
     * <code>repeated .biotech.osla.Booking booking = 1;</code>
     */
    public com.slark.pengder.protocol.MessageProtos.BookingOrBuilder getBookingOrBuilder(
        int index) {
      return booking_.get(index);
    }

    private void initFields() {
      booking_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      for (int i = 0; i < getBookingCount(); i++) {
        if (!getBooking(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < booking_.size(); i++) {
        output.writeMessage(1, booking_.get(i));
      }
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < booking_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, booking_.get(i));
      }
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.slark.pengder.protocol.MessageProtos.BookingList parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.slark.pengder.protocol.MessageProtos.BookingList parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.slark.pengder.protocol.MessageProtos.BookingList parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.slark.pengder.protocol.MessageProtos.BookingList parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.slark.pengder.protocol.MessageProtos.BookingList parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.slark.pengder.protocol.MessageProtos.BookingList parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.slark.pengder.protocol.MessageProtos.BookingList parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.slark.pengder.protocol.MessageProtos.BookingList parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.slark.pengder.protocol.MessageProtos.BookingList parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.slark.pengder.protocol.MessageProtos.BookingList parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.slark.pengder.protocol.MessageProtos.BookingList prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    /**
     * Protobuf type {@code biotech.osla.BookingList}
     *
     * <pre>
     * 预约记录列表
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.slark.pengder.protocol.MessageProtos.BookingList, Builder>
        implements com.slark.pengder.protocol.MessageProtos.BookingListOrBuilder {
      // Construct using com.slark.pengder.protocol.MessageProtos.BookingList.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        booking_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.slark.pengder.protocol.MessageProtos.BookingList getDefaultInstanceForType() {
        return com.slark.pengder.protocol.MessageProtos.BookingList.getDefaultInstance();
      }

      public com.slark.pengder.protocol.MessageProtos.BookingList build() {
        com.slark.pengder.protocol.MessageProtos.BookingList result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.slark.pengder.protocol.MessageProtos.BookingList buildPartial() {
        com.slark.pengder.protocol.MessageProtos.BookingList result = new com.slark.pengder.protocol.MessageProtos.BookingList(this);
        int from_bitField0_ = bitField0_;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          booking_ = java.util.Collections.unmodifiableList(booking_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.booking_ = booking_;
        return result;
      }

      public Builder mergeFrom(com.slark.pengder.protocol.MessageProtos.BookingList other) {
        if (other == com.slark.pengder.protocol.MessageProtos.BookingList.getDefaultInstance()) return this;
        if (!other.booking_.isEmpty()) {
          if (booking_.isEmpty()) {
            booking_ = other.booking_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureBookingIsMutable();
            booking_.addAll(other.booking_);
          }
          
        }
        return this;
      }

      public final boolean isInitialized() {
        for (int i = 0; i < getBookingCount(); i++) {
          if (!getBooking(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.slark.pengder.protocol.MessageProtos.BookingList parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.slark.pengder.protocol.MessageProtos.BookingList) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // repeated .biotech.osla.Booking booking = 1;
      private java.util.List<com.slark.pengder.protocol.MessageProtos.Booking> booking_ =
        java.util.Collections.emptyList();
      private void ensureBookingIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          booking_ = new java.util.ArrayList<com.slark.pengder.protocol.MessageProtos.Booking>(booking_);
          bitField0_ |= 0x00000001;
         }
      }

      /**
       * <code>repeated .biotech.osla.Booking booking = 1;</code>
       */
      public java.util.List<com.slark.pengder.protocol.MessageProtos.Booking> getBookingList() {
        return java.util.Collections.unmodifiableList(booking_);
      }
      /**
       * <code>repeated .biotech.osla.Booking booking = 1;</code>
       */
      public int getBookingCount() {
        return booking_.size();
      }
      /**
       * <code>repeated .biotech.osla.Booking booking = 1;</code>
       */
      public com.slark.pengder.protocol.MessageProtos.Booking getBooking(int index) {
        return booking_.get(index);
      }
      /**
       * <code>repeated .biotech.osla.Booking booking = 1;</code>
       */
      public Builder setBooking(
          int index, com.slark.pengder.protocol.MessageProtos.Booking value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureBookingIsMutable();
        booking_.set(index, value);

        return this;
      }
      /**
       * <code>repeated .biotech.osla.Booking booking = 1;</code>
       */
      public Builder setBooking(
          int index, com.slark.pengder.protocol.MessageProtos.Booking.Builder builderForValue) {
        ensureBookingIsMutable();
        booking_.set(index, builderForValue.build());

        return this;
      }
      /**
       * <code>repeated .biotech.osla.Booking booking = 1;</code>
       */
      public Builder addBooking(com.slark.pengder.protocol.MessageProtos.Booking value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureBookingIsMutable();
        booking_.add(value);

        return this;
      }
      /**
       * <code>repeated .biotech.osla.Booking booking = 1;</code>
       */
      public Builder addBooking(
          int index, com.slark.pengder.protocol.MessageProtos.Booking value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureBookingIsMutable();
        booking_.add(index, value);

        return this;
      }
      /**
       * <code>repeated .biotech.osla.Booking booking = 1;</code>
       */
      public Builder addBooking(
          com.slark.pengder.protocol.MessageProtos.Booking.Builder builderForValue) {
        ensureBookingIsMutable();
        booking_.add(builderForValue.build());

        return this;
      }
      /**
       * <code>repeated .biotech.osla.Booking booking = 1;</code>
       */
      public Builder addBooking(
          int index, com.slark.pengder.protocol.MessageProtos.Booking.Builder builderForValue) {
        ensureBookingIsMutable();
        booking_.add(index, builderForValue.build());

        return this;
      }
      /**
       * <code>repeated .biotech.osla.Booking booking = 1;</code>
       */
      public Builder addAllBooking(
          java.lang.Iterable<? extends com.slark.pengder.protocol.MessageProtos.Booking> values) {
        ensureBookingIsMutable();
        super.addAll(values, booking_);

        return this;
      }
      /**
       * <code>repeated .biotech.osla.Booking booking = 1;</code>
       */
      public Builder clearBooking() {
        booking_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);

        return this;
      }
      /**
       * <code>repeated .biotech.osla.Booking booking = 1;</code>
       */
      public Builder removeBooking(int index) {
        ensureBookingIsMutable();
        booking_.remove(index);

        return this;
      }

      // @@protoc_insertion_point(builder_scope:biotech.osla.BookingList)
    }

    static {
      defaultInstance = new BookingList(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:biotech.osla.BookingList)
  }

  public interface CalendarOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {

    // required int32 day = 1;
    /**
     * <code>required int32 day = 1;</code>
     *
     * <pre>
     * 日期 示例20170524
     * </pre>
     */
    boolean hasDay();
    /**
     * <code>required int32 day = 1;</code>
     *
     * <pre>
     * 日期 示例20170524
     * </pre>
     */
    int getDay();

    // required bool is_holiday = 2;
    /**
     * <code>required bool is_holiday = 2;</code>
     *
     * <pre>
     * 是否节假日
     * </pre>
     */
    boolean hasIsHoliday();
    /**
     * <code>required bool is_holiday = 2;</code>
     *
     * <pre>
     * 是否节假日
     * </pre>
     */
    boolean getIsHoliday();

    // optional int32 id = 3;
    /**
     * <code>optional int32 id = 3;</code>
     *
     * <pre>
     * 日历ID
     * </pre>
     */
    boolean hasId();
    /**
     * <code>optional int32 id = 3;</code>
     *
     * <pre>
     * 日历ID
     * </pre>
     */
    int getId();
  }
  /**
   * Protobuf type {@code biotech.osla.Calendar}
   *
   * <pre>
   * 系统日历
   * </pre>
   */
  public static final class Calendar extends
      com.google.protobuf.GeneratedMessageLite
      implements CalendarOrBuilder {
    // Use Calendar.newBuilder() to construct.
    private Calendar(com.google.protobuf.GeneratedMessageLite.Builder builder) {
      super(builder);

    }
    private Calendar(boolean noInit) {}

    private static final Calendar defaultInstance;
    public static Calendar getDefaultInstance() {
      return defaultInstance;
    }

    public Calendar getDefaultInstanceForType() {
      return defaultInstance;
    }

    private Calendar(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              day_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              isHoliday_ = input.readBool();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              id_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static com.google.protobuf.Parser<Calendar> PARSER =
        new com.google.protobuf.AbstractParser<Calendar>() {
      public Calendar parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Calendar(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<Calendar> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required int32 day = 1;
    public static final int DAY_FIELD_NUMBER = 1;
    private int day_;
    /**
     * <code>required int32 day = 1;</code>
     *
     * <pre>
     * 日期 示例20170524
     * </pre>
     */
    public boolean hasDay() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int32 day = 1;</code>
     *
     * <pre>
     * 日期 示例20170524
     * </pre>
     */
    public int getDay() {
      return day_;
    }

    // required bool is_holiday = 2;
    public static final int IS_HOLIDAY_FIELD_NUMBER = 2;
    private boolean isHoliday_;
    /**
     * <code>required bool is_holiday = 2;</code>
     *
     * <pre>
     * 是否节假日
     * </pre>
     */
    public boolean hasIsHoliday() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required bool is_holiday = 2;</code>
     *
     * <pre>
     * 是否节假日
     * </pre>
     */
    public boolean getIsHoliday() {
      return isHoliday_;
    }

    // optional int32 id = 3;
    public static final int ID_FIELD_NUMBER = 3;
    private int id_;
    /**
     * <code>optional int32 id = 3;</code>
     *
     * <pre>
     * 日历ID
     * </pre>
     */
    public boolean hasId() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int32 id = 3;</code>
     *
     * <pre>
     * 日历ID
     * </pre>
     */
    public int getId() {
      return id_;
    }

    private void initFields() {
      day_ = 0;
      isHoliday_ = false;
      id_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasDay()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasIsHoliday()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, day_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBool(2, isHoliday_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, id_);
      }
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, day_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(2, isHoliday_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, id_);
      }
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.slark.pengder.protocol.MessageProtos.Calendar parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.slark.pengder.protocol.MessageProtos.Calendar parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.slark.pengder.protocol.MessageProtos.Calendar parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.slark.pengder.protocol.MessageProtos.Calendar parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.slark.pengder.protocol.MessageProtos.Calendar parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.slark.pengder.protocol.MessageProtos.Calendar parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.slark.pengder.protocol.MessageProtos.Calendar parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.slark.pengder.protocol.MessageProtos.Calendar parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.slark.pengder.protocol.MessageProtos.Calendar parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.slark.pengder.protocol.MessageProtos.Calendar parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.slark.pengder.protocol.MessageProtos.Calendar prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    /**
     * Protobuf type {@code biotech.osla.Calendar}
     *
     * <pre>
     * 系统日历
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.slark.pengder.protocol.MessageProtos.Calendar, Builder>
        implements com.slark.pengder.protocol.MessageProtos.CalendarOrBuilder {
      // Construct using com.slark.pengder.protocol.MessageProtos.Calendar.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        day_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        isHoliday_ = false;
        bitField0_ = (bitField0_ & ~0x00000002);
        id_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.slark.pengder.protocol.MessageProtos.Calendar getDefaultInstanceForType() {
        return com.slark.pengder.protocol.MessageProtos.Calendar.getDefaultInstance();
      }

      public com.slark.pengder.protocol.MessageProtos.Calendar build() {
        com.slark.pengder.protocol.MessageProtos.Calendar result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.slark.pengder.protocol.MessageProtos.Calendar buildPartial() {
        com.slark.pengder.protocol.MessageProtos.Calendar result = new com.slark.pengder.protocol.MessageProtos.Calendar(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.day_ = day_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.isHoliday_ = isHoliday_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.id_ = id_;
        result.bitField0_ = to_bitField0_;
        return result;
      }

      public Builder mergeFrom(com.slark.pengder.protocol.MessageProtos.Calendar other) {
        if (other == com.slark.pengder.protocol.MessageProtos.Calendar.getDefaultInstance()) return this;
        if (other.hasDay()) {
          setDay(other.getDay());
        }
        if (other.hasIsHoliday()) {
          setIsHoliday(other.getIsHoliday());
        }
        if (other.hasId()) {
          setId(other.getId());
        }
        return this;
      }

      public final boolean isInitialized() {
        if (!hasDay()) {
          
          return false;
        }
        if (!hasIsHoliday()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.slark.pengder.protocol.MessageProtos.Calendar parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.slark.pengder.protocol.MessageProtos.Calendar) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required int32 day = 1;
      private int day_ ;
      /**
       * <code>required int32 day = 1;</code>
       *
       * <pre>
       * 日期 示例20170524
       * </pre>
       */
      public boolean hasDay() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int32 day = 1;</code>
       *
       * <pre>
       * 日期 示例20170524
       * </pre>
       */
      public int getDay() {
        return day_;
      }
      /**
       * <code>required int32 day = 1;</code>
       *
       * <pre>
       * 日期 示例20170524
       * </pre>
       */
      public Builder setDay(int value) {
        bitField0_ |= 0x00000001;
        day_ = value;
        
        return this;
      }
      /**
       * <code>required int32 day = 1;</code>
       *
       * <pre>
       * 日期 示例20170524
       * </pre>
       */
      public Builder clearDay() {
        bitField0_ = (bitField0_ & ~0x00000001);
        day_ = 0;
        
        return this;
      }

      // required bool is_holiday = 2;
      private boolean isHoliday_ ;
      /**
       * <code>required bool is_holiday = 2;</code>
       *
       * <pre>
       * 是否节假日
       * </pre>
       */
      public boolean hasIsHoliday() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required bool is_holiday = 2;</code>
       *
       * <pre>
       * 是否节假日
       * </pre>
       */
      public boolean getIsHoliday() {
        return isHoliday_;
      }
      /**
       * <code>required bool is_holiday = 2;</code>
       *
       * <pre>
       * 是否节假日
       * </pre>
       */
      public Builder setIsHoliday(boolean value) {
        bitField0_ |= 0x00000002;
        isHoliday_ = value;
        
        return this;
      }
      /**
       * <code>required bool is_holiday = 2;</code>
       *
       * <pre>
       * 是否节假日
       * </pre>
       */
      public Builder clearIsHoliday() {
        bitField0_ = (bitField0_ & ~0x00000002);
        isHoliday_ = false;
        
        return this;
      }

      // optional int32 id = 3;
      private int id_ ;
      /**
       * <code>optional int32 id = 3;</code>
       *
       * <pre>
       * 日历ID
       * </pre>
       */
      public boolean hasId() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int32 id = 3;</code>
       *
       * <pre>
       * 日历ID
       * </pre>
       */
      public int getId() {
        return id_;
      }
      /**
       * <code>optional int32 id = 3;</code>
       *
       * <pre>
       * 日历ID
       * </pre>
       */
      public Builder setId(int value) {
        bitField0_ |= 0x00000004;
        id_ = value;
        
        return this;
      }
      /**
       * <code>optional int32 id = 3;</code>
       *
       * <pre>
       * 日历ID
       * </pre>
       */
      public Builder clearId() {
        bitField0_ = (bitField0_ & ~0x00000004);
        id_ = 0;
        
        return this;
      }

      // @@protoc_insertion_point(builder_scope:biotech.osla.Calendar)
    }

    static {
      defaultInstance = new Calendar(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:biotech.osla.Calendar)
  }

  public interface CalendarListOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {

    // repeated .biotech.osla.Calendar calendar = 1;
    /**
     * <code>repeated .biotech.osla.Calendar calendar = 1;</code>
     */
    java.util.List<com.slark.pengder.protocol.MessageProtos.Calendar> 
        getCalendarList();
    /**
     * <code>repeated .biotech.osla.Calendar calendar = 1;</code>
     */
    com.slark.pengder.protocol.MessageProtos.Calendar getCalendar(int index);
    /**
     * <code>repeated .biotech.osla.Calendar calendar = 1;</code>
     */
    int getCalendarCount();
  }
  /**
   * Protobuf type {@code biotech.osla.CalendarList}
   *
   * <pre>
   * 系统日历列表
   * </pre>
   */
  public static final class CalendarList extends
      com.google.protobuf.GeneratedMessageLite
      implements CalendarListOrBuilder {
    // Use CalendarList.newBuilder() to construct.
    private CalendarList(com.google.protobuf.GeneratedMessageLite.Builder builder) {
      super(builder);

    }
    private CalendarList(boolean noInit) {}

    private static final CalendarList defaultInstance;
    public static CalendarList getDefaultInstance() {
      return defaultInstance;
    }

    public CalendarList getDefaultInstanceForType() {
      return defaultInstance;
    }

    private CalendarList(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                calendar_ = new java.util.ArrayList<com.slark.pengder.protocol.MessageProtos.Calendar>();
                mutable_bitField0_ |= 0x00000001;
              }
              calendar_.add(input.readMessage(com.slark.pengder.protocol.MessageProtos.Calendar.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          calendar_ = java.util.Collections.unmodifiableList(calendar_);
        }
        makeExtensionsImmutable();
      }
    }
    public static com.google.protobuf.Parser<CalendarList> PARSER =
        new com.google.protobuf.AbstractParser<CalendarList>() {
      public CalendarList parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CalendarList(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CalendarList> getParserForType() {
      return PARSER;
    }

    // repeated .biotech.osla.Calendar calendar = 1;
    public static final int CALENDAR_FIELD_NUMBER = 1;
    private java.util.List<com.slark.pengder.protocol.MessageProtos.Calendar> calendar_;
    /**
     * <code>repeated .biotech.osla.Calendar calendar = 1;</code>
     */
    public java.util.List<com.slark.pengder.protocol.MessageProtos.Calendar> getCalendarList() {
      return calendar_;
    }
    /**
     * <code>repeated .biotech.osla.Calendar calendar = 1;</code>
     */
    public java.util.List<? extends com.slark.pengder.protocol.MessageProtos.CalendarOrBuilder> 
        getCalendarOrBuilderList() {
      return calendar_;
    }
    /**
     * <code>repeated .biotech.osla.Calendar calendar = 1;</code>
     */
    public int getCalendarCount() {
      return calendar_.size();
    }
    /**
     * <code>repeated .biotech.osla.Calendar calendar = 1;</code>
     */
    public com.slark.pengder.protocol.MessageProtos.Calendar getCalendar(int index) {
      return calendar_.get(index);
    }
    /**
     * <code>repeated .biotech.osla.Calendar calendar = 1;</code>
     */
    public com.slark.pengder.protocol.MessageProtos.CalendarOrBuilder getCalendarOrBuilder(
        int index) {
      return calendar_.get(index);
    }

    private void initFields() {
      calendar_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      for (int i = 0; i < getCalendarCount(); i++) {
        if (!getCalendar(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < calendar_.size(); i++) {
        output.writeMessage(1, calendar_.get(i));
      }
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < calendar_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, calendar_.get(i));
      }
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.slark.pengder.protocol.MessageProtos.CalendarList parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.slark.pengder.protocol.MessageProtos.CalendarList parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.slark.pengder.protocol.MessageProtos.CalendarList parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.slark.pengder.protocol.MessageProtos.CalendarList parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.slark.pengder.protocol.MessageProtos.CalendarList parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.slark.pengder.protocol.MessageProtos.CalendarList parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.slark.pengder.protocol.MessageProtos.CalendarList parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.slark.pengder.protocol.MessageProtos.CalendarList parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.slark.pengder.protocol.MessageProtos.CalendarList parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.slark.pengder.protocol.MessageProtos.CalendarList parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.slark.pengder.protocol.MessageProtos.CalendarList prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    /**
     * Protobuf type {@code biotech.osla.CalendarList}
     *
     * <pre>
     * 系统日历列表
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.slark.pengder.protocol.MessageProtos.CalendarList, Builder>
        implements com.slark.pengder.protocol.MessageProtos.CalendarListOrBuilder {
      // Construct using com.slark.pengder.protocol.MessageProtos.CalendarList.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        calendar_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.slark.pengder.protocol.MessageProtos.CalendarList getDefaultInstanceForType() {
        return com.slark.pengder.protocol.MessageProtos.CalendarList.getDefaultInstance();
      }

      public com.slark.pengder.protocol.MessageProtos.CalendarList build() {
        com.slark.pengder.protocol.MessageProtos.CalendarList result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.slark.pengder.protocol.MessageProtos.CalendarList buildPartial() {
        com.slark.pengder.protocol.MessageProtos.CalendarList result = new com.slark.pengder.protocol.MessageProtos.CalendarList(this);
        int from_bitField0_ = bitField0_;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          calendar_ = java.util.Collections.unmodifiableList(calendar_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.calendar_ = calendar_;
        return result;
      }

      public Builder mergeFrom(com.slark.pengder.protocol.MessageProtos.CalendarList other) {
        if (other == com.slark.pengder.protocol.MessageProtos.CalendarList.getDefaultInstance()) return this;
        if (!other.calendar_.isEmpty()) {
          if (calendar_.isEmpty()) {
            calendar_ = other.calendar_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureCalendarIsMutable();
            calendar_.addAll(other.calendar_);
          }
          
        }
        return this;
      }

      public final boolean isInitialized() {
        for (int i = 0; i < getCalendarCount(); i++) {
          if (!getCalendar(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.slark.pengder.protocol.MessageProtos.CalendarList parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.slark.pengder.protocol.MessageProtos.CalendarList) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // repeated .biotech.osla.Calendar calendar = 1;
      private java.util.List<com.slark.pengder.protocol.MessageProtos.Calendar> calendar_ =
        java.util.Collections.emptyList();
      private void ensureCalendarIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          calendar_ = new java.util.ArrayList<com.slark.pengder.protocol.MessageProtos.Calendar>(calendar_);
          bitField0_ |= 0x00000001;
         }
      }

      /**
       * <code>repeated .biotech.osla.Calendar calendar = 1;</code>
       */
      public java.util.List<com.slark.pengder.protocol.MessageProtos.Calendar> getCalendarList() {
        return java.util.Collections.unmodifiableList(calendar_);
      }
      /**
       * <code>repeated .biotech.osla.Calendar calendar = 1;</code>
       */
      public int getCalendarCount() {
        return calendar_.size();
      }
      /**
       * <code>repeated .biotech.osla.Calendar calendar = 1;</code>
       */
      public com.slark.pengder.protocol.MessageProtos.Calendar getCalendar(int index) {
        return calendar_.get(index);
      }
      /**
       * <code>repeated .biotech.osla.Calendar calendar = 1;</code>
       */
      public Builder setCalendar(
          int index, com.slark.pengder.protocol.MessageProtos.Calendar value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureCalendarIsMutable();
        calendar_.set(index, value);

        return this;
      }
      /**
       * <code>repeated .biotech.osla.Calendar calendar = 1;</code>
       */
      public Builder setCalendar(
          int index, com.slark.pengder.protocol.MessageProtos.Calendar.Builder builderForValue) {
        ensureCalendarIsMutable();
        calendar_.set(index, builderForValue.build());

        return this;
      }
      /**
       * <code>repeated .biotech.osla.Calendar calendar = 1;</code>
       */
      public Builder addCalendar(com.slark.pengder.protocol.MessageProtos.Calendar value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureCalendarIsMutable();
        calendar_.add(value);

        return this;
      }
      /**
       * <code>repeated .biotech.osla.Calendar calendar = 1;</code>
       */
      public Builder addCalendar(
          int index, com.slark.pengder.protocol.MessageProtos.Calendar value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureCalendarIsMutable();
        calendar_.add(index, value);

        return this;
      }
      /**
       * <code>repeated .biotech.osla.Calendar calendar = 1;</code>
       */
      public Builder addCalendar(
          com.slark.pengder.protocol.MessageProtos.Calendar.Builder builderForValue) {
        ensureCalendarIsMutable();
        calendar_.add(builderForValue.build());

        return this;
      }
      /**
       * <code>repeated .biotech.osla.Calendar calendar = 1;</code>
       */
      public Builder addCalendar(
          int index, com.slark.pengder.protocol.MessageProtos.Calendar.Builder builderForValue) {
        ensureCalendarIsMutable();
        calendar_.add(index, builderForValue.build());

        return this;
      }
      /**
       * <code>repeated .biotech.osla.Calendar calendar = 1;</code>
       */
      public Builder addAllCalendar(
          java.lang.Iterable<? extends com.slark.pengder.protocol.MessageProtos.Calendar> values) {
        ensureCalendarIsMutable();
        super.addAll(values, calendar_);

        return this;
      }
      /**
       * <code>repeated .biotech.osla.Calendar calendar = 1;</code>
       */
      public Builder clearCalendar() {
        calendar_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);

        return this;
      }
      /**
       * <code>repeated .biotech.osla.Calendar calendar = 1;</code>
       */
      public Builder removeCalendar(int index) {
        ensureCalendarIsMutable();
        calendar_.remove(index);

        return this;
      }

      // @@protoc_insertion_point(builder_scope:biotech.osla.CalendarList)
    }

    static {
      defaultInstance = new CalendarList(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:biotech.osla.CalendarList)
  }

  public interface GlobalConfigOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {

    // required int32 account_deposit_limit = 1;
    /**
     * <code>required int32 account_deposit_limit = 1;</code>
     *
     * <pre>
     * 账户余额提醒线
     * </pre>
     */
    boolean hasAccountDepositLimit();
    /**
     * <code>required int32 account_deposit_limit = 1;</code>
     *
     * <pre>
     * 账户余额提醒线
     * </pre>
     */
    int getAccountDepositLimit();

    // optional string ftp_host = 2;
    /**
     * <code>optional string ftp_host = 2;</code>
     *
     * <pre>
     *required int32 valid_training_check_in_time = 2; // 培训报名有效时间
     *optional string client_software_update_url = 4;  // 客户端软件更新地址
     *optional int32 client_software_auto_update = 5;  // 客户端软件是否自动更新
     * </pre>
     */
    boolean hasFtpHost();
    /**
     * <code>optional string ftp_host = 2;</code>
     *
     * <pre>
     *required int32 valid_training_check_in_time = 2; // 培训报名有效时间
     *optional string client_software_update_url = 4;  // 客户端软件更新地址
     *optional int32 client_software_auto_update = 5;  // 客户端软件是否自动更新
     * </pre>
     */
    java.lang.String getFtpHost();
    /**
     * <code>optional string ftp_host = 2;</code>
     *
     * <pre>
     *required int32 valid_training_check_in_time = 2; // 培训报名有效时间
     *optional string client_software_update_url = 4;  // 客户端软件更新地址
     *optional int32 client_software_auto_update = 5;  // 客户端软件是否自动更新
     * </pre>
     */
    com.google.protobuf.ByteString
        getFtpHostBytes();

    // optional string ftp_port = 3;
    /**
     * <code>optional string ftp_port = 3;</code>
     *
     * <pre>
     * Ftp 端口
     * </pre>
     */
    boolean hasFtpPort();
    /**
     * <code>optional string ftp_port = 3;</code>
     *
     * <pre>
     * Ftp 端口
     * </pre>
     */
    java.lang.String getFtpPort();
    /**
     * <code>optional string ftp_port = 3;</code>
     *
     * <pre>
     * Ftp 端口
     * </pre>
     */
    com.google.protobuf.ByteString
        getFtpPortBytes();

    // optional string ftp_user_name = 4;
    /**
     * <code>optional string ftp_user_name = 4;</code>
     *
     * <pre>
     * Ftp 用户名
     * </pre>
     */
    boolean hasFtpUserName();
    /**
     * <code>optional string ftp_user_name = 4;</code>
     *
     * <pre>
     * Ftp 用户名
     * </pre>
     */
    java.lang.String getFtpUserName();
    /**
     * <code>optional string ftp_user_name = 4;</code>
     *
     * <pre>
     * Ftp 用户名
     * </pre>
     */
    com.google.protobuf.ByteString
        getFtpUserNameBytes();

    // optional string ftp_passwd = 5;
    /**
     * <code>optional string ftp_passwd = 5;</code>
     *
     * <pre>
     * Ftp 密码
     * </pre>
     */
    boolean hasFtpPasswd();
    /**
     * <code>optional string ftp_passwd = 5;</code>
     *
     * <pre>
     * Ftp 密码
     * </pre>
     */
    java.lang.String getFtpPasswd();
    /**
     * <code>optional string ftp_passwd = 5;</code>
     *
     * <pre>
     * Ftp 密码
     * </pre>
     */
    com.google.protobuf.ByteString
        getFtpPasswdBytes();

    // optional string ftp_root_url = 6;
    /**
     * <code>optional string ftp_root_url = 6;</code>
     *
     * <pre>
     * Ftp 根目录
     * </pre>
     */
    boolean hasFtpRootUrl();
    /**
     * <code>optional string ftp_root_url = 6;</code>
     *
     * <pre>
     * Ftp 根目录
     * </pre>
     */
    java.lang.String getFtpRootUrl();
    /**
     * <code>optional string ftp_root_url = 6;</code>
     *
     * <pre>
     * Ftp 根目录
     * </pre>
     */
    com.google.protobuf.ByteString
        getFtpRootUrlBytes();

    // optional int32 ServiceTime = 7;
    /**
     * <code>optional int32 ServiceTime = 7;</code>
     *
     * <pre>
     * ntp更新时间间隔，单位：秒
     * </pre>
     */
    boolean hasServiceTime();
    /**
     * <code>optional int32 ServiceTime = 7;</code>
     *
     * <pre>
     * ntp更新时间间隔，单位：秒
     * </pre>
     */
    int getServiceTime();

    // optional int32 CaptureTime = 8;
    /**
     * <code>optional int32 CaptureTime = 8;</code>
     *
     * <pre>
     * 采集器采集数据的时间间隔，单位：秒
     * </pre>
     */
    boolean hasCaptureTime();
    /**
     * <code>optional int32 CaptureTime = 8;</code>
     *
     * <pre>
     * 采集器采集数据的时间间隔，单位：秒
     * </pre>
     */
    int getCaptureTime();

    // optional string working_time = 9;
    /**
     * <code>optional string working_time = 9;</code>
     *
     * <pre>
     * 工作时间,私有使用
     * </pre>
     */
    boolean hasWorkingTime();
    /**
     * <code>optional string working_time = 9;</code>
     *
     * <pre>
     * 工作时间,私有使用
     * </pre>
     */
    java.lang.String getWorkingTime();
    /**
     * <code>optional string working_time = 9;</code>
     *
     * <pre>
     * 工作时间,私有使用
     * </pre>
     */
    com.google.protobuf.ByteString
        getWorkingTimeBytes();

    // optional bool payment_account_enable = 10;
    /**
     * <code>optional bool payment_account_enable = 10;</code>
     *
     * <pre>
     * true:启用付款账户;false:停用付款账户
     * </pre>
     */
    boolean hasPaymentAccountEnable();
    /**
     * <code>optional bool payment_account_enable = 10;</code>
     *
     * <pre>
     * true:启用付款账户;false:停用付款账户
     * </pre>
     */
    boolean getPaymentAccountEnable();

    // optional string value1 = 11;
    /**
     * <code>optional string value1 = 11;</code>
     */
    boolean hasValue1();
    /**
     * <code>optional string value1 = 11;</code>
     */
    java.lang.String getValue1();
    /**
     * <code>optional string value1 = 11;</code>
     */
    com.google.protobuf.ByteString
        getValue1Bytes();

    // optional string value2 = 12;
    /**
     * <code>optional string value2 = 12;</code>
     */
    boolean hasValue2();
    /**
     * <code>optional string value2 = 12;</code>
     */
    java.lang.String getValue2();
    /**
     * <code>optional string value2 = 12;</code>
     */
    com.google.protobuf.ByteString
        getValue2Bytes();

    // optional string value3 = 13;
    /**
     * <code>optional string value3 = 13;</code>
     */
    boolean hasValue3();
    /**
     * <code>optional string value3 = 13;</code>
     */
    java.lang.String getValue3();
    /**
     * <code>optional string value3 = 13;</code>
     */
    com.google.protobuf.ByteString
        getValue3Bytes();

    // optional string value4 = 14;
    /**
     * <code>optional string value4 = 14;</code>
     */
    boolean hasValue4();
    /**
     * <code>optional string value4 = 14;</code>
     */
    java.lang.String getValue4();
    /**
     * <code>optional string value4 = 14;</code>
     */
    com.google.protobuf.ByteString
        getValue4Bytes();

    // optional string value5 = 15;
    /**
     * <code>optional string value5 = 15;</code>
     */
    boolean hasValue5();
    /**
     * <code>optional string value5 = 15;</code>
     */
    java.lang.String getValue5();
    /**
     * <code>optional string value5 = 15;</code>
     */
    com.google.protobuf.ByteString
        getValue5Bytes();

    // optional string value6 = 16;
    /**
     * <code>optional string value6 = 16;</code>
     */
    boolean hasValue6();
    /**
     * <code>optional string value6 = 16;</code>
     */
    java.lang.String getValue6();
    /**
     * <code>optional string value6 = 16;</code>
     */
    com.google.protobuf.ByteString
        getValue6Bytes();
  }
  /**
   * Protobuf type {@code biotech.osla.GlobalConfig}
   *
   * <pre>
   * 3代机-全局配置信息
   * </pre>
   */
  public static final class GlobalConfig extends
      com.google.protobuf.GeneratedMessageLite
      implements GlobalConfigOrBuilder {
    // Use GlobalConfig.newBuilder() to construct.
    private GlobalConfig(com.google.protobuf.GeneratedMessageLite.Builder builder) {
      super(builder);

    }
    private GlobalConfig(boolean noInit) {}

    private static final GlobalConfig defaultInstance;
    public static GlobalConfig getDefaultInstance() {
      return defaultInstance;
    }

    public GlobalConfig getDefaultInstanceForType() {
      return defaultInstance;
    }

    private GlobalConfig(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              accountDepositLimit_ = input.readInt32();
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              ftpHost_ = input.readBytes();
              break;
            }
            case 26: {
              bitField0_ |= 0x00000004;
              ftpPort_ = input.readBytes();
              break;
            }
            case 34: {
              bitField0_ |= 0x00000008;
              ftpUserName_ = input.readBytes();
              break;
            }
            case 42: {
              bitField0_ |= 0x00000010;
              ftpPasswd_ = input.readBytes();
              break;
            }
            case 50: {
              bitField0_ |= 0x00000020;
              ftpRootUrl_ = input.readBytes();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000040;
              serviceTime_ = input.readInt32();
              break;
            }
            case 64: {
              bitField0_ |= 0x00000080;
              captureTime_ = input.readInt32();
              break;
            }
            case 74: {
              bitField0_ |= 0x00000100;
              workingTime_ = input.readBytes();
              break;
            }
            case 80: {
              bitField0_ |= 0x00000200;
              paymentAccountEnable_ = input.readBool();
              break;
            }
            case 90: {
              bitField0_ |= 0x00000400;
              value1_ = input.readBytes();
              break;
            }
            case 98: {
              bitField0_ |= 0x00000800;
              value2_ = input.readBytes();
              break;
            }
            case 106: {
              bitField0_ |= 0x00001000;
              value3_ = input.readBytes();
              break;
            }
            case 114: {
              bitField0_ |= 0x00002000;
              value4_ = input.readBytes();
              break;
            }
            case 122: {
              bitField0_ |= 0x00004000;
              value5_ = input.readBytes();
              break;
            }
            case 130: {
              bitField0_ |= 0x00008000;
              value6_ = input.readBytes();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static com.google.protobuf.Parser<GlobalConfig> PARSER =
        new com.google.protobuf.AbstractParser<GlobalConfig>() {
      public GlobalConfig parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new GlobalConfig(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<GlobalConfig> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required int32 account_deposit_limit = 1;
    public static final int ACCOUNT_DEPOSIT_LIMIT_FIELD_NUMBER = 1;
    private int accountDepositLimit_;
    /**
     * <code>required int32 account_deposit_limit = 1;</code>
     *
     * <pre>
     * 账户余额提醒线
     * </pre>
     */
    public boolean hasAccountDepositLimit() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int32 account_deposit_limit = 1;</code>
     *
     * <pre>
     * 账户余额提醒线
     * </pre>
     */
    public int getAccountDepositLimit() {
      return accountDepositLimit_;
    }

    // optional string ftp_host = 2;
    public static final int FTP_HOST_FIELD_NUMBER = 2;
    private java.lang.Object ftpHost_;
    /**
     * <code>optional string ftp_host = 2;</code>
     *
     * <pre>
     *required int32 valid_training_check_in_time = 2; // 培训报名有效时间
     *optional string client_software_update_url = 4;  // 客户端软件更新地址
     *optional int32 client_software_auto_update = 5;  // 客户端软件是否自动更新
     * </pre>
     */
    public boolean hasFtpHost() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional string ftp_host = 2;</code>
     *
     * <pre>
     *required int32 valid_training_check_in_time = 2; // 培训报名有效时间
     *optional string client_software_update_url = 4;  // 客户端软件更新地址
     *optional int32 client_software_auto_update = 5;  // 客户端软件是否自动更新
     * </pre>
     */
    public java.lang.String getFtpHost() {
      java.lang.Object ref = ftpHost_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          ftpHost_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string ftp_host = 2;</code>
     *
     * <pre>
     *required int32 valid_training_check_in_time = 2; // 培训报名有效时间
     *optional string client_software_update_url = 4;  // 客户端软件更新地址
     *optional int32 client_software_auto_update = 5;  // 客户端软件是否自动更新
     * </pre>
     */
    public com.google.protobuf.ByteString
        getFtpHostBytes() {
      java.lang.Object ref = ftpHost_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        ftpHost_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional string ftp_port = 3;
    public static final int FTP_PORT_FIELD_NUMBER = 3;
    private java.lang.Object ftpPort_;
    /**
     * <code>optional string ftp_port = 3;</code>
     *
     * <pre>
     * Ftp 端口
     * </pre>
     */
    public boolean hasFtpPort() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional string ftp_port = 3;</code>
     *
     * <pre>
     * Ftp 端口
     * </pre>
     */
    public java.lang.String getFtpPort() {
      java.lang.Object ref = ftpPort_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          ftpPort_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string ftp_port = 3;</code>
     *
     * <pre>
     * Ftp 端口
     * </pre>
     */
    public com.google.protobuf.ByteString
        getFtpPortBytes() {
      java.lang.Object ref = ftpPort_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        ftpPort_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional string ftp_user_name = 4;
    public static final int FTP_USER_NAME_FIELD_NUMBER = 4;
    private java.lang.Object ftpUserName_;
    /**
     * <code>optional string ftp_user_name = 4;</code>
     *
     * <pre>
     * Ftp 用户名
     * </pre>
     */
    public boolean hasFtpUserName() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional string ftp_user_name = 4;</code>
     *
     * <pre>
     * Ftp 用户名
     * </pre>
     */
    public java.lang.String getFtpUserName() {
      java.lang.Object ref = ftpUserName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          ftpUserName_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string ftp_user_name = 4;</code>
     *
     * <pre>
     * Ftp 用户名
     * </pre>
     */
    public com.google.protobuf.ByteString
        getFtpUserNameBytes() {
      java.lang.Object ref = ftpUserName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        ftpUserName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional string ftp_passwd = 5;
    public static final int FTP_PASSWD_FIELD_NUMBER = 5;
    private java.lang.Object ftpPasswd_;
    /**
     * <code>optional string ftp_passwd = 5;</code>
     *
     * <pre>
     * Ftp 密码
     * </pre>
     */
    public boolean hasFtpPasswd() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional string ftp_passwd = 5;</code>
     *
     * <pre>
     * Ftp 密码
     * </pre>
     */
    public java.lang.String getFtpPasswd() {
      java.lang.Object ref = ftpPasswd_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          ftpPasswd_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string ftp_passwd = 5;</code>
     *
     * <pre>
     * Ftp 密码
     * </pre>
     */
    public com.google.protobuf.ByteString
        getFtpPasswdBytes() {
      java.lang.Object ref = ftpPasswd_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        ftpPasswd_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional string ftp_root_url = 6;
    public static final int FTP_ROOT_URL_FIELD_NUMBER = 6;
    private java.lang.Object ftpRootUrl_;
    /**
     * <code>optional string ftp_root_url = 6;</code>
     *
     * <pre>
     * Ftp 根目录
     * </pre>
     */
    public boolean hasFtpRootUrl() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional string ftp_root_url = 6;</code>
     *
     * <pre>
     * Ftp 根目录
     * </pre>
     */
    public java.lang.String getFtpRootUrl() {
      java.lang.Object ref = ftpRootUrl_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          ftpRootUrl_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string ftp_root_url = 6;</code>
     *
     * <pre>
     * Ftp 根目录
     * </pre>
     */
    public com.google.protobuf.ByteString
        getFtpRootUrlBytes() {
      java.lang.Object ref = ftpRootUrl_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        ftpRootUrl_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional int32 ServiceTime = 7;
    public static final int SERVICETIME_FIELD_NUMBER = 7;
    private int serviceTime_;
    /**
     * <code>optional int32 ServiceTime = 7;</code>
     *
     * <pre>
     * ntp更新时间间隔，单位：秒
     * </pre>
     */
    public boolean hasServiceTime() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional int32 ServiceTime = 7;</code>
     *
     * <pre>
     * ntp更新时间间隔，单位：秒
     * </pre>
     */
    public int getServiceTime() {
      return serviceTime_;
    }

    // optional int32 CaptureTime = 8;
    public static final int CAPTURETIME_FIELD_NUMBER = 8;
    private int captureTime_;
    /**
     * <code>optional int32 CaptureTime = 8;</code>
     *
     * <pre>
     * 采集器采集数据的时间间隔，单位：秒
     * </pre>
     */
    public boolean hasCaptureTime() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional int32 CaptureTime = 8;</code>
     *
     * <pre>
     * 采集器采集数据的时间间隔，单位：秒
     * </pre>
     */
    public int getCaptureTime() {
      return captureTime_;
    }

    // optional string working_time = 9;
    public static final int WORKING_TIME_FIELD_NUMBER = 9;
    private java.lang.Object workingTime_;
    /**
     * <code>optional string working_time = 9;</code>
     *
     * <pre>
     * 工作时间,私有使用
     * </pre>
     */
    public boolean hasWorkingTime() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional string working_time = 9;</code>
     *
     * <pre>
     * 工作时间,私有使用
     * </pre>
     */
    public java.lang.String getWorkingTime() {
      java.lang.Object ref = workingTime_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          workingTime_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string working_time = 9;</code>
     *
     * <pre>
     * 工作时间,私有使用
     * </pre>
     */
    public com.google.protobuf.ByteString
        getWorkingTimeBytes() {
      java.lang.Object ref = workingTime_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        workingTime_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional bool payment_account_enable = 10;
    public static final int PAYMENT_ACCOUNT_ENABLE_FIELD_NUMBER = 10;
    private boolean paymentAccountEnable_;
    /**
     * <code>optional bool payment_account_enable = 10;</code>
     *
     * <pre>
     * true:启用付款账户;false:停用付款账户
     * </pre>
     */
    public boolean hasPaymentAccountEnable() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>optional bool payment_account_enable = 10;</code>
     *
     * <pre>
     * true:启用付款账户;false:停用付款账户
     * </pre>
     */
    public boolean getPaymentAccountEnable() {
      return paymentAccountEnable_;
    }

    // optional string value1 = 11;
    public static final int VALUE1_FIELD_NUMBER = 11;
    private java.lang.Object value1_;
    /**
     * <code>optional string value1 = 11;</code>
     */
    public boolean hasValue1() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    /**
     * <code>optional string value1 = 11;</code>
     */
    public java.lang.String getValue1() {
      java.lang.Object ref = value1_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          value1_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string value1 = 11;</code>
     */
    public com.google.protobuf.ByteString
        getValue1Bytes() {
      java.lang.Object ref = value1_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        value1_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional string value2 = 12;
    public static final int VALUE2_FIELD_NUMBER = 12;
    private java.lang.Object value2_;
    /**
     * <code>optional string value2 = 12;</code>
     */
    public boolean hasValue2() {
      return ((bitField0_ & 0x00000800) == 0x00000800);
    }
    /**
     * <code>optional string value2 = 12;</code>
     */
    public java.lang.String getValue2() {
      java.lang.Object ref = value2_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          value2_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string value2 = 12;</code>
     */
    public com.google.protobuf.ByteString
        getValue2Bytes() {
      java.lang.Object ref = value2_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        value2_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional string value3 = 13;
    public static final int VALUE3_FIELD_NUMBER = 13;
    private java.lang.Object value3_;
    /**
     * <code>optional string value3 = 13;</code>
     */
    public boolean hasValue3() {
      return ((bitField0_ & 0x00001000) == 0x00001000);
    }
    /**
     * <code>optional string value3 = 13;</code>
     */
    public java.lang.String getValue3() {
      java.lang.Object ref = value3_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          value3_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string value3 = 13;</code>
     */
    public com.google.protobuf.ByteString
        getValue3Bytes() {
      java.lang.Object ref = value3_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        value3_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional string value4 = 14;
    public static final int VALUE4_FIELD_NUMBER = 14;
    private java.lang.Object value4_;
    /**
     * <code>optional string value4 = 14;</code>
     */
    public boolean hasValue4() {
      return ((bitField0_ & 0x00002000) == 0x00002000);
    }
    /**
     * <code>optional string value4 = 14;</code>
     */
    public java.lang.String getValue4() {
      java.lang.Object ref = value4_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          value4_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string value4 = 14;</code>
     */
    public com.google.protobuf.ByteString
        getValue4Bytes() {
      java.lang.Object ref = value4_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        value4_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional string value5 = 15;
    public static final int VALUE5_FIELD_NUMBER = 15;
    private java.lang.Object value5_;
    /**
     * <code>optional string value5 = 15;</code>
     */
    public boolean hasValue5() {
      return ((bitField0_ & 0x00004000) == 0x00004000);
    }
    /**
     * <code>optional string value5 = 15;</code>
     */
    public java.lang.String getValue5() {
      java.lang.Object ref = value5_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          value5_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string value5 = 15;</code>
     */
    public com.google.protobuf.ByteString
        getValue5Bytes() {
      java.lang.Object ref = value5_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        value5_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional string value6 = 16;
    public static final int VALUE6_FIELD_NUMBER = 16;
    private java.lang.Object value6_;
    /**
     * <code>optional string value6 = 16;</code>
     */
    public boolean hasValue6() {
      return ((bitField0_ & 0x00008000) == 0x00008000);
    }
    /**
     * <code>optional string value6 = 16;</code>
     */
    public java.lang.String getValue6() {
      java.lang.Object ref = value6_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          value6_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string value6 = 16;</code>
     */
    public com.google.protobuf.ByteString
        getValue6Bytes() {
      java.lang.Object ref = value6_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        value6_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private void initFields() {
      accountDepositLimit_ = 0;
      ftpHost_ = "";
      ftpPort_ = "";
      ftpUserName_ = "";
      ftpPasswd_ = "";
      ftpRootUrl_ = "";
      serviceTime_ = 0;
      captureTime_ = 0;
      workingTime_ = "";
      paymentAccountEnable_ = false;
      value1_ = "";
      value2_ = "";
      value3_ = "";
      value4_ = "";
      value5_ = "";
      value6_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasAccountDepositLimit()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, accountDepositLimit_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getFtpHostBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBytes(3, getFtpPortBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeBytes(4, getFtpUserNameBytes());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeBytes(5, getFtpPasswdBytes());
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeBytes(6, getFtpRootUrlBytes());
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeInt32(7, serviceTime_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeInt32(8, captureTime_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeBytes(9, getWorkingTimeBytes());
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeBool(10, paymentAccountEnable_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeBytes(11, getValue1Bytes());
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        output.writeBytes(12, getValue2Bytes());
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        output.writeBytes(13, getValue3Bytes());
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        output.writeBytes(14, getValue4Bytes());
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        output.writeBytes(15, getValue5Bytes());
      }
      if (((bitField0_ & 0x00008000) == 0x00008000)) {
        output.writeBytes(16, getValue6Bytes());
      }
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, accountDepositLimit_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getFtpHostBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, getFtpPortBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(4, getFtpUserNameBytes());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(5, getFtpPasswdBytes());
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(6, getFtpRootUrlBytes());
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(7, serviceTime_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(8, captureTime_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(9, getWorkingTimeBytes());
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(10, paymentAccountEnable_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(11, getValue1Bytes());
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(12, getValue2Bytes());
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(13, getValue3Bytes());
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(14, getValue4Bytes());
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(15, getValue5Bytes());
      }
      if (((bitField0_ & 0x00008000) == 0x00008000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(16, getValue6Bytes());
      }
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.slark.pengder.protocol.MessageProtos.GlobalConfig parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.slark.pengder.protocol.MessageProtos.GlobalConfig parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.slark.pengder.protocol.MessageProtos.GlobalConfig parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.slark.pengder.protocol.MessageProtos.GlobalConfig parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.slark.pengder.protocol.MessageProtos.GlobalConfig parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.slark.pengder.protocol.MessageProtos.GlobalConfig parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.slark.pengder.protocol.MessageProtos.GlobalConfig parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.slark.pengder.protocol.MessageProtos.GlobalConfig parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.slark.pengder.protocol.MessageProtos.GlobalConfig parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.slark.pengder.protocol.MessageProtos.GlobalConfig parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.slark.pengder.protocol.MessageProtos.GlobalConfig prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    /**
     * Protobuf type {@code biotech.osla.GlobalConfig}
     *
     * <pre>
     * 3代机-全局配置信息
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.slark.pengder.protocol.MessageProtos.GlobalConfig, Builder>
        implements com.slark.pengder.protocol.MessageProtos.GlobalConfigOrBuilder {
      // Construct using com.slark.pengder.protocol.MessageProtos.GlobalConfig.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        accountDepositLimit_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        ftpHost_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        ftpPort_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        ftpUserName_ = "";
        bitField0_ = (bitField0_ & ~0x00000008);
        ftpPasswd_ = "";
        bitField0_ = (bitField0_ & ~0x00000010);
        ftpRootUrl_ = "";
        bitField0_ = (bitField0_ & ~0x00000020);
        serviceTime_ = 0;
        bitField0_ = (bitField0_ & ~0x00000040);
        captureTime_ = 0;
        bitField0_ = (bitField0_ & ~0x00000080);
        workingTime_ = "";
        bitField0_ = (bitField0_ & ~0x00000100);
        paymentAccountEnable_ = false;
        bitField0_ = (bitField0_ & ~0x00000200);
        value1_ = "";
        bitField0_ = (bitField0_ & ~0x00000400);
        value2_ = "";
        bitField0_ = (bitField0_ & ~0x00000800);
        value3_ = "";
        bitField0_ = (bitField0_ & ~0x00001000);
        value4_ = "";
        bitField0_ = (bitField0_ & ~0x00002000);
        value5_ = "";
        bitField0_ = (bitField0_ & ~0x00004000);
        value6_ = "";
        bitField0_ = (bitField0_ & ~0x00008000);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.slark.pengder.protocol.MessageProtos.GlobalConfig getDefaultInstanceForType() {
        return com.slark.pengder.protocol.MessageProtos.GlobalConfig.getDefaultInstance();
      }

      public com.slark.pengder.protocol.MessageProtos.GlobalConfig build() {
        com.slark.pengder.protocol.MessageProtos.GlobalConfig result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.slark.pengder.protocol.MessageProtos.GlobalConfig buildPartial() {
        com.slark.pengder.protocol.MessageProtos.GlobalConfig result = new com.slark.pengder.protocol.MessageProtos.GlobalConfig(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.accountDepositLimit_ = accountDepositLimit_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.ftpHost_ = ftpHost_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.ftpPort_ = ftpPort_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.ftpUserName_ = ftpUserName_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.ftpPasswd_ = ftpPasswd_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.ftpRootUrl_ = ftpRootUrl_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.serviceTime_ = serviceTime_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.captureTime_ = captureTime_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        result.workingTime_ = workingTime_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000200;
        }
        result.paymentAccountEnable_ = paymentAccountEnable_;
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000400;
        }
        result.value1_ = value1_;
        if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
          to_bitField0_ |= 0x00000800;
        }
        result.value2_ = value2_;
        if (((from_bitField0_ & 0x00001000) == 0x00001000)) {
          to_bitField0_ |= 0x00001000;
        }
        result.value3_ = value3_;
        if (((from_bitField0_ & 0x00002000) == 0x00002000)) {
          to_bitField0_ |= 0x00002000;
        }
        result.value4_ = value4_;
        if (((from_bitField0_ & 0x00004000) == 0x00004000)) {
          to_bitField0_ |= 0x00004000;
        }
        result.value5_ = value5_;
        if (((from_bitField0_ & 0x00008000) == 0x00008000)) {
          to_bitField0_ |= 0x00008000;
        }
        result.value6_ = value6_;
        result.bitField0_ = to_bitField0_;
        return result;
      }

      public Builder mergeFrom(com.slark.pengder.protocol.MessageProtos.GlobalConfig other) {
        if (other == com.slark.pengder.protocol.MessageProtos.GlobalConfig.getDefaultInstance()) return this;
        if (other.hasAccountDepositLimit()) {
          setAccountDepositLimit(other.getAccountDepositLimit());
        }
        if (other.hasFtpHost()) {
          bitField0_ |= 0x00000002;
          ftpHost_ = other.ftpHost_;
          
        }
        if (other.hasFtpPort()) {
          bitField0_ |= 0x00000004;
          ftpPort_ = other.ftpPort_;
          
        }
        if (other.hasFtpUserName()) {
          bitField0_ |= 0x00000008;
          ftpUserName_ = other.ftpUserName_;
          
        }
        if (other.hasFtpPasswd()) {
          bitField0_ |= 0x00000010;
          ftpPasswd_ = other.ftpPasswd_;
          
        }
        if (other.hasFtpRootUrl()) {
          bitField0_ |= 0x00000020;
          ftpRootUrl_ = other.ftpRootUrl_;
          
        }
        if (other.hasServiceTime()) {
          setServiceTime(other.getServiceTime());
        }
        if (other.hasCaptureTime()) {
          setCaptureTime(other.getCaptureTime());
        }
        if (other.hasWorkingTime()) {
          bitField0_ |= 0x00000100;
          workingTime_ = other.workingTime_;
          
        }
        if (other.hasPaymentAccountEnable()) {
          setPaymentAccountEnable(other.getPaymentAccountEnable());
        }
        if (other.hasValue1()) {
          bitField0_ |= 0x00000400;
          value1_ = other.value1_;
          
        }
        if (other.hasValue2()) {
          bitField0_ |= 0x00000800;
          value2_ = other.value2_;
          
        }
        if (other.hasValue3()) {
          bitField0_ |= 0x00001000;
          value3_ = other.value3_;
          
        }
        if (other.hasValue4()) {
          bitField0_ |= 0x00002000;
          value4_ = other.value4_;
          
        }
        if (other.hasValue5()) {
          bitField0_ |= 0x00004000;
          value5_ = other.value5_;
          
        }
        if (other.hasValue6()) {
          bitField0_ |= 0x00008000;
          value6_ = other.value6_;
          
        }
        return this;
      }

      public final boolean isInitialized() {
        if (!hasAccountDepositLimit()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.slark.pengder.protocol.MessageProtos.GlobalConfig parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.slark.pengder.protocol.MessageProtos.GlobalConfig) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required int32 account_deposit_limit = 1;
      private int accountDepositLimit_ ;
      /**
       * <code>required int32 account_deposit_limit = 1;</code>
       *
       * <pre>
       * 账户余额提醒线
       * </pre>
       */
      public boolean hasAccountDepositLimit() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int32 account_deposit_limit = 1;</code>
       *
       * <pre>
       * 账户余额提醒线
       * </pre>
       */
      public int getAccountDepositLimit() {
        return accountDepositLimit_;
      }
      /**
       * <code>required int32 account_deposit_limit = 1;</code>
       *
       * <pre>
       * 账户余额提醒线
       * </pre>
       */
      public Builder setAccountDepositLimit(int value) {
        bitField0_ |= 0x00000001;
        accountDepositLimit_ = value;
        
        return this;
      }
      /**
       * <code>required int32 account_deposit_limit = 1;</code>
       *
       * <pre>
       * 账户余额提醒线
       * </pre>
       */
      public Builder clearAccountDepositLimit() {
        bitField0_ = (bitField0_ & ~0x00000001);
        accountDepositLimit_ = 0;
        
        return this;
      }

      // optional string ftp_host = 2;
      private java.lang.Object ftpHost_ = "";
      /**
       * <code>optional string ftp_host = 2;</code>
       *
       * <pre>
       *required int32 valid_training_check_in_time = 2; // 培训报名有效时间
       *optional string client_software_update_url = 4;  // 客户端软件更新地址
       *optional int32 client_software_auto_update = 5;  // 客户端软件是否自动更新
       * </pre>
       */
      public boolean hasFtpHost() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional string ftp_host = 2;</code>
       *
       * <pre>
       *required int32 valid_training_check_in_time = 2; // 培训报名有效时间
       *optional string client_software_update_url = 4;  // 客户端软件更新地址
       *optional int32 client_software_auto_update = 5;  // 客户端软件是否自动更新
       * </pre>
       */
      public java.lang.String getFtpHost() {
        java.lang.Object ref = ftpHost_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          ftpHost_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string ftp_host = 2;</code>
       *
       * <pre>
       *required int32 valid_training_check_in_time = 2; // 培训报名有效时间
       *optional string client_software_update_url = 4;  // 客户端软件更新地址
       *optional int32 client_software_auto_update = 5;  // 客户端软件是否自动更新
       * </pre>
       */
      public com.google.protobuf.ByteString
          getFtpHostBytes() {
        java.lang.Object ref = ftpHost_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          ftpHost_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string ftp_host = 2;</code>
       *
       * <pre>
       *required int32 valid_training_check_in_time = 2; // 培训报名有效时间
       *optional string client_software_update_url = 4;  // 客户端软件更新地址
       *optional int32 client_software_auto_update = 5;  // 客户端软件是否自动更新
       * </pre>
       */
      public Builder setFtpHost(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        ftpHost_ = value;
        
        return this;
      }
      /**
       * <code>optional string ftp_host = 2;</code>
       *
       * <pre>
       *required int32 valid_training_check_in_time = 2; // 培训报名有效时间
       *optional string client_software_update_url = 4;  // 客户端软件更新地址
       *optional int32 client_software_auto_update = 5;  // 客户端软件是否自动更新
       * </pre>
       */
      public Builder clearFtpHost() {
        bitField0_ = (bitField0_ & ~0x00000002);
        ftpHost_ = getDefaultInstance().getFtpHost();
        
        return this;
      }
      /**
       * <code>optional string ftp_host = 2;</code>
       *
       * <pre>
       *required int32 valid_training_check_in_time = 2; // 培训报名有效时间
       *optional string client_software_update_url = 4;  // 客户端软件更新地址
       *optional int32 client_software_auto_update = 5;  // 客户端软件是否自动更新
       * </pre>
       */
      public Builder setFtpHostBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        ftpHost_ = value;
        
        return this;
      }

      // optional string ftp_port = 3;
      private java.lang.Object ftpPort_ = "";
      /**
       * <code>optional string ftp_port = 3;</code>
       *
       * <pre>
       * Ftp 端口
       * </pre>
       */
      public boolean hasFtpPort() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional string ftp_port = 3;</code>
       *
       * <pre>
       * Ftp 端口
       * </pre>
       */
      public java.lang.String getFtpPort() {
        java.lang.Object ref = ftpPort_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          ftpPort_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string ftp_port = 3;</code>
       *
       * <pre>
       * Ftp 端口
       * </pre>
       */
      public com.google.protobuf.ByteString
          getFtpPortBytes() {
        java.lang.Object ref = ftpPort_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          ftpPort_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string ftp_port = 3;</code>
       *
       * <pre>
       * Ftp 端口
       * </pre>
       */
      public Builder setFtpPort(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        ftpPort_ = value;
        
        return this;
      }
      /**
       * <code>optional string ftp_port = 3;</code>
       *
       * <pre>
       * Ftp 端口
       * </pre>
       */
      public Builder clearFtpPort() {
        bitField0_ = (bitField0_ & ~0x00000004);
        ftpPort_ = getDefaultInstance().getFtpPort();
        
        return this;
      }
      /**
       * <code>optional string ftp_port = 3;</code>
       *
       * <pre>
       * Ftp 端口
       * </pre>
       */
      public Builder setFtpPortBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        ftpPort_ = value;
        
        return this;
      }

      // optional string ftp_user_name = 4;
      private java.lang.Object ftpUserName_ = "";
      /**
       * <code>optional string ftp_user_name = 4;</code>
       *
       * <pre>
       * Ftp 用户名
       * </pre>
       */
      public boolean hasFtpUserName() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional string ftp_user_name = 4;</code>
       *
       * <pre>
       * Ftp 用户名
       * </pre>
       */
      public java.lang.String getFtpUserName() {
        java.lang.Object ref = ftpUserName_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          ftpUserName_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string ftp_user_name = 4;</code>
       *
       * <pre>
       * Ftp 用户名
       * </pre>
       */
      public com.google.protobuf.ByteString
          getFtpUserNameBytes() {
        java.lang.Object ref = ftpUserName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          ftpUserName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string ftp_user_name = 4;</code>
       *
       * <pre>
       * Ftp 用户名
       * </pre>
       */
      public Builder setFtpUserName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        ftpUserName_ = value;
        
        return this;
      }
      /**
       * <code>optional string ftp_user_name = 4;</code>
       *
       * <pre>
       * Ftp 用户名
       * </pre>
       */
      public Builder clearFtpUserName() {
        bitField0_ = (bitField0_ & ~0x00000008);
        ftpUserName_ = getDefaultInstance().getFtpUserName();
        
        return this;
      }
      /**
       * <code>optional string ftp_user_name = 4;</code>
       *
       * <pre>
       * Ftp 用户名
       * </pre>
       */
      public Builder setFtpUserNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        ftpUserName_ = value;
        
        return this;
      }

      // optional string ftp_passwd = 5;
      private java.lang.Object ftpPasswd_ = "";
      /**
       * <code>optional string ftp_passwd = 5;</code>
       *
       * <pre>
       * Ftp 密码
       * </pre>
       */
      public boolean hasFtpPasswd() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional string ftp_passwd = 5;</code>
       *
       * <pre>
       * Ftp 密码
       * </pre>
       */
      public java.lang.String getFtpPasswd() {
        java.lang.Object ref = ftpPasswd_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          ftpPasswd_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string ftp_passwd = 5;</code>
       *
       * <pre>
       * Ftp 密码
       * </pre>
       */
      public com.google.protobuf.ByteString
          getFtpPasswdBytes() {
        java.lang.Object ref = ftpPasswd_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          ftpPasswd_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string ftp_passwd = 5;</code>
       *
       * <pre>
       * Ftp 密码
       * </pre>
       */
      public Builder setFtpPasswd(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
        ftpPasswd_ = value;
        
        return this;
      }
      /**
       * <code>optional string ftp_passwd = 5;</code>
       *
       * <pre>
       * Ftp 密码
       * </pre>
       */
      public Builder clearFtpPasswd() {
        bitField0_ = (bitField0_ & ~0x00000010);
        ftpPasswd_ = getDefaultInstance().getFtpPasswd();
        
        return this;
      }
      /**
       * <code>optional string ftp_passwd = 5;</code>
       *
       * <pre>
       * Ftp 密码
       * </pre>
       */
      public Builder setFtpPasswdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
        ftpPasswd_ = value;
        
        return this;
      }

      // optional string ftp_root_url = 6;
      private java.lang.Object ftpRootUrl_ = "";
      /**
       * <code>optional string ftp_root_url = 6;</code>
       *
       * <pre>
       * Ftp 根目录
       * </pre>
       */
      public boolean hasFtpRootUrl() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional string ftp_root_url = 6;</code>
       *
       * <pre>
       * Ftp 根目录
       * </pre>
       */
      public java.lang.String getFtpRootUrl() {
        java.lang.Object ref = ftpRootUrl_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          ftpRootUrl_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string ftp_root_url = 6;</code>
       *
       * <pre>
       * Ftp 根目录
       * </pre>
       */
      public com.google.protobuf.ByteString
          getFtpRootUrlBytes() {
        java.lang.Object ref = ftpRootUrl_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          ftpRootUrl_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string ftp_root_url = 6;</code>
       *
       * <pre>
       * Ftp 根目录
       * </pre>
       */
      public Builder setFtpRootUrl(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000020;
        ftpRootUrl_ = value;
        
        return this;
      }
      /**
       * <code>optional string ftp_root_url = 6;</code>
       *
       * <pre>
       * Ftp 根目录
       * </pre>
       */
      public Builder clearFtpRootUrl() {
        bitField0_ = (bitField0_ & ~0x00000020);
        ftpRootUrl_ = getDefaultInstance().getFtpRootUrl();
        
        return this;
      }
      /**
       * <code>optional string ftp_root_url = 6;</code>
       *
       * <pre>
       * Ftp 根目录
       * </pre>
       */
      public Builder setFtpRootUrlBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000020;
        ftpRootUrl_ = value;
        
        return this;
      }

      // optional int32 ServiceTime = 7;
      private int serviceTime_ ;
      /**
       * <code>optional int32 ServiceTime = 7;</code>
       *
       * <pre>
       * ntp更新时间间隔，单位：秒
       * </pre>
       */
      public boolean hasServiceTime() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional int32 ServiceTime = 7;</code>
       *
       * <pre>
       * ntp更新时间间隔，单位：秒
       * </pre>
       */
      public int getServiceTime() {
        return serviceTime_;
      }
      /**
       * <code>optional int32 ServiceTime = 7;</code>
       *
       * <pre>
       * ntp更新时间间隔，单位：秒
       * </pre>
       */
      public Builder setServiceTime(int value) {
        bitField0_ |= 0x00000040;
        serviceTime_ = value;
        
        return this;
      }
      /**
       * <code>optional int32 ServiceTime = 7;</code>
       *
       * <pre>
       * ntp更新时间间隔，单位：秒
       * </pre>
       */
      public Builder clearServiceTime() {
        bitField0_ = (bitField0_ & ~0x00000040);
        serviceTime_ = 0;
        
        return this;
      }

      // optional int32 CaptureTime = 8;
      private int captureTime_ ;
      /**
       * <code>optional int32 CaptureTime = 8;</code>
       *
       * <pre>
       * 采集器采集数据的时间间隔，单位：秒
       * </pre>
       */
      public boolean hasCaptureTime() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional int32 CaptureTime = 8;</code>
       *
       * <pre>
       * 采集器采集数据的时间间隔，单位：秒
       * </pre>
       */
      public int getCaptureTime() {
        return captureTime_;
      }
      /**
       * <code>optional int32 CaptureTime = 8;</code>
       *
       * <pre>
       * 采集器采集数据的时间间隔，单位：秒
       * </pre>
       */
      public Builder setCaptureTime(int value) {
        bitField0_ |= 0x00000080;
        captureTime_ = value;
        
        return this;
      }
      /**
       * <code>optional int32 CaptureTime = 8;</code>
       *
       * <pre>
       * 采集器采集数据的时间间隔，单位：秒
       * </pre>
       */
      public Builder clearCaptureTime() {
        bitField0_ = (bitField0_ & ~0x00000080);
        captureTime_ = 0;
        
        return this;
      }

      // optional string working_time = 9;
      private java.lang.Object workingTime_ = "";
      /**
       * <code>optional string working_time = 9;</code>
       *
       * <pre>
       * 工作时间,私有使用
       * </pre>
       */
      public boolean hasWorkingTime() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional string working_time = 9;</code>
       *
       * <pre>
       * 工作时间,私有使用
       * </pre>
       */
      public java.lang.String getWorkingTime() {
        java.lang.Object ref = workingTime_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          workingTime_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string working_time = 9;</code>
       *
       * <pre>
       * 工作时间,私有使用
       * </pre>
       */
      public com.google.protobuf.ByteString
          getWorkingTimeBytes() {
        java.lang.Object ref = workingTime_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          workingTime_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string working_time = 9;</code>
       *
       * <pre>
       * 工作时间,私有使用
       * </pre>
       */
      public Builder setWorkingTime(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000100;
        workingTime_ = value;
        
        return this;
      }
      /**
       * <code>optional string working_time = 9;</code>
       *
       * <pre>
       * 工作时间,私有使用
       * </pre>
       */
      public Builder clearWorkingTime() {
        bitField0_ = (bitField0_ & ~0x00000100);
        workingTime_ = getDefaultInstance().getWorkingTime();
        
        return this;
      }
      /**
       * <code>optional string working_time = 9;</code>
       *
       * <pre>
       * 工作时间,私有使用
       * </pre>
       */
      public Builder setWorkingTimeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000100;
        workingTime_ = value;
        
        return this;
      }

      // optional bool payment_account_enable = 10;
      private boolean paymentAccountEnable_ ;
      /**
       * <code>optional bool payment_account_enable = 10;</code>
       *
       * <pre>
       * true:启用付款账户;false:停用付款账户
       * </pre>
       */
      public boolean hasPaymentAccountEnable() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional bool payment_account_enable = 10;</code>
       *
       * <pre>
       * true:启用付款账户;false:停用付款账户
       * </pre>
       */
      public boolean getPaymentAccountEnable() {
        return paymentAccountEnable_;
      }
      /**
       * <code>optional bool payment_account_enable = 10;</code>
       *
       * <pre>
       * true:启用付款账户;false:停用付款账户
       * </pre>
       */
      public Builder setPaymentAccountEnable(boolean value) {
        bitField0_ |= 0x00000200;
        paymentAccountEnable_ = value;
        
        return this;
      }
      /**
       * <code>optional bool payment_account_enable = 10;</code>
       *
       * <pre>
       * true:启用付款账户;false:停用付款账户
       * </pre>
       */
      public Builder clearPaymentAccountEnable() {
        bitField0_ = (bitField0_ & ~0x00000200);
        paymentAccountEnable_ = false;
        
        return this;
      }

      // optional string value1 = 11;
      private java.lang.Object value1_ = "";
      /**
       * <code>optional string value1 = 11;</code>
       */
      public boolean hasValue1() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>optional string value1 = 11;</code>
       */
      public java.lang.String getValue1() {
        java.lang.Object ref = value1_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          value1_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string value1 = 11;</code>
       */
      public com.google.protobuf.ByteString
          getValue1Bytes() {
        java.lang.Object ref = value1_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          value1_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string value1 = 11;</code>
       */
      public Builder setValue1(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000400;
        value1_ = value;
        
        return this;
      }
      /**
       * <code>optional string value1 = 11;</code>
       */
      public Builder clearValue1() {
        bitField0_ = (bitField0_ & ~0x00000400);
        value1_ = getDefaultInstance().getValue1();
        
        return this;
      }
      /**
       * <code>optional string value1 = 11;</code>
       */
      public Builder setValue1Bytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000400;
        value1_ = value;
        
        return this;
      }

      // optional string value2 = 12;
      private java.lang.Object value2_ = "";
      /**
       * <code>optional string value2 = 12;</code>
       */
      public boolean hasValue2() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      /**
       * <code>optional string value2 = 12;</code>
       */
      public java.lang.String getValue2() {
        java.lang.Object ref = value2_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          value2_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string value2 = 12;</code>
       */
      public com.google.protobuf.ByteString
          getValue2Bytes() {
        java.lang.Object ref = value2_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          value2_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string value2 = 12;</code>
       */
      public Builder setValue2(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000800;
        value2_ = value;
        
        return this;
      }
      /**
       * <code>optional string value2 = 12;</code>
       */
      public Builder clearValue2() {
        bitField0_ = (bitField0_ & ~0x00000800);
        value2_ = getDefaultInstance().getValue2();
        
        return this;
      }
      /**
       * <code>optional string value2 = 12;</code>
       */
      public Builder setValue2Bytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000800;
        value2_ = value;
        
        return this;
      }

      // optional string value3 = 13;
      private java.lang.Object value3_ = "";
      /**
       * <code>optional string value3 = 13;</code>
       */
      public boolean hasValue3() {
        return ((bitField0_ & 0x00001000) == 0x00001000);
      }
      /**
       * <code>optional string value3 = 13;</code>
       */
      public java.lang.String getValue3() {
        java.lang.Object ref = value3_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          value3_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string value3 = 13;</code>
       */
      public com.google.protobuf.ByteString
          getValue3Bytes() {
        java.lang.Object ref = value3_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          value3_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string value3 = 13;</code>
       */
      public Builder setValue3(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00001000;
        value3_ = value;
        
        return this;
      }
      /**
       * <code>optional string value3 = 13;</code>
       */
      public Builder clearValue3() {
        bitField0_ = (bitField0_ & ~0x00001000);
        value3_ = getDefaultInstance().getValue3();
        
        return this;
      }
      /**
       * <code>optional string value3 = 13;</code>
       */
      public Builder setValue3Bytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00001000;
        value3_ = value;
        
        return this;
      }

      // optional string value4 = 14;
      private java.lang.Object value4_ = "";
      /**
       * <code>optional string value4 = 14;</code>
       */
      public boolean hasValue4() {
        return ((bitField0_ & 0x00002000) == 0x00002000);
      }
      /**
       * <code>optional string value4 = 14;</code>
       */
      public java.lang.String getValue4() {
        java.lang.Object ref = value4_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          value4_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string value4 = 14;</code>
       */
      public com.google.protobuf.ByteString
          getValue4Bytes() {
        java.lang.Object ref = value4_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          value4_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string value4 = 14;</code>
       */
      public Builder setValue4(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00002000;
        value4_ = value;
        
        return this;
      }
      /**
       * <code>optional string value4 = 14;</code>
       */
      public Builder clearValue4() {
        bitField0_ = (bitField0_ & ~0x00002000);
        value4_ = getDefaultInstance().getValue4();
        
        return this;
      }
      /**
       * <code>optional string value4 = 14;</code>
       */
      public Builder setValue4Bytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00002000;
        value4_ = value;
        
        return this;
      }

      // optional string value5 = 15;
      private java.lang.Object value5_ = "";
      /**
       * <code>optional string value5 = 15;</code>
       */
      public boolean hasValue5() {
        return ((bitField0_ & 0x00004000) == 0x00004000);
      }
      /**
       * <code>optional string value5 = 15;</code>
       */
      public java.lang.String getValue5() {
        java.lang.Object ref = value5_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          value5_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string value5 = 15;</code>
       */
      public com.google.protobuf.ByteString
          getValue5Bytes() {
        java.lang.Object ref = value5_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          value5_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string value5 = 15;</code>
       */
      public Builder setValue5(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00004000;
        value5_ = value;
        
        return this;
      }
      /**
       * <code>optional string value5 = 15;</code>
       */
      public Builder clearValue5() {
        bitField0_ = (bitField0_ & ~0x00004000);
        value5_ = getDefaultInstance().getValue5();
        
        return this;
      }
      /**
       * <code>optional string value5 = 15;</code>
       */
      public Builder setValue5Bytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00004000;
        value5_ = value;
        
        return this;
      }

      // optional string value6 = 16;
      private java.lang.Object value6_ = "";
      /**
       * <code>optional string value6 = 16;</code>
       */
      public boolean hasValue6() {
        return ((bitField0_ & 0x00008000) == 0x00008000);
      }
      /**
       * <code>optional string value6 = 16;</code>
       */
      public java.lang.String getValue6() {
        java.lang.Object ref = value6_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          value6_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string value6 = 16;</code>
       */
      public com.google.protobuf.ByteString
          getValue6Bytes() {
        java.lang.Object ref = value6_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          value6_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string value6 = 16;</code>
       */
      public Builder setValue6(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00008000;
        value6_ = value;
        
        return this;
      }
      /**
       * <code>optional string value6 = 16;</code>
       */
      public Builder clearValue6() {
        bitField0_ = (bitField0_ & ~0x00008000);
        value6_ = getDefaultInstance().getValue6();
        
        return this;
      }
      /**
       * <code>optional string value6 = 16;</code>
       */
      public Builder setValue6Bytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00008000;
        value6_ = value;
        
        return this;
      }

      // @@protoc_insertion_point(builder_scope:biotech.osla.GlobalConfig)
    }

    static {
      defaultInstance = new GlobalConfig(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:biotech.osla.GlobalConfig)
  }

  public interface SessionOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {

    // required int64 id = 1;
    /**
     * <code>required int64 id = 1;</code>
     *
     * <pre>
     * 记录ID
     * </pre>
     */
    boolean hasId();
    /**
     * <code>required int64 id = 1;</code>
     *
     * <pre>
     * 记录ID
     * </pre>
     */
    long getId();

    // required int32 start_time = 2;
    /**
     * <code>required int32 start_time = 2;</code>
     *
     * <pre>
     * 开始时间
     * </pre>
     */
    boolean hasStartTime();
    /**
     * <code>required int32 start_time = 2;</code>
     *
     * <pre>
     * 开始时间
     * </pre>
     */
    int getStartTime();

    // required int32 end_time = 3;
    /**
     * <code>required int32 end_time = 3;</code>
     *
     * <pre>
     * 结束时间
     * </pre>
     */
    boolean hasEndTime();
    /**
     * <code>required int32 end_time = 3;</code>
     *
     * <pre>
     * 结束时间
     * </pre>
     */
    int getEndTime();

    // required int32 type = 4;
    /**
     * <code>required int32 type = 4;</code>
     *
     * <pre>
     * 使用类型
     * </pre>
     */
    boolean hasType();
    /**
     * <code>required int32 type = 4;</code>
     *
     * <pre>
     * 使用类型
     * </pre>
     */
    int getType();

    // required int32 user_id = 5;
    /**
     * <code>required int32 user_id = 5;</code>
     *
     * <pre>
     * 用户ID
     * </pre>
     */
    boolean hasUserId();
    /**
     * <code>required int32 user_id = 5;</code>
     *
     * <pre>
     * 用户ID
     * </pre>
     */
    int getUserId();

    // required string card_serial = 6;
    /**
     * <code>required string card_serial = 6;</code>
     *
     * <pre>
     * 卡号
     * </pre>
     */
    boolean hasCardSerial();
    /**
     * <code>required string card_serial = 6;</code>
     *
     * <pre>
     * 卡号
     * </pre>
     */
    java.lang.String getCardSerial();
    /**
     * <code>required string card_serial = 6;</code>
     *
     * <pre>
     * 卡号
     * </pre>
     */
    com.google.protobuf.ByteString
        getCardSerialBytes();

    // required int32 user_right = 7;
    /**
     * <code>required int32 user_right = 7;</code>
     *
     * <pre>
     * 用户资格
     * </pre>
     */
    boolean hasUserRight();
    /**
     * <code>required int32 user_right = 7;</code>
     *
     * <pre>
     * 用户资格
     * </pre>
     */
    int getUserRight();

    // required int32 account_id = 8;
    /**
     * <code>required int32 account_id = 8;</code>
     *
     * <pre>
     * 关联账户ID
     * </pre>
     */
    boolean hasAccountId();
    /**
     * <code>required int32 account_id = 8;</code>
     *
     * <pre>
     * 关联账户ID
     * </pre>
     */
    int getAccountId();

    // required int32 group_id = 9;
    /**
     * <code>required int32 group_id = 9;</code>
     *
     * <pre>
     * 关联课题组ID
     * </pre>
     */
    boolean hasGroupId();
    /**
     * <code>required int32 group_id = 9;</code>
     *
     * <pre>
     * 关联课题组ID
     * </pre>
     */
    int getGroupId();

    // optional int32 booking_id = 10;
    /**
     * <code>optional int32 booking_id = 10;</code>
     *
     * <pre>
     * 关联预约记录ID
     * </pre>
     */
    boolean hasBookingId();
    /**
     * <code>optional int32 booking_id = 10;</code>
     *
     * <pre>
     * 关联预约记录ID
     * </pre>
     */
    int getBookingId();

    // required bool penalty_flag = 11;
    /**
     * <code>required bool penalty_flag = 11;</code>
     *
     * <pre>
     * 是否需要惩罚
     * </pre>
     */
    boolean hasPenaltyFlag();
    /**
     * <code>required bool penalty_flag = 11;</code>
     *
     * <pre>
     * 是否需要惩罚
     * </pre>
     */
    boolean getPenaltyFlag();

    // required int32 instrument_id = 12;
    /**
     * <code>required int32 instrument_id = 12;</code>
     *
     * <pre>
     * 仪器ID
     * </pre>
     */
    boolean hasInstrumentId();
    /**
     * <code>required int32 instrument_id = 12;</code>
     *
     * <pre>
     * 仪器ID
     * </pre>
     */
    int getInstrumentId();

    // optional int32 long_time_right = 13;
    /**
     * <code>optional int32 long_time_right = 13;</code>
     *
     * <pre>
     * 用户长期权限
     * </pre>
     */
    boolean hasLongTimeRight();
    /**
     * <code>optional int32 long_time_right = 13;</code>
     *
     * <pre>
     * 用户长期权限
     * </pre>
     */
    int getLongTimeRight();
  }
  /**
   * Protobuf type {@code biotech.osla.Session}
   *
   * <pre>
   * 使用记录
   * </pre>
   */
  public static final class Session extends
      com.google.protobuf.GeneratedMessageLite
      implements SessionOrBuilder {
    // Use Session.newBuilder() to construct.
    private Session(com.google.protobuf.GeneratedMessageLite.Builder builder) {
      super(builder);

    }
    private Session(boolean noInit) {}

    private static final Session defaultInstance;
    public static Session getDefaultInstance() {
      return defaultInstance;
    }

    public Session getDefaultInstanceForType() {
      return defaultInstance;
    }

    private Session(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              id_ = input.readInt64();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              startTime_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              endTime_ = input.readInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              type_ = input.readInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              userId_ = input.readInt32();
              break;
            }
            case 50: {
              bitField0_ |= 0x00000020;
              cardSerial_ = input.readBytes();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000040;
              userRight_ = input.readInt32();
              break;
            }
            case 64: {
              bitField0_ |= 0x00000080;
              accountId_ = input.readInt32();
              break;
            }
            case 72: {
              bitField0_ |= 0x00000100;
              groupId_ = input.readInt32();
              break;
            }
            case 80: {
              bitField0_ |= 0x00000200;
              bookingId_ = input.readInt32();
              break;
            }
            case 88: {
              bitField0_ |= 0x00000400;
              penaltyFlag_ = input.readBool();
              break;
            }
            case 96: {
              bitField0_ |= 0x00000800;
              instrumentId_ = input.readInt32();
              break;
            }
            case 104: {
              bitField0_ |= 0x00001000;
              longTimeRight_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static com.google.protobuf.Parser<Session> PARSER =
        new com.google.protobuf.AbstractParser<Session>() {
      public Session parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Session(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<Session> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required int64 id = 1;
    public static final int ID_FIELD_NUMBER = 1;
    private long id_;
    /**
     * <code>required int64 id = 1;</code>
     *
     * <pre>
     * 记录ID
     * </pre>
     */
    public boolean hasId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int64 id = 1;</code>
     *
     * <pre>
     * 记录ID
     * </pre>
     */
    public long getId() {
      return id_;
    }

    // required int32 start_time = 2;
    public static final int START_TIME_FIELD_NUMBER = 2;
    private int startTime_;
    /**
     * <code>required int32 start_time = 2;</code>
     *
     * <pre>
     * 开始时间
     * </pre>
     */
    public boolean hasStartTime() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required int32 start_time = 2;</code>
     *
     * <pre>
     * 开始时间
     * </pre>
     */
    public int getStartTime() {
      return startTime_;
    }

    // required int32 end_time = 3;
    public static final int END_TIME_FIELD_NUMBER = 3;
    private int endTime_;
    /**
     * <code>required int32 end_time = 3;</code>
     *
     * <pre>
     * 结束时间
     * </pre>
     */
    public boolean hasEndTime() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required int32 end_time = 3;</code>
     *
     * <pre>
     * 结束时间
     * </pre>
     */
    public int getEndTime() {
      return endTime_;
    }

    // required int32 type = 4;
    public static final int TYPE_FIELD_NUMBER = 4;
    private int type_;
    /**
     * <code>required int32 type = 4;</code>
     *
     * <pre>
     * 使用类型
     * </pre>
     */
    public boolean hasType() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>required int32 type = 4;</code>
     *
     * <pre>
     * 使用类型
     * </pre>
     */
    public int getType() {
      return type_;
    }

    // required int32 user_id = 5;
    public static final int USER_ID_FIELD_NUMBER = 5;
    private int userId_;
    /**
     * <code>required int32 user_id = 5;</code>
     *
     * <pre>
     * 用户ID
     * </pre>
     */
    public boolean hasUserId() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>required int32 user_id = 5;</code>
     *
     * <pre>
     * 用户ID
     * </pre>
     */
    public int getUserId() {
      return userId_;
    }

    // required string card_serial = 6;
    public static final int CARD_SERIAL_FIELD_NUMBER = 6;
    private java.lang.Object cardSerial_;
    /**
     * <code>required string card_serial = 6;</code>
     *
     * <pre>
     * 卡号
     * </pre>
     */
    public boolean hasCardSerial() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>required string card_serial = 6;</code>
     *
     * <pre>
     * 卡号
     * </pre>
     */
    public java.lang.String getCardSerial() {
      java.lang.Object ref = cardSerial_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          cardSerial_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string card_serial = 6;</code>
     *
     * <pre>
     * 卡号
     * </pre>
     */
    public com.google.protobuf.ByteString
        getCardSerialBytes() {
      java.lang.Object ref = cardSerial_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        cardSerial_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // required int32 user_right = 7;
    public static final int USER_RIGHT_FIELD_NUMBER = 7;
    private int userRight_;
    /**
     * <code>required int32 user_right = 7;</code>
     *
     * <pre>
     * 用户资格
     * </pre>
     */
    public boolean hasUserRight() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>required int32 user_right = 7;</code>
     *
     * <pre>
     * 用户资格
     * </pre>
     */
    public int getUserRight() {
      return userRight_;
    }

    // required int32 account_id = 8;
    public static final int ACCOUNT_ID_FIELD_NUMBER = 8;
    private int accountId_;
    /**
     * <code>required int32 account_id = 8;</code>
     *
     * <pre>
     * 关联账户ID
     * </pre>
     */
    public boolean hasAccountId() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>required int32 account_id = 8;</code>
     *
     * <pre>
     * 关联账户ID
     * </pre>
     */
    public int getAccountId() {
      return accountId_;
    }

    // required int32 group_id = 9;
    public static final int GROUP_ID_FIELD_NUMBER = 9;
    private int groupId_;
    /**
     * <code>required int32 group_id = 9;</code>
     *
     * <pre>
     * 关联课题组ID
     * </pre>
     */
    public boolean hasGroupId() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>required int32 group_id = 9;</code>
     *
     * <pre>
     * 关联课题组ID
     * </pre>
     */
    public int getGroupId() {
      return groupId_;
    }

    // optional int32 booking_id = 10;
    public static final int BOOKING_ID_FIELD_NUMBER = 10;
    private int bookingId_;
    /**
     * <code>optional int32 booking_id = 10;</code>
     *
     * <pre>
     * 关联预约记录ID
     * </pre>
     */
    public boolean hasBookingId() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>optional int32 booking_id = 10;</code>
     *
     * <pre>
     * 关联预约记录ID
     * </pre>
     */
    public int getBookingId() {
      return bookingId_;
    }

    // required bool penalty_flag = 11;
    public static final int PENALTY_FLAG_FIELD_NUMBER = 11;
    private boolean penaltyFlag_;
    /**
     * <code>required bool penalty_flag = 11;</code>
     *
     * <pre>
     * 是否需要惩罚
     * </pre>
     */
    public boolean hasPenaltyFlag() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    /**
     * <code>required bool penalty_flag = 11;</code>
     *
     * <pre>
     * 是否需要惩罚
     * </pre>
     */
    public boolean getPenaltyFlag() {
      return penaltyFlag_;
    }

    // required int32 instrument_id = 12;
    public static final int INSTRUMENT_ID_FIELD_NUMBER = 12;
    private int instrumentId_;
    /**
     * <code>required int32 instrument_id = 12;</code>
     *
     * <pre>
     * 仪器ID
     * </pre>
     */
    public boolean hasInstrumentId() {
      return ((bitField0_ & 0x00000800) == 0x00000800);
    }
    /**
     * <code>required int32 instrument_id = 12;</code>
     *
     * <pre>
     * 仪器ID
     * </pre>
     */
    public int getInstrumentId() {
      return instrumentId_;
    }

    // optional int32 long_time_right = 13;
    public static final int LONG_TIME_RIGHT_FIELD_NUMBER = 13;
    private int longTimeRight_;
    /**
     * <code>optional int32 long_time_right = 13;</code>
     *
     * <pre>
     * 用户长期权限
     * </pre>
     */
    public boolean hasLongTimeRight() {
      return ((bitField0_ & 0x00001000) == 0x00001000);
    }
    /**
     * <code>optional int32 long_time_right = 13;</code>
     *
     * <pre>
     * 用户长期权限
     * </pre>
     */
    public int getLongTimeRight() {
      return longTimeRight_;
    }

    private void initFields() {
      id_ = 0L;
      startTime_ = 0;
      endTime_ = 0;
      type_ = 0;
      userId_ = 0;
      cardSerial_ = "";
      userRight_ = 0;
      accountId_ = 0;
      groupId_ = 0;
      bookingId_ = 0;
      penaltyFlag_ = false;
      instrumentId_ = 0;
      longTimeRight_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasStartTime()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasEndTime()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasType()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasUserId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasCardSerial()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasUserRight()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasAccountId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasGroupId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasPenaltyFlag()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasInstrumentId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt64(1, id_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, startTime_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, endTime_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(4, type_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(5, userId_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeBytes(6, getCardSerialBytes());
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeInt32(7, userRight_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeInt32(8, accountId_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeInt32(9, groupId_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeInt32(10, bookingId_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeBool(11, penaltyFlag_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        output.writeInt32(12, instrumentId_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        output.writeInt32(13, longTimeRight_);
      }
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, id_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, startTime_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, endTime_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, type_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, userId_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(6, getCardSerialBytes());
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(7, userRight_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(8, accountId_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(9, groupId_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(10, bookingId_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(11, penaltyFlag_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(12, instrumentId_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(13, longTimeRight_);
      }
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.slark.pengder.protocol.MessageProtos.Session parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.slark.pengder.protocol.MessageProtos.Session parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.slark.pengder.protocol.MessageProtos.Session parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.slark.pengder.protocol.MessageProtos.Session parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.slark.pengder.protocol.MessageProtos.Session parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.slark.pengder.protocol.MessageProtos.Session parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.slark.pengder.protocol.MessageProtos.Session parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.slark.pengder.protocol.MessageProtos.Session parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.slark.pengder.protocol.MessageProtos.Session parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.slark.pengder.protocol.MessageProtos.Session parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.slark.pengder.protocol.MessageProtos.Session prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    /**
     * Protobuf type {@code biotech.osla.Session}
     *
     * <pre>
     * 使用记录
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.slark.pengder.protocol.MessageProtos.Session, Builder>
        implements com.slark.pengder.protocol.MessageProtos.SessionOrBuilder {
      // Construct using com.slark.pengder.protocol.MessageProtos.Session.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        id_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        startTime_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        endTime_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        type_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        userId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        cardSerial_ = "";
        bitField0_ = (bitField0_ & ~0x00000020);
        userRight_ = 0;
        bitField0_ = (bitField0_ & ~0x00000040);
        accountId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000080);
        groupId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000100);
        bookingId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000200);
        penaltyFlag_ = false;
        bitField0_ = (bitField0_ & ~0x00000400);
        instrumentId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000800);
        longTimeRight_ = 0;
        bitField0_ = (bitField0_ & ~0x00001000);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.slark.pengder.protocol.MessageProtos.Session getDefaultInstanceForType() {
        return com.slark.pengder.protocol.MessageProtos.Session.getDefaultInstance();
      }

      public com.slark.pengder.protocol.MessageProtos.Session build() {
        com.slark.pengder.protocol.MessageProtos.Session result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.slark.pengder.protocol.MessageProtos.Session buildPartial() {
        com.slark.pengder.protocol.MessageProtos.Session result = new com.slark.pengder.protocol.MessageProtos.Session(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.id_ = id_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.startTime_ = startTime_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.endTime_ = endTime_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.type_ = type_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.userId_ = userId_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.cardSerial_ = cardSerial_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.userRight_ = userRight_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.accountId_ = accountId_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        result.groupId_ = groupId_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000200;
        }
        result.bookingId_ = bookingId_;
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000400;
        }
        result.penaltyFlag_ = penaltyFlag_;
        if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
          to_bitField0_ |= 0x00000800;
        }
        result.instrumentId_ = instrumentId_;
        if (((from_bitField0_ & 0x00001000) == 0x00001000)) {
          to_bitField0_ |= 0x00001000;
        }
        result.longTimeRight_ = longTimeRight_;
        result.bitField0_ = to_bitField0_;
        return result;
      }

      public Builder mergeFrom(com.slark.pengder.protocol.MessageProtos.Session other) {
        if (other == com.slark.pengder.protocol.MessageProtos.Session.getDefaultInstance()) return this;
        if (other.hasId()) {
          setId(other.getId());
        }
        if (other.hasStartTime()) {
          setStartTime(other.getStartTime());
        }
        if (other.hasEndTime()) {
          setEndTime(other.getEndTime());
        }
        if (other.hasType()) {
          setType(other.getType());
        }
        if (other.hasUserId()) {
          setUserId(other.getUserId());
        }
        if (other.hasCardSerial()) {
          bitField0_ |= 0x00000020;
          cardSerial_ = other.cardSerial_;
          
        }
        if (other.hasUserRight()) {
          setUserRight(other.getUserRight());
        }
        if (other.hasAccountId()) {
          setAccountId(other.getAccountId());
        }
        if (other.hasGroupId()) {
          setGroupId(other.getGroupId());
        }
        if (other.hasBookingId()) {
          setBookingId(other.getBookingId());
        }
        if (other.hasPenaltyFlag()) {
          setPenaltyFlag(other.getPenaltyFlag());
        }
        if (other.hasInstrumentId()) {
          setInstrumentId(other.getInstrumentId());
        }
        if (other.hasLongTimeRight()) {
          setLongTimeRight(other.getLongTimeRight());
        }
        return this;
      }

      public final boolean isInitialized() {
        if (!hasId()) {
          
          return false;
        }
        if (!hasStartTime()) {
          
          return false;
        }
        if (!hasEndTime()) {
          
          return false;
        }
        if (!hasType()) {
          
          return false;
        }
        if (!hasUserId()) {
          
          return false;
        }
        if (!hasCardSerial()) {
          
          return false;
        }
        if (!hasUserRight()) {
          
          return false;
        }
        if (!hasAccountId()) {
          
          return false;
        }
        if (!hasGroupId()) {
          
          return false;
        }
        if (!hasPenaltyFlag()) {
          
          return false;
        }
        if (!hasInstrumentId()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.slark.pengder.protocol.MessageProtos.Session parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.slark.pengder.protocol.MessageProtos.Session) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required int64 id = 1;
      private long id_ ;
      /**
       * <code>required int64 id = 1;</code>
       *
       * <pre>
       * 记录ID
       * </pre>
       */
      public boolean hasId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int64 id = 1;</code>
       *
       * <pre>
       * 记录ID
       * </pre>
       */
      public long getId() {
        return id_;
      }
      /**
       * <code>required int64 id = 1;</code>
       *
       * <pre>
       * 记录ID
       * </pre>
       */
      public Builder setId(long value) {
        bitField0_ |= 0x00000001;
        id_ = value;
        
        return this;
      }
      /**
       * <code>required int64 id = 1;</code>
       *
       * <pre>
       * 记录ID
       * </pre>
       */
      public Builder clearId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        id_ = 0L;
        
        return this;
      }

      // required int32 start_time = 2;
      private int startTime_ ;
      /**
       * <code>required int32 start_time = 2;</code>
       *
       * <pre>
       * 开始时间
       * </pre>
       */
      public boolean hasStartTime() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required int32 start_time = 2;</code>
       *
       * <pre>
       * 开始时间
       * </pre>
       */
      public int getStartTime() {
        return startTime_;
      }
      /**
       * <code>required int32 start_time = 2;</code>
       *
       * <pre>
       * 开始时间
       * </pre>
       */
      public Builder setStartTime(int value) {
        bitField0_ |= 0x00000002;
        startTime_ = value;
        
        return this;
      }
      /**
       * <code>required int32 start_time = 2;</code>
       *
       * <pre>
       * 开始时间
       * </pre>
       */
      public Builder clearStartTime() {
        bitField0_ = (bitField0_ & ~0x00000002);
        startTime_ = 0;
        
        return this;
      }

      // required int32 end_time = 3;
      private int endTime_ ;
      /**
       * <code>required int32 end_time = 3;</code>
       *
       * <pre>
       * 结束时间
       * </pre>
       */
      public boolean hasEndTime() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required int32 end_time = 3;</code>
       *
       * <pre>
       * 结束时间
       * </pre>
       */
      public int getEndTime() {
        return endTime_;
      }
      /**
       * <code>required int32 end_time = 3;</code>
       *
       * <pre>
       * 结束时间
       * </pre>
       */
      public Builder setEndTime(int value) {
        bitField0_ |= 0x00000004;
        endTime_ = value;
        
        return this;
      }
      /**
       * <code>required int32 end_time = 3;</code>
       *
       * <pre>
       * 结束时间
       * </pre>
       */
      public Builder clearEndTime() {
        bitField0_ = (bitField0_ & ~0x00000004);
        endTime_ = 0;
        
        return this;
      }

      // required int32 type = 4;
      private int type_ ;
      /**
       * <code>required int32 type = 4;</code>
       *
       * <pre>
       * 使用类型
       * </pre>
       */
      public boolean hasType() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>required int32 type = 4;</code>
       *
       * <pre>
       * 使用类型
       * </pre>
       */
      public int getType() {
        return type_;
      }
      /**
       * <code>required int32 type = 4;</code>
       *
       * <pre>
       * 使用类型
       * </pre>
       */
      public Builder setType(int value) {
        bitField0_ |= 0x00000008;
        type_ = value;
        
        return this;
      }
      /**
       * <code>required int32 type = 4;</code>
       *
       * <pre>
       * 使用类型
       * </pre>
       */
      public Builder clearType() {
        bitField0_ = (bitField0_ & ~0x00000008);
        type_ = 0;
        
        return this;
      }

      // required int32 user_id = 5;
      private int userId_ ;
      /**
       * <code>required int32 user_id = 5;</code>
       *
       * <pre>
       * 用户ID
       * </pre>
       */
      public boolean hasUserId() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>required int32 user_id = 5;</code>
       *
       * <pre>
       * 用户ID
       * </pre>
       */
      public int getUserId() {
        return userId_;
      }
      /**
       * <code>required int32 user_id = 5;</code>
       *
       * <pre>
       * 用户ID
       * </pre>
       */
      public Builder setUserId(int value) {
        bitField0_ |= 0x00000010;
        userId_ = value;
        
        return this;
      }
      /**
       * <code>required int32 user_id = 5;</code>
       *
       * <pre>
       * 用户ID
       * </pre>
       */
      public Builder clearUserId() {
        bitField0_ = (bitField0_ & ~0x00000010);
        userId_ = 0;
        
        return this;
      }

      // required string card_serial = 6;
      private java.lang.Object cardSerial_ = "";
      /**
       * <code>required string card_serial = 6;</code>
       *
       * <pre>
       * 卡号
       * </pre>
       */
      public boolean hasCardSerial() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>required string card_serial = 6;</code>
       *
       * <pre>
       * 卡号
       * </pre>
       */
      public java.lang.String getCardSerial() {
        java.lang.Object ref = cardSerial_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          cardSerial_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string card_serial = 6;</code>
       *
       * <pre>
       * 卡号
       * </pre>
       */
      public com.google.protobuf.ByteString
          getCardSerialBytes() {
        java.lang.Object ref = cardSerial_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          cardSerial_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string card_serial = 6;</code>
       *
       * <pre>
       * 卡号
       * </pre>
       */
      public Builder setCardSerial(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000020;
        cardSerial_ = value;
        
        return this;
      }
      /**
       * <code>required string card_serial = 6;</code>
       *
       * <pre>
       * 卡号
       * </pre>
       */
      public Builder clearCardSerial() {
        bitField0_ = (bitField0_ & ~0x00000020);
        cardSerial_ = getDefaultInstance().getCardSerial();
        
        return this;
      }
      /**
       * <code>required string card_serial = 6;</code>
       *
       * <pre>
       * 卡号
       * </pre>
       */
      public Builder setCardSerialBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000020;
        cardSerial_ = value;
        
        return this;
      }

      // required int32 user_right = 7;
      private int userRight_ ;
      /**
       * <code>required int32 user_right = 7;</code>
       *
       * <pre>
       * 用户资格
       * </pre>
       */
      public boolean hasUserRight() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>required int32 user_right = 7;</code>
       *
       * <pre>
       * 用户资格
       * </pre>
       */
      public int getUserRight() {
        return userRight_;
      }
      /**
       * <code>required int32 user_right = 7;</code>
       *
       * <pre>
       * 用户资格
       * </pre>
       */
      public Builder setUserRight(int value) {
        bitField0_ |= 0x00000040;
        userRight_ = value;
        
        return this;
      }
      /**
       * <code>required int32 user_right = 7;</code>
       *
       * <pre>
       * 用户资格
       * </pre>
       */
      public Builder clearUserRight() {
        bitField0_ = (bitField0_ & ~0x00000040);
        userRight_ = 0;
        
        return this;
      }

      // required int32 account_id = 8;
      private int accountId_ ;
      /**
       * <code>required int32 account_id = 8;</code>
       *
       * <pre>
       * 关联账户ID
       * </pre>
       */
      public boolean hasAccountId() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>required int32 account_id = 8;</code>
       *
       * <pre>
       * 关联账户ID
       * </pre>
       */
      public int getAccountId() {
        return accountId_;
      }
      /**
       * <code>required int32 account_id = 8;</code>
       *
       * <pre>
       * 关联账户ID
       * </pre>
       */
      public Builder setAccountId(int value) {
        bitField0_ |= 0x00000080;
        accountId_ = value;
        
        return this;
      }
      /**
       * <code>required int32 account_id = 8;</code>
       *
       * <pre>
       * 关联账户ID
       * </pre>
       */
      public Builder clearAccountId() {
        bitField0_ = (bitField0_ & ~0x00000080);
        accountId_ = 0;
        
        return this;
      }

      // required int32 group_id = 9;
      private int groupId_ ;
      /**
       * <code>required int32 group_id = 9;</code>
       *
       * <pre>
       * 关联课题组ID
       * </pre>
       */
      public boolean hasGroupId() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>required int32 group_id = 9;</code>
       *
       * <pre>
       * 关联课题组ID
       * </pre>
       */
      public int getGroupId() {
        return groupId_;
      }
      /**
       * <code>required int32 group_id = 9;</code>
       *
       * <pre>
       * 关联课题组ID
       * </pre>
       */
      public Builder setGroupId(int value) {
        bitField0_ |= 0x00000100;
        groupId_ = value;
        
        return this;
      }
      /**
       * <code>required int32 group_id = 9;</code>
       *
       * <pre>
       * 关联课题组ID
       * </pre>
       */
      public Builder clearGroupId() {
        bitField0_ = (bitField0_ & ~0x00000100);
        groupId_ = 0;
        
        return this;
      }

      // optional int32 booking_id = 10;
      private int bookingId_ ;
      /**
       * <code>optional int32 booking_id = 10;</code>
       *
       * <pre>
       * 关联预约记录ID
       * </pre>
       */
      public boolean hasBookingId() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional int32 booking_id = 10;</code>
       *
       * <pre>
       * 关联预约记录ID
       * </pre>
       */
      public int getBookingId() {
        return bookingId_;
      }
      /**
       * <code>optional int32 booking_id = 10;</code>
       *
       * <pre>
       * 关联预约记录ID
       * </pre>
       */
      public Builder setBookingId(int value) {
        bitField0_ |= 0x00000200;
        bookingId_ = value;
        
        return this;
      }
      /**
       * <code>optional int32 booking_id = 10;</code>
       *
       * <pre>
       * 关联预约记录ID
       * </pre>
       */
      public Builder clearBookingId() {
        bitField0_ = (bitField0_ & ~0x00000200);
        bookingId_ = 0;
        
        return this;
      }

      // required bool penalty_flag = 11;
      private boolean penaltyFlag_ ;
      /**
       * <code>required bool penalty_flag = 11;</code>
       *
       * <pre>
       * 是否需要惩罚
       * </pre>
       */
      public boolean hasPenaltyFlag() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>required bool penalty_flag = 11;</code>
       *
       * <pre>
       * 是否需要惩罚
       * </pre>
       */
      public boolean getPenaltyFlag() {
        return penaltyFlag_;
      }
      /**
       * <code>required bool penalty_flag = 11;</code>
       *
       * <pre>
       * 是否需要惩罚
       * </pre>
       */
      public Builder setPenaltyFlag(boolean value) {
        bitField0_ |= 0x00000400;
        penaltyFlag_ = value;
        
        return this;
      }
      /**
       * <code>required bool penalty_flag = 11;</code>
       *
       * <pre>
       * 是否需要惩罚
       * </pre>
       */
      public Builder clearPenaltyFlag() {
        bitField0_ = (bitField0_ & ~0x00000400);
        penaltyFlag_ = false;
        
        return this;
      }

      // required int32 instrument_id = 12;
      private int instrumentId_ ;
      /**
       * <code>required int32 instrument_id = 12;</code>
       *
       * <pre>
       * 仪器ID
       * </pre>
       */
      public boolean hasInstrumentId() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      /**
       * <code>required int32 instrument_id = 12;</code>
       *
       * <pre>
       * 仪器ID
       * </pre>
       */
      public int getInstrumentId() {
        return instrumentId_;
      }
      /**
       * <code>required int32 instrument_id = 12;</code>
       *
       * <pre>
       * 仪器ID
       * </pre>
       */
      public Builder setInstrumentId(int value) {
        bitField0_ |= 0x00000800;
        instrumentId_ = value;
        
        return this;
      }
      /**
       * <code>required int32 instrument_id = 12;</code>
       *
       * <pre>
       * 仪器ID
       * </pre>
       */
      public Builder clearInstrumentId() {
        bitField0_ = (bitField0_ & ~0x00000800);
        instrumentId_ = 0;
        
        return this;
      }

      // optional int32 long_time_right = 13;
      private int longTimeRight_ ;
      /**
       * <code>optional int32 long_time_right = 13;</code>
       *
       * <pre>
       * 用户长期权限
       * </pre>
       */
      public boolean hasLongTimeRight() {
        return ((bitField0_ & 0x00001000) == 0x00001000);
      }
      /**
       * <code>optional int32 long_time_right = 13;</code>
       *
       * <pre>
       * 用户长期权限
       * </pre>
       */
      public int getLongTimeRight() {
        return longTimeRight_;
      }
      /**
       * <code>optional int32 long_time_right = 13;</code>
       *
       * <pre>
       * 用户长期权限
       * </pre>
       */
      public Builder setLongTimeRight(int value) {
        bitField0_ |= 0x00001000;
        longTimeRight_ = value;
        
        return this;
      }
      /**
       * <code>optional int32 long_time_right = 13;</code>
       *
       * <pre>
       * 用户长期权限
       * </pre>
       */
      public Builder clearLongTimeRight() {
        bitField0_ = (bitField0_ & ~0x00001000);
        longTimeRight_ = 0;
        
        return this;
      }

      // @@protoc_insertion_point(builder_scope:biotech.osla.Session)
    }

    static {
      defaultInstance = new Session(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:biotech.osla.Session)
  }

  public interface SessionListOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {

    // repeated .biotech.osla.Session session = 1;
    /**
     * <code>repeated .biotech.osla.Session session = 1;</code>
     */
    java.util.List<com.slark.pengder.protocol.MessageProtos.Session> 
        getSessionList();
    /**
     * <code>repeated .biotech.osla.Session session = 1;</code>
     */
    com.slark.pengder.protocol.MessageProtos.Session getSession(int index);
    /**
     * <code>repeated .biotech.osla.Session session = 1;</code>
     */
    int getSessionCount();
  }
  /**
   * Protobuf type {@code biotech.osla.SessionList}
   *
   * <pre>
   * 使用记录列表
   * </pre>
   */
  public static final class SessionList extends
      com.google.protobuf.GeneratedMessageLite
      implements SessionListOrBuilder {
    // Use SessionList.newBuilder() to construct.
    private SessionList(com.google.protobuf.GeneratedMessageLite.Builder builder) {
      super(builder);

    }
    private SessionList(boolean noInit) {}

    private static final SessionList defaultInstance;
    public static SessionList getDefaultInstance() {
      return defaultInstance;
    }

    public SessionList getDefaultInstanceForType() {
      return defaultInstance;
    }

    private SessionList(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                session_ = new java.util.ArrayList<com.slark.pengder.protocol.MessageProtos.Session>();
                mutable_bitField0_ |= 0x00000001;
              }
              session_.add(input.readMessage(com.slark.pengder.protocol.MessageProtos.Session.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          session_ = java.util.Collections.unmodifiableList(session_);
        }
        makeExtensionsImmutable();
      }
    }
    public static com.google.protobuf.Parser<SessionList> PARSER =
        new com.google.protobuf.AbstractParser<SessionList>() {
      public SessionList parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new SessionList(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<SessionList> getParserForType() {
      return PARSER;
    }

    // repeated .biotech.osla.Session session = 1;
    public static final int SESSION_FIELD_NUMBER = 1;
    private java.util.List<com.slark.pengder.protocol.MessageProtos.Session> session_;
    /**
     * <code>repeated .biotech.osla.Session session = 1;</code>
     */
    public java.util.List<com.slark.pengder.protocol.MessageProtos.Session> getSessionList() {
      return session_;
    }
    /**
     * <code>repeated .biotech.osla.Session session = 1;</code>
     */
    public java.util.List<? extends com.slark.pengder.protocol.MessageProtos.SessionOrBuilder> 
        getSessionOrBuilderList() {
      return session_;
    }
    /**
     * <code>repeated .biotech.osla.Session session = 1;</code>
     */
    public int getSessionCount() {
      return session_.size();
    }
    /**
     * <code>repeated .biotech.osla.Session session = 1;</code>
     */
    public com.slark.pengder.protocol.MessageProtos.Session getSession(int index) {
      return session_.get(index);
    }
    /**
     * <code>repeated .biotech.osla.Session session = 1;</code>
     */
    public com.slark.pengder.protocol.MessageProtos.SessionOrBuilder getSessionOrBuilder(
        int index) {
      return session_.get(index);
    }

    private void initFields() {
      session_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      for (int i = 0; i < getSessionCount(); i++) {
        if (!getSession(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < session_.size(); i++) {
        output.writeMessage(1, session_.get(i));
      }
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < session_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, session_.get(i));
      }
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.slark.pengder.protocol.MessageProtos.SessionList parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.slark.pengder.protocol.MessageProtos.SessionList parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.slark.pengder.protocol.MessageProtos.SessionList parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.slark.pengder.protocol.MessageProtos.SessionList parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.slark.pengder.protocol.MessageProtos.SessionList parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.slark.pengder.protocol.MessageProtos.SessionList parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.slark.pengder.protocol.MessageProtos.SessionList parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.slark.pengder.protocol.MessageProtos.SessionList parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.slark.pengder.protocol.MessageProtos.SessionList parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.slark.pengder.protocol.MessageProtos.SessionList parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.slark.pengder.protocol.MessageProtos.SessionList prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    /**
     * Protobuf type {@code biotech.osla.SessionList}
     *
     * <pre>
     * 使用记录列表
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.slark.pengder.protocol.MessageProtos.SessionList, Builder>
        implements com.slark.pengder.protocol.MessageProtos.SessionListOrBuilder {
      // Construct using com.slark.pengder.protocol.MessageProtos.SessionList.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        session_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.slark.pengder.protocol.MessageProtos.SessionList getDefaultInstanceForType() {
        return com.slark.pengder.protocol.MessageProtos.SessionList.getDefaultInstance();
      }

      public com.slark.pengder.protocol.MessageProtos.SessionList build() {
        com.slark.pengder.protocol.MessageProtos.SessionList result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.slark.pengder.protocol.MessageProtos.SessionList buildPartial() {
        com.slark.pengder.protocol.MessageProtos.SessionList result = new com.slark.pengder.protocol.MessageProtos.SessionList(this);
        int from_bitField0_ = bitField0_;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          session_ = java.util.Collections.unmodifiableList(session_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.session_ = session_;
        return result;
      }

      public Builder mergeFrom(com.slark.pengder.protocol.MessageProtos.SessionList other) {
        if (other == com.slark.pengder.protocol.MessageProtos.SessionList.getDefaultInstance()) return this;
        if (!other.session_.isEmpty()) {
          if (session_.isEmpty()) {
            session_ = other.session_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureSessionIsMutable();
            session_.addAll(other.session_);
          }
          
        }
        return this;
      }

      public final boolean isInitialized() {
        for (int i = 0; i < getSessionCount(); i++) {
          if (!getSession(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.slark.pengder.protocol.MessageProtos.SessionList parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.slark.pengder.protocol.MessageProtos.SessionList) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // repeated .biotech.osla.Session session = 1;
      private java.util.List<com.slark.pengder.protocol.MessageProtos.Session> session_ =
        java.util.Collections.emptyList();
      private void ensureSessionIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          session_ = new java.util.ArrayList<com.slark.pengder.protocol.MessageProtos.Session>(session_);
          bitField0_ |= 0x00000001;
         }
      }

      /**
       * <code>repeated .biotech.osla.Session session = 1;</code>
       */
      public java.util.List<com.slark.pengder.protocol.MessageProtos.Session> getSessionList() {
        return java.util.Collections.unmodifiableList(session_);
      }
      /**
       * <code>repeated .biotech.osla.Session session = 1;</code>
       */
      public int getSessionCount() {
        return session_.size();
      }
      /**
       * <code>repeated .biotech.osla.Session session = 1;</code>
       */
      public com.slark.pengder.protocol.MessageProtos.Session getSession(int index) {
        return session_.get(index);
      }
      /**
       * <code>repeated .biotech.osla.Session session = 1;</code>
       */
      public Builder setSession(
          int index, com.slark.pengder.protocol.MessageProtos.Session value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureSessionIsMutable();
        session_.set(index, value);

        return this;
      }
      /**
       * <code>repeated .biotech.osla.Session session = 1;</code>
       */
      public Builder setSession(
          int index, com.slark.pengder.protocol.MessageProtos.Session.Builder builderForValue) {
        ensureSessionIsMutable();
        session_.set(index, builderForValue.build());

        return this;
      }
      /**
       * <code>repeated .biotech.osla.Session session = 1;</code>
       */
      public Builder addSession(com.slark.pengder.protocol.MessageProtos.Session value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureSessionIsMutable();
        session_.add(value);

        return this;
      }
      /**
       * <code>repeated .biotech.osla.Session session = 1;</code>
       */
      public Builder addSession(
          int index, com.slark.pengder.protocol.MessageProtos.Session value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureSessionIsMutable();
        session_.add(index, value);

        return this;
      }
      /**
       * <code>repeated .biotech.osla.Session session = 1;</code>
       */
      public Builder addSession(
          com.slark.pengder.protocol.MessageProtos.Session.Builder builderForValue) {
        ensureSessionIsMutable();
        session_.add(builderForValue.build());

        return this;
      }
      /**
       * <code>repeated .biotech.osla.Session session = 1;</code>
       */
      public Builder addSession(
          int index, com.slark.pengder.protocol.MessageProtos.Session.Builder builderForValue) {
        ensureSessionIsMutable();
        session_.add(index, builderForValue.build());

        return this;
      }
      /**
       * <code>repeated .biotech.osla.Session session = 1;</code>
       */
      public Builder addAllSession(
          java.lang.Iterable<? extends com.slark.pengder.protocol.MessageProtos.Session> values) {
        ensureSessionIsMutable();
        super.addAll(values, session_);

        return this;
      }
      /**
       * <code>repeated .biotech.osla.Session session = 1;</code>
       */
      public Builder clearSession() {
        session_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);

        return this;
      }
      /**
       * <code>repeated .biotech.osla.Session session = 1;</code>
       */
      public Builder removeSession(int index) {
        ensureSessionIsMutable();
        session_.remove(index);

        return this;
      }

      // @@protoc_insertion_point(builder_scope:biotech.osla.SessionList)
    }

    static {
      defaultInstance = new SessionList(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:biotech.osla.SessionList)
  }

  public interface UserInTrainingOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {

    // required int64 session_id = 1;
    /**
     * <code>required int64 session_id = 1;</code>
     *
     * <pre>
     * 使用记录ID
     * </pre>
     */
    boolean hasSessionId();
    /**
     * <code>required int64 session_id = 1;</code>
     *
     * <pre>
     * 使用记录ID
     * </pre>
     */
    long getSessionId();

    // required string card_serial = 2;
    /**
     * <code>required string card_serial = 2;</code>
     *
     * <pre>
     * 卡号
     * </pre>
     */
    boolean hasCardSerial();
    /**
     * <code>required string card_serial = 2;</code>
     *
     * <pre>
     * 卡号
     * </pre>
     */
    java.lang.String getCardSerial();
    /**
     * <code>required string card_serial = 2;</code>
     *
     * <pre>
     * 卡号
     * </pre>
     */
    com.google.protobuf.ByteString
        getCardSerialBytes();

    // required int32 user_id = 3;
    /**
     * <code>required int32 user_id = 3;</code>
     *
     * <pre>
     * 用户ID
     * </pre>
     */
    boolean hasUserId();
    /**
     * <code>required int32 user_id = 3;</code>
     *
     * <pre>
     * 用户ID
     * </pre>
     */
    int getUserId();

    // required int32 check_in_time = 4;
    /**
     * <code>required int32 check_in_time = 4;</code>
     *
     * <pre>
     * 签到时间
     * </pre>
     */
    boolean hasCheckInTime();
    /**
     * <code>required int32 check_in_time = 4;</code>
     *
     * <pre>
     * 签到时间
     * </pre>
     */
    int getCheckInTime();

    // optional int32 rowid = 5;
    /**
     * <code>optional int32 rowid = 5;</code>
     *
     * <pre>
     * 主键ID
     * </pre>
     */
    boolean hasRowid();
    /**
     * <code>optional int32 rowid = 5;</code>
     *
     * <pre>
     * 主键ID
     * </pre>
     */
    int getRowid();
  }
  /**
   * Protobuf type {@code biotech.osla.UserInTraining}
   *
   * <pre>
   * 培训用户
   * </pre>
   */
  public static final class UserInTraining extends
      com.google.protobuf.GeneratedMessageLite
      implements UserInTrainingOrBuilder {
    // Use UserInTraining.newBuilder() to construct.
    private UserInTraining(com.google.protobuf.GeneratedMessageLite.Builder builder) {
      super(builder);

    }
    private UserInTraining(boolean noInit) {}

    private static final UserInTraining defaultInstance;
    public static UserInTraining getDefaultInstance() {
      return defaultInstance;
    }

    public UserInTraining getDefaultInstanceForType() {
      return defaultInstance;
    }

    private UserInTraining(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              sessionId_ = input.readInt64();
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              cardSerial_ = input.readBytes();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              userId_ = input.readInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              checkInTime_ = input.readInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              rowid_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static com.google.protobuf.Parser<UserInTraining> PARSER =
        new com.google.protobuf.AbstractParser<UserInTraining>() {
      public UserInTraining parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new UserInTraining(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<UserInTraining> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required int64 session_id = 1;
    public static final int SESSION_ID_FIELD_NUMBER = 1;
    private long sessionId_;
    /**
     * <code>required int64 session_id = 1;</code>
     *
     * <pre>
     * 使用记录ID
     * </pre>
     */
    public boolean hasSessionId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int64 session_id = 1;</code>
     *
     * <pre>
     * 使用记录ID
     * </pre>
     */
    public long getSessionId() {
      return sessionId_;
    }

    // required string card_serial = 2;
    public static final int CARD_SERIAL_FIELD_NUMBER = 2;
    private java.lang.Object cardSerial_;
    /**
     * <code>required string card_serial = 2;</code>
     *
     * <pre>
     * 卡号
     * </pre>
     */
    public boolean hasCardSerial() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required string card_serial = 2;</code>
     *
     * <pre>
     * 卡号
     * </pre>
     */
    public java.lang.String getCardSerial() {
      java.lang.Object ref = cardSerial_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          cardSerial_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string card_serial = 2;</code>
     *
     * <pre>
     * 卡号
     * </pre>
     */
    public com.google.protobuf.ByteString
        getCardSerialBytes() {
      java.lang.Object ref = cardSerial_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        cardSerial_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // required int32 user_id = 3;
    public static final int USER_ID_FIELD_NUMBER = 3;
    private int userId_;
    /**
     * <code>required int32 user_id = 3;</code>
     *
     * <pre>
     * 用户ID
     * </pre>
     */
    public boolean hasUserId() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required int32 user_id = 3;</code>
     *
     * <pre>
     * 用户ID
     * </pre>
     */
    public int getUserId() {
      return userId_;
    }

    // required int32 check_in_time = 4;
    public static final int CHECK_IN_TIME_FIELD_NUMBER = 4;
    private int checkInTime_;
    /**
     * <code>required int32 check_in_time = 4;</code>
     *
     * <pre>
     * 签到时间
     * </pre>
     */
    public boolean hasCheckInTime() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>required int32 check_in_time = 4;</code>
     *
     * <pre>
     * 签到时间
     * </pre>
     */
    public int getCheckInTime() {
      return checkInTime_;
    }

    // optional int32 rowid = 5;
    public static final int ROWID_FIELD_NUMBER = 5;
    private int rowid_;
    /**
     * <code>optional int32 rowid = 5;</code>
     *
     * <pre>
     * 主键ID
     * </pre>
     */
    public boolean hasRowid() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional int32 rowid = 5;</code>
     *
     * <pre>
     * 主键ID
     * </pre>
     */
    public int getRowid() {
      return rowid_;
    }

    private void initFields() {
      sessionId_ = 0L;
      cardSerial_ = "";
      userId_ = 0;
      checkInTime_ = 0;
      rowid_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasSessionId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasCardSerial()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasUserId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasCheckInTime()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt64(1, sessionId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getCardSerialBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, userId_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(4, checkInTime_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(5, rowid_);
      }
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, sessionId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getCardSerialBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, userId_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, checkInTime_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, rowid_);
      }
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.slark.pengder.protocol.MessageProtos.UserInTraining parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.slark.pengder.protocol.MessageProtos.UserInTraining parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.slark.pengder.protocol.MessageProtos.UserInTraining parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.slark.pengder.protocol.MessageProtos.UserInTraining parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.slark.pengder.protocol.MessageProtos.UserInTraining parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.slark.pengder.protocol.MessageProtos.UserInTraining parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.slark.pengder.protocol.MessageProtos.UserInTraining parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.slark.pengder.protocol.MessageProtos.UserInTraining parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.slark.pengder.protocol.MessageProtos.UserInTraining parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.slark.pengder.protocol.MessageProtos.UserInTraining parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.slark.pengder.protocol.MessageProtos.UserInTraining prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    /**
     * Protobuf type {@code biotech.osla.UserInTraining}
     *
     * <pre>
     * 培训用户
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.slark.pengder.protocol.MessageProtos.UserInTraining, Builder>
        implements com.slark.pengder.protocol.MessageProtos.UserInTrainingOrBuilder {
      // Construct using com.slark.pengder.protocol.MessageProtos.UserInTraining.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        sessionId_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        cardSerial_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        userId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        checkInTime_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        rowid_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.slark.pengder.protocol.MessageProtos.UserInTraining getDefaultInstanceForType() {
        return com.slark.pengder.protocol.MessageProtos.UserInTraining.getDefaultInstance();
      }

      public com.slark.pengder.protocol.MessageProtos.UserInTraining build() {
        com.slark.pengder.protocol.MessageProtos.UserInTraining result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.slark.pengder.protocol.MessageProtos.UserInTraining buildPartial() {
        com.slark.pengder.protocol.MessageProtos.UserInTraining result = new com.slark.pengder.protocol.MessageProtos.UserInTraining(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.sessionId_ = sessionId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.cardSerial_ = cardSerial_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.userId_ = userId_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.checkInTime_ = checkInTime_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.rowid_ = rowid_;
        result.bitField0_ = to_bitField0_;
        return result;
      }

      public Builder mergeFrom(com.slark.pengder.protocol.MessageProtos.UserInTraining other) {
        if (other == com.slark.pengder.protocol.MessageProtos.UserInTraining.getDefaultInstance()) return this;
        if (other.hasSessionId()) {
          setSessionId(other.getSessionId());
        }
        if (other.hasCardSerial()) {
          bitField0_ |= 0x00000002;
          cardSerial_ = other.cardSerial_;
          
        }
        if (other.hasUserId()) {
          setUserId(other.getUserId());
        }
        if (other.hasCheckInTime()) {
          setCheckInTime(other.getCheckInTime());
        }
        if (other.hasRowid()) {
          setRowid(other.getRowid());
        }
        return this;
      }

      public final boolean isInitialized() {
        if (!hasSessionId()) {
          
          return false;
        }
        if (!hasCardSerial()) {
          
          return false;
        }
        if (!hasUserId()) {
          
          return false;
        }
        if (!hasCheckInTime()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.slark.pengder.protocol.MessageProtos.UserInTraining parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.slark.pengder.protocol.MessageProtos.UserInTraining) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required int64 session_id = 1;
      private long sessionId_ ;
      /**
       * <code>required int64 session_id = 1;</code>
       *
       * <pre>
       * 使用记录ID
       * </pre>
       */
      public boolean hasSessionId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int64 session_id = 1;</code>
       *
       * <pre>
       * 使用记录ID
       * </pre>
       */
      public long getSessionId() {
        return sessionId_;
      }
      /**
       * <code>required int64 session_id = 1;</code>
       *
       * <pre>
       * 使用记录ID
       * </pre>
       */
      public Builder setSessionId(long value) {
        bitField0_ |= 0x00000001;
        sessionId_ = value;
        
        return this;
      }
      /**
       * <code>required int64 session_id = 1;</code>
       *
       * <pre>
       * 使用记录ID
       * </pre>
       */
      public Builder clearSessionId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        sessionId_ = 0L;
        
        return this;
      }

      // required string card_serial = 2;
      private java.lang.Object cardSerial_ = "";
      /**
       * <code>required string card_serial = 2;</code>
       *
       * <pre>
       * 卡号
       * </pre>
       */
      public boolean hasCardSerial() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required string card_serial = 2;</code>
       *
       * <pre>
       * 卡号
       * </pre>
       */
      public java.lang.String getCardSerial() {
        java.lang.Object ref = cardSerial_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          cardSerial_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string card_serial = 2;</code>
       *
       * <pre>
       * 卡号
       * </pre>
       */
      public com.google.protobuf.ByteString
          getCardSerialBytes() {
        java.lang.Object ref = cardSerial_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          cardSerial_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string card_serial = 2;</code>
       *
       * <pre>
       * 卡号
       * </pre>
       */
      public Builder setCardSerial(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        cardSerial_ = value;
        
        return this;
      }
      /**
       * <code>required string card_serial = 2;</code>
       *
       * <pre>
       * 卡号
       * </pre>
       */
      public Builder clearCardSerial() {
        bitField0_ = (bitField0_ & ~0x00000002);
        cardSerial_ = getDefaultInstance().getCardSerial();
        
        return this;
      }
      /**
       * <code>required string card_serial = 2;</code>
       *
       * <pre>
       * 卡号
       * </pre>
       */
      public Builder setCardSerialBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        cardSerial_ = value;
        
        return this;
      }

      // required int32 user_id = 3;
      private int userId_ ;
      /**
       * <code>required int32 user_id = 3;</code>
       *
       * <pre>
       * 用户ID
       * </pre>
       */
      public boolean hasUserId() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required int32 user_id = 3;</code>
       *
       * <pre>
       * 用户ID
       * </pre>
       */
      public int getUserId() {
        return userId_;
      }
      /**
       * <code>required int32 user_id = 3;</code>
       *
       * <pre>
       * 用户ID
       * </pre>
       */
      public Builder setUserId(int value) {
        bitField0_ |= 0x00000004;
        userId_ = value;
        
        return this;
      }
      /**
       * <code>required int32 user_id = 3;</code>
       *
       * <pre>
       * 用户ID
       * </pre>
       */
      public Builder clearUserId() {
        bitField0_ = (bitField0_ & ~0x00000004);
        userId_ = 0;
        
        return this;
      }

      // required int32 check_in_time = 4;
      private int checkInTime_ ;
      /**
       * <code>required int32 check_in_time = 4;</code>
       *
       * <pre>
       * 签到时间
       * </pre>
       */
      public boolean hasCheckInTime() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>required int32 check_in_time = 4;</code>
       *
       * <pre>
       * 签到时间
       * </pre>
       */
      public int getCheckInTime() {
        return checkInTime_;
      }
      /**
       * <code>required int32 check_in_time = 4;</code>
       *
       * <pre>
       * 签到时间
       * </pre>
       */
      public Builder setCheckInTime(int value) {
        bitField0_ |= 0x00000008;
        checkInTime_ = value;
        
        return this;
      }
      /**
       * <code>required int32 check_in_time = 4;</code>
       *
       * <pre>
       * 签到时间
       * </pre>
       */
      public Builder clearCheckInTime() {
        bitField0_ = (bitField0_ & ~0x00000008);
        checkInTime_ = 0;
        
        return this;
      }

      // optional int32 rowid = 5;
      private int rowid_ ;
      /**
       * <code>optional int32 rowid = 5;</code>
       *
       * <pre>
       * 主键ID
       * </pre>
       */
      public boolean hasRowid() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional int32 rowid = 5;</code>
       *
       * <pre>
       * 主键ID
       * </pre>
       */
      public int getRowid() {
        return rowid_;
      }
      /**
       * <code>optional int32 rowid = 5;</code>
       *
       * <pre>
       * 主键ID
       * </pre>
       */
      public Builder setRowid(int value) {
        bitField0_ |= 0x00000010;
        rowid_ = value;
        
        return this;
      }
      /**
       * <code>optional int32 rowid = 5;</code>
       *
       * <pre>
       * 主键ID
       * </pre>
       */
      public Builder clearRowid() {
        bitField0_ = (bitField0_ & ~0x00000010);
        rowid_ = 0;
        
        return this;
      }

      // @@protoc_insertion_point(builder_scope:biotech.osla.UserInTraining)
    }

    static {
      defaultInstance = new UserInTraining(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:biotech.osla.UserInTraining)
  }

  public interface UserInTrainingListOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {

    // repeated .biotech.osla.UserInTraining user_in_training = 1;
    /**
     * <code>repeated .biotech.osla.UserInTraining user_in_training = 1;</code>
     */
    java.util.List<com.slark.pengder.protocol.MessageProtos.UserInTraining> 
        getUserInTrainingList();
    /**
     * <code>repeated .biotech.osla.UserInTraining user_in_training = 1;</code>
     */
    com.slark.pengder.protocol.MessageProtos.UserInTraining getUserInTraining(int index);
    /**
     * <code>repeated .biotech.osla.UserInTraining user_in_training = 1;</code>
     */
    int getUserInTrainingCount();
  }
  /**
   * Protobuf type {@code biotech.osla.UserInTrainingList}
   *
   * <pre>
   * 培训用户列表
   * </pre>
   */
  public static final class UserInTrainingList extends
      com.google.protobuf.GeneratedMessageLite
      implements UserInTrainingListOrBuilder {
    // Use UserInTrainingList.newBuilder() to construct.
    private UserInTrainingList(com.google.protobuf.GeneratedMessageLite.Builder builder) {
      super(builder);

    }
    private UserInTrainingList(boolean noInit) {}

    private static final UserInTrainingList defaultInstance;
    public static UserInTrainingList getDefaultInstance() {
      return defaultInstance;
    }

    public UserInTrainingList getDefaultInstanceForType() {
      return defaultInstance;
    }

    private UserInTrainingList(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                userInTraining_ = new java.util.ArrayList<com.slark.pengder.protocol.MessageProtos.UserInTraining>();
                mutable_bitField0_ |= 0x00000001;
              }
              userInTraining_.add(input.readMessage(com.slark.pengder.protocol.MessageProtos.UserInTraining.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          userInTraining_ = java.util.Collections.unmodifiableList(userInTraining_);
        }
        makeExtensionsImmutable();
      }
    }
    public static com.google.protobuf.Parser<UserInTrainingList> PARSER =
        new com.google.protobuf.AbstractParser<UserInTrainingList>() {
      public UserInTrainingList parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new UserInTrainingList(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<UserInTrainingList> getParserForType() {
      return PARSER;
    }

    // repeated .biotech.osla.UserInTraining user_in_training = 1;
    public static final int USER_IN_TRAINING_FIELD_NUMBER = 1;
    private java.util.List<com.slark.pengder.protocol.MessageProtos.UserInTraining> userInTraining_;
    /**
     * <code>repeated .biotech.osla.UserInTraining user_in_training = 1;</code>
     */
    public java.util.List<com.slark.pengder.protocol.MessageProtos.UserInTraining> getUserInTrainingList() {
      return userInTraining_;
    }
    /**
     * <code>repeated .biotech.osla.UserInTraining user_in_training = 1;</code>
     */
    public java.util.List<? extends com.slark.pengder.protocol.MessageProtos.UserInTrainingOrBuilder> 
        getUserInTrainingOrBuilderList() {
      return userInTraining_;
    }
    /**
     * <code>repeated .biotech.osla.UserInTraining user_in_training = 1;</code>
     */
    public int getUserInTrainingCount() {
      return userInTraining_.size();
    }
    /**
     * <code>repeated .biotech.osla.UserInTraining user_in_training = 1;</code>
     */
    public com.slark.pengder.protocol.MessageProtos.UserInTraining getUserInTraining(int index) {
      return userInTraining_.get(index);
    }
    /**
     * <code>repeated .biotech.osla.UserInTraining user_in_training = 1;</code>
     */
    public com.slark.pengder.protocol.MessageProtos.UserInTrainingOrBuilder getUserInTrainingOrBuilder(
        int index) {
      return userInTraining_.get(index);
    }

    private void initFields() {
      userInTraining_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      for (int i = 0; i < getUserInTrainingCount(); i++) {
        if (!getUserInTraining(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < userInTraining_.size(); i++) {
        output.writeMessage(1, userInTraining_.get(i));
      }
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < userInTraining_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, userInTraining_.get(i));
      }
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.slark.pengder.protocol.MessageProtos.UserInTrainingList parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.slark.pengder.protocol.MessageProtos.UserInTrainingList parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.slark.pengder.protocol.MessageProtos.UserInTrainingList parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.slark.pengder.protocol.MessageProtos.UserInTrainingList parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.slark.pengder.protocol.MessageProtos.UserInTrainingList parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.slark.pengder.protocol.MessageProtos.UserInTrainingList parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.slark.pengder.protocol.MessageProtos.UserInTrainingList parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.slark.pengder.protocol.MessageProtos.UserInTrainingList parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.slark.pengder.protocol.MessageProtos.UserInTrainingList parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.slark.pengder.protocol.MessageProtos.UserInTrainingList parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.slark.pengder.protocol.MessageProtos.UserInTrainingList prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    /**
     * Protobuf type {@code biotech.osla.UserInTrainingList}
     *
     * <pre>
     * 培训用户列表
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.slark.pengder.protocol.MessageProtos.UserInTrainingList, Builder>
        implements com.slark.pengder.protocol.MessageProtos.UserInTrainingListOrBuilder {
      // Construct using com.slark.pengder.protocol.MessageProtos.UserInTrainingList.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        userInTraining_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.slark.pengder.protocol.MessageProtos.UserInTrainingList getDefaultInstanceForType() {
        return com.slark.pengder.protocol.MessageProtos.UserInTrainingList.getDefaultInstance();
      }

      public com.slark.pengder.protocol.MessageProtos.UserInTrainingList build() {
        com.slark.pengder.protocol.MessageProtos.UserInTrainingList result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.slark.pengder.protocol.MessageProtos.UserInTrainingList buildPartial() {
        com.slark.pengder.protocol.MessageProtos.UserInTrainingList result = new com.slark.pengder.protocol.MessageProtos.UserInTrainingList(this);
        int from_bitField0_ = bitField0_;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          userInTraining_ = java.util.Collections.unmodifiableList(userInTraining_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.userInTraining_ = userInTraining_;
        return result;
      }

      public Builder mergeFrom(com.slark.pengder.protocol.MessageProtos.UserInTrainingList other) {
        if (other == com.slark.pengder.protocol.MessageProtos.UserInTrainingList.getDefaultInstance()) return this;
        if (!other.userInTraining_.isEmpty()) {
          if (userInTraining_.isEmpty()) {
            userInTraining_ = other.userInTraining_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureUserInTrainingIsMutable();
            userInTraining_.addAll(other.userInTraining_);
          }
          
        }
        return this;
      }

      public final boolean isInitialized() {
        for (int i = 0; i < getUserInTrainingCount(); i++) {
          if (!getUserInTraining(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.slark.pengder.protocol.MessageProtos.UserInTrainingList parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.slark.pengder.protocol.MessageProtos.UserInTrainingList) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // repeated .biotech.osla.UserInTraining user_in_training = 1;
      private java.util.List<com.slark.pengder.protocol.MessageProtos.UserInTraining> userInTraining_ =
        java.util.Collections.emptyList();
      private void ensureUserInTrainingIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          userInTraining_ = new java.util.ArrayList<com.slark.pengder.protocol.MessageProtos.UserInTraining>(userInTraining_);
          bitField0_ |= 0x00000001;
         }
      }

      /**
       * <code>repeated .biotech.osla.UserInTraining user_in_training = 1;</code>
       */
      public java.util.List<com.slark.pengder.protocol.MessageProtos.UserInTraining> getUserInTrainingList() {
        return java.util.Collections.unmodifiableList(userInTraining_);
      }
      /**
       * <code>repeated .biotech.osla.UserInTraining user_in_training = 1;</code>
       */
      public int getUserInTrainingCount() {
        return userInTraining_.size();
      }
      /**
       * <code>repeated .biotech.osla.UserInTraining user_in_training = 1;</code>
       */
      public com.slark.pengder.protocol.MessageProtos.UserInTraining getUserInTraining(int index) {
        return userInTraining_.get(index);
      }
      /**
       * <code>repeated .biotech.osla.UserInTraining user_in_training = 1;</code>
       */
      public Builder setUserInTraining(
          int index, com.slark.pengder.protocol.MessageProtos.UserInTraining value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureUserInTrainingIsMutable();
        userInTraining_.set(index, value);

        return this;
      }
      /**
       * <code>repeated .biotech.osla.UserInTraining user_in_training = 1;</code>
       */
      public Builder setUserInTraining(
          int index, com.slark.pengder.protocol.MessageProtos.UserInTraining.Builder builderForValue) {
        ensureUserInTrainingIsMutable();
        userInTraining_.set(index, builderForValue.build());

        return this;
      }
      /**
       * <code>repeated .biotech.osla.UserInTraining user_in_training = 1;</code>
       */
      public Builder addUserInTraining(com.slark.pengder.protocol.MessageProtos.UserInTraining value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureUserInTrainingIsMutable();
        userInTraining_.add(value);

        return this;
      }
      /**
       * <code>repeated .biotech.osla.UserInTraining user_in_training = 1;</code>
       */
      public Builder addUserInTraining(
          int index, com.slark.pengder.protocol.MessageProtos.UserInTraining value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureUserInTrainingIsMutable();
        userInTraining_.add(index, value);

        return this;
      }
      /**
       * <code>repeated .biotech.osla.UserInTraining user_in_training = 1;</code>
       */
      public Builder addUserInTraining(
          com.slark.pengder.protocol.MessageProtos.UserInTraining.Builder builderForValue) {
        ensureUserInTrainingIsMutable();
        userInTraining_.add(builderForValue.build());

        return this;
      }
      /**
       * <code>repeated .biotech.osla.UserInTraining user_in_training = 1;</code>
       */
      public Builder addUserInTraining(
          int index, com.slark.pengder.protocol.MessageProtos.UserInTraining.Builder builderForValue) {
        ensureUserInTrainingIsMutable();
        userInTraining_.add(index, builderForValue.build());

        return this;
      }
      /**
       * <code>repeated .biotech.osla.UserInTraining user_in_training = 1;</code>
       */
      public Builder addAllUserInTraining(
          java.lang.Iterable<? extends com.slark.pengder.protocol.MessageProtos.UserInTraining> values) {
        ensureUserInTrainingIsMutable();
        super.addAll(values, userInTraining_);

        return this;
      }
      /**
       * <code>repeated .biotech.osla.UserInTraining user_in_training = 1;</code>
       */
      public Builder clearUserInTraining() {
        userInTraining_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);

        return this;
      }
      /**
       * <code>repeated .biotech.osla.UserInTraining user_in_training = 1;</code>
       */
      public Builder removeUserInTraining(int index) {
        ensureUserInTrainingIsMutable();
        userInTraining_.remove(index);

        return this;
      }

      // @@protoc_insertion_point(builder_scope:biotech.osla.UserInTrainingList)
    }

    static {
      defaultInstance = new UserInTrainingList(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:biotech.osla.UserInTrainingList)
  }

  public interface UserEventOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {

    // required int64 id = 1;
    /**
     * <code>required int64 id = 1;</code>
     *
     * <pre>
     * 事件记录ID
     * </pre>
     */
    boolean hasId();
    /**
     * <code>required int64 id = 1;</code>
     *
     * <pre>
     * 事件记录ID
     * </pre>
     */
    long getId();

    // required int32 user_id = 2;
    /**
     * <code>required int32 user_id = 2;</code>
     *
     * <pre>
     * 用户ID
     * </pre>
     */
    boolean hasUserId();
    /**
     * <code>required int32 user_id = 2;</code>
     *
     * <pre>
     * 用户ID
     * </pre>
     */
    int getUserId();

    // optional int32 group_id = 3;
    /**
     * <code>optional int32 group_id = 3;</code>
     *
     * <pre>
     * 用户课题组ID
     * </pre>
     */
    boolean hasGroupId();
    /**
     * <code>optional int32 group_id = 3;</code>
     *
     * <pre>
     * 用户课题组ID
     * </pre>
     */
    int getGroupId();

    // required string card_serial = 4;
    /**
     * <code>required string card_serial = 4;</code>
     *
     * <pre>
     * 卡号
     * </pre>
     */
    boolean hasCardSerial();
    /**
     * <code>required string card_serial = 4;</code>
     *
     * <pre>
     * 卡号
     * </pre>
     */
    java.lang.String getCardSerial();
    /**
     * <code>required string card_serial = 4;</code>
     *
     * <pre>
     * 卡号
     * </pre>
     */
    com.google.protobuf.ByteString
        getCardSerialBytes();

    // required int32 card_type = 5;
    /**
     * <code>required int32 card_type = 5;</code>
     *
     * <pre>
     * 卡类型
     * </pre>
     */
    boolean hasCardType();
    /**
     * <code>required int32 card_type = 5;</code>
     *
     * <pre>
     * 卡类型
     * </pre>
     */
    int getCardType();

    // required int32 action_type = 6;
    /**
     * <code>required int32 action_type = 6;</code>
     *
     * <pre>
     * 动作类型
     * </pre>
     */
    boolean hasActionType();
    /**
     * <code>required int32 action_type = 6;</code>
     *
     * <pre>
     * 动作类型
     * </pre>
     */
    int getActionType();

    // required int32 action_result = 7;
    /**
     * <code>required int32 action_result = 7;</code>
     *
     * <pre>
     * 动作结果
     * </pre>
     */
    boolean hasActionResult();
    /**
     * <code>required int32 action_result = 7;</code>
     *
     * <pre>
     * 动作结果
     * </pre>
     */
    int getActionResult();

    // required int32 create_time = 8;
    /**
     * <code>required int32 create_time = 8;</code>
     *
     * <pre>
     * 发生时间
     * </pre>
     */
    boolean hasCreateTime();
    /**
     * <code>required int32 create_time = 8;</code>
     *
     * <pre>
     * 发生时间
     * </pre>
     */
    int getCreateTime();

    // required int32 instrument_id = 9;
    /**
     * <code>required int32 instrument_id = 9;</code>
     *
     * <pre>
     * 仪器ID
     * </pre>
     */
    boolean hasInstrumentId();
    /**
     * <code>required int32 instrument_id = 9;</code>
     *
     * <pre>
     * 仪器ID
     * </pre>
     */
    int getInstrumentId();
  }
  /**
   * Protobuf type {@code biotech.osla.UserEvent}
   *
   * <pre>
   * 刷卡机用户事件
   * </pre>
   */
  public static final class UserEvent extends
      com.google.protobuf.GeneratedMessageLite
      implements UserEventOrBuilder {
    // Use UserEvent.newBuilder() to construct.
    private UserEvent(com.google.protobuf.GeneratedMessageLite.Builder builder) {
      super(builder);

    }
    private UserEvent(boolean noInit) {}

    private static final UserEvent defaultInstance;
    public static UserEvent getDefaultInstance() {
      return defaultInstance;
    }

    public UserEvent getDefaultInstanceForType() {
      return defaultInstance;
    }

    private UserEvent(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              id_ = input.readInt64();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              userId_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              groupId_ = input.readInt32();
              break;
            }
            case 34: {
              bitField0_ |= 0x00000008;
              cardSerial_ = input.readBytes();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              cardType_ = input.readInt32();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              actionType_ = input.readInt32();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000040;
              actionResult_ = input.readInt32();
              break;
            }
            case 64: {
              bitField0_ |= 0x00000080;
              createTime_ = input.readInt32();
              break;
            }
            case 72: {
              bitField0_ |= 0x00000100;
              instrumentId_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static com.google.protobuf.Parser<UserEvent> PARSER =
        new com.google.protobuf.AbstractParser<UserEvent>() {
      public UserEvent parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new UserEvent(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<UserEvent> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required int64 id = 1;
    public static final int ID_FIELD_NUMBER = 1;
    private long id_;
    /**
     * <code>required int64 id = 1;</code>
     *
     * <pre>
     * 事件记录ID
     * </pre>
     */
    public boolean hasId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int64 id = 1;</code>
     *
     * <pre>
     * 事件记录ID
     * </pre>
     */
    public long getId() {
      return id_;
    }

    // required int32 user_id = 2;
    public static final int USER_ID_FIELD_NUMBER = 2;
    private int userId_;
    /**
     * <code>required int32 user_id = 2;</code>
     *
     * <pre>
     * 用户ID
     * </pre>
     */
    public boolean hasUserId() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required int32 user_id = 2;</code>
     *
     * <pre>
     * 用户ID
     * </pre>
     */
    public int getUserId() {
      return userId_;
    }

    // optional int32 group_id = 3;
    public static final int GROUP_ID_FIELD_NUMBER = 3;
    private int groupId_;
    /**
     * <code>optional int32 group_id = 3;</code>
     *
     * <pre>
     * 用户课题组ID
     * </pre>
     */
    public boolean hasGroupId() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int32 group_id = 3;</code>
     *
     * <pre>
     * 用户课题组ID
     * </pre>
     */
    public int getGroupId() {
      return groupId_;
    }

    // required string card_serial = 4;
    public static final int CARD_SERIAL_FIELD_NUMBER = 4;
    private java.lang.Object cardSerial_;
    /**
     * <code>required string card_serial = 4;</code>
     *
     * <pre>
     * 卡号
     * </pre>
     */
    public boolean hasCardSerial() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>required string card_serial = 4;</code>
     *
     * <pre>
     * 卡号
     * </pre>
     */
    public java.lang.String getCardSerial() {
      java.lang.Object ref = cardSerial_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          cardSerial_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string card_serial = 4;</code>
     *
     * <pre>
     * 卡号
     * </pre>
     */
    public com.google.protobuf.ByteString
        getCardSerialBytes() {
      java.lang.Object ref = cardSerial_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        cardSerial_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // required int32 card_type = 5;
    public static final int CARD_TYPE_FIELD_NUMBER = 5;
    private int cardType_;
    /**
     * <code>required int32 card_type = 5;</code>
     *
     * <pre>
     * 卡类型
     * </pre>
     */
    public boolean hasCardType() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>required int32 card_type = 5;</code>
     *
     * <pre>
     * 卡类型
     * </pre>
     */
    public int getCardType() {
      return cardType_;
    }

    // required int32 action_type = 6;
    public static final int ACTION_TYPE_FIELD_NUMBER = 6;
    private int actionType_;
    /**
     * <code>required int32 action_type = 6;</code>
     *
     * <pre>
     * 动作类型
     * </pre>
     */
    public boolean hasActionType() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>required int32 action_type = 6;</code>
     *
     * <pre>
     * 动作类型
     * </pre>
     */
    public int getActionType() {
      return actionType_;
    }

    // required int32 action_result = 7;
    public static final int ACTION_RESULT_FIELD_NUMBER = 7;
    private int actionResult_;
    /**
     * <code>required int32 action_result = 7;</code>
     *
     * <pre>
     * 动作结果
     * </pre>
     */
    public boolean hasActionResult() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>required int32 action_result = 7;</code>
     *
     * <pre>
     * 动作结果
     * </pre>
     */
    public int getActionResult() {
      return actionResult_;
    }

    // required int32 create_time = 8;
    public static final int CREATE_TIME_FIELD_NUMBER = 8;
    private int createTime_;
    /**
     * <code>required int32 create_time = 8;</code>
     *
     * <pre>
     * 发生时间
     * </pre>
     */
    public boolean hasCreateTime() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>required int32 create_time = 8;</code>
     *
     * <pre>
     * 发生时间
     * </pre>
     */
    public int getCreateTime() {
      return createTime_;
    }

    // required int32 instrument_id = 9;
    public static final int INSTRUMENT_ID_FIELD_NUMBER = 9;
    private int instrumentId_;
    /**
     * <code>required int32 instrument_id = 9;</code>
     *
     * <pre>
     * 仪器ID
     * </pre>
     */
    public boolean hasInstrumentId() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>required int32 instrument_id = 9;</code>
     *
     * <pre>
     * 仪器ID
     * </pre>
     */
    public int getInstrumentId() {
      return instrumentId_;
    }

    private void initFields() {
      id_ = 0L;
      userId_ = 0;
      groupId_ = 0;
      cardSerial_ = "";
      cardType_ = 0;
      actionType_ = 0;
      actionResult_ = 0;
      createTime_ = 0;
      instrumentId_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasUserId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasCardSerial()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasCardType()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasActionType()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasActionResult()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasCreateTime()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasInstrumentId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt64(1, id_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, userId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, groupId_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeBytes(4, getCardSerialBytes());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(5, cardType_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeInt32(6, actionType_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeInt32(7, actionResult_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeInt32(8, createTime_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeInt32(9, instrumentId_);
      }
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, id_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, userId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, groupId_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(4, getCardSerialBytes());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, cardType_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, actionType_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(7, actionResult_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(8, createTime_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(9, instrumentId_);
      }
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.slark.pengder.protocol.MessageProtos.UserEvent parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.slark.pengder.protocol.MessageProtos.UserEvent parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.slark.pengder.protocol.MessageProtos.UserEvent parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.slark.pengder.protocol.MessageProtos.UserEvent parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.slark.pengder.protocol.MessageProtos.UserEvent parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.slark.pengder.protocol.MessageProtos.UserEvent parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.slark.pengder.protocol.MessageProtos.UserEvent parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.slark.pengder.protocol.MessageProtos.UserEvent parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.slark.pengder.protocol.MessageProtos.UserEvent parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.slark.pengder.protocol.MessageProtos.UserEvent parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.slark.pengder.protocol.MessageProtos.UserEvent prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    /**
     * Protobuf type {@code biotech.osla.UserEvent}
     *
     * <pre>
     * 刷卡机用户事件
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.slark.pengder.protocol.MessageProtos.UserEvent, Builder>
        implements com.slark.pengder.protocol.MessageProtos.UserEventOrBuilder {
      // Construct using com.slark.pengder.protocol.MessageProtos.UserEvent.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        id_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        userId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        groupId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        cardSerial_ = "";
        bitField0_ = (bitField0_ & ~0x00000008);
        cardType_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        actionType_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        actionResult_ = 0;
        bitField0_ = (bitField0_ & ~0x00000040);
        createTime_ = 0;
        bitField0_ = (bitField0_ & ~0x00000080);
        instrumentId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000100);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.slark.pengder.protocol.MessageProtos.UserEvent getDefaultInstanceForType() {
        return com.slark.pengder.protocol.MessageProtos.UserEvent.getDefaultInstance();
      }

      public com.slark.pengder.protocol.MessageProtos.UserEvent build() {
        com.slark.pengder.protocol.MessageProtos.UserEvent result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.slark.pengder.protocol.MessageProtos.UserEvent buildPartial() {
        com.slark.pengder.protocol.MessageProtos.UserEvent result = new com.slark.pengder.protocol.MessageProtos.UserEvent(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.id_ = id_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.userId_ = userId_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.groupId_ = groupId_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.cardSerial_ = cardSerial_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.cardType_ = cardType_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.actionType_ = actionType_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.actionResult_ = actionResult_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.createTime_ = createTime_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        result.instrumentId_ = instrumentId_;
        result.bitField0_ = to_bitField0_;
        return result;
      }

      public Builder mergeFrom(com.slark.pengder.protocol.MessageProtos.UserEvent other) {
        if (other == com.slark.pengder.protocol.MessageProtos.UserEvent.getDefaultInstance()) return this;
        if (other.hasId()) {
          setId(other.getId());
        }
        if (other.hasUserId()) {
          setUserId(other.getUserId());
        }
        if (other.hasGroupId()) {
          setGroupId(other.getGroupId());
        }
        if (other.hasCardSerial()) {
          bitField0_ |= 0x00000008;
          cardSerial_ = other.cardSerial_;
          
        }
        if (other.hasCardType()) {
          setCardType(other.getCardType());
        }
        if (other.hasActionType()) {
          setActionType(other.getActionType());
        }
        if (other.hasActionResult()) {
          setActionResult(other.getActionResult());
        }
        if (other.hasCreateTime()) {
          setCreateTime(other.getCreateTime());
        }
        if (other.hasInstrumentId()) {
          setInstrumentId(other.getInstrumentId());
        }
        return this;
      }

      public final boolean isInitialized() {
        if (!hasId()) {
          
          return false;
        }
        if (!hasUserId()) {
          
          return false;
        }
        if (!hasCardSerial()) {
          
          return false;
        }
        if (!hasCardType()) {
          
          return false;
        }
        if (!hasActionType()) {
          
          return false;
        }
        if (!hasActionResult()) {
          
          return false;
        }
        if (!hasCreateTime()) {
          
          return false;
        }
        if (!hasInstrumentId()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.slark.pengder.protocol.MessageProtos.UserEvent parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.slark.pengder.protocol.MessageProtos.UserEvent) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required int64 id = 1;
      private long id_ ;
      /**
       * <code>required int64 id = 1;</code>
       *
       * <pre>
       * 事件记录ID
       * </pre>
       */
      public boolean hasId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int64 id = 1;</code>
       *
       * <pre>
       * 事件记录ID
       * </pre>
       */
      public long getId() {
        return id_;
      }
      /**
       * <code>required int64 id = 1;</code>
       *
       * <pre>
       * 事件记录ID
       * </pre>
       */
      public Builder setId(long value) {
        bitField0_ |= 0x00000001;
        id_ = value;
        
        return this;
      }
      /**
       * <code>required int64 id = 1;</code>
       *
       * <pre>
       * 事件记录ID
       * </pre>
       */
      public Builder clearId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        id_ = 0L;
        
        return this;
      }

      // required int32 user_id = 2;
      private int userId_ ;
      /**
       * <code>required int32 user_id = 2;</code>
       *
       * <pre>
       * 用户ID
       * </pre>
       */
      public boolean hasUserId() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required int32 user_id = 2;</code>
       *
       * <pre>
       * 用户ID
       * </pre>
       */
      public int getUserId() {
        return userId_;
      }
      /**
       * <code>required int32 user_id = 2;</code>
       *
       * <pre>
       * 用户ID
       * </pre>
       */
      public Builder setUserId(int value) {
        bitField0_ |= 0x00000002;
        userId_ = value;
        
        return this;
      }
      /**
       * <code>required int32 user_id = 2;</code>
       *
       * <pre>
       * 用户ID
       * </pre>
       */
      public Builder clearUserId() {
        bitField0_ = (bitField0_ & ~0x00000002);
        userId_ = 0;
        
        return this;
      }

      // optional int32 group_id = 3;
      private int groupId_ ;
      /**
       * <code>optional int32 group_id = 3;</code>
       *
       * <pre>
       * 用户课题组ID
       * </pre>
       */
      public boolean hasGroupId() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int32 group_id = 3;</code>
       *
       * <pre>
       * 用户课题组ID
       * </pre>
       */
      public int getGroupId() {
        return groupId_;
      }
      /**
       * <code>optional int32 group_id = 3;</code>
       *
       * <pre>
       * 用户课题组ID
       * </pre>
       */
      public Builder setGroupId(int value) {
        bitField0_ |= 0x00000004;
        groupId_ = value;
        
        return this;
      }
      /**
       * <code>optional int32 group_id = 3;</code>
       *
       * <pre>
       * 用户课题组ID
       * </pre>
       */
      public Builder clearGroupId() {
        bitField0_ = (bitField0_ & ~0x00000004);
        groupId_ = 0;
        
        return this;
      }

      // required string card_serial = 4;
      private java.lang.Object cardSerial_ = "";
      /**
       * <code>required string card_serial = 4;</code>
       *
       * <pre>
       * 卡号
       * </pre>
       */
      public boolean hasCardSerial() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>required string card_serial = 4;</code>
       *
       * <pre>
       * 卡号
       * </pre>
       */
      public java.lang.String getCardSerial() {
        java.lang.Object ref = cardSerial_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          cardSerial_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string card_serial = 4;</code>
       *
       * <pre>
       * 卡号
       * </pre>
       */
      public com.google.protobuf.ByteString
          getCardSerialBytes() {
        java.lang.Object ref = cardSerial_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          cardSerial_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string card_serial = 4;</code>
       *
       * <pre>
       * 卡号
       * </pre>
       */
      public Builder setCardSerial(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        cardSerial_ = value;
        
        return this;
      }
      /**
       * <code>required string card_serial = 4;</code>
       *
       * <pre>
       * 卡号
       * </pre>
       */
      public Builder clearCardSerial() {
        bitField0_ = (bitField0_ & ~0x00000008);
        cardSerial_ = getDefaultInstance().getCardSerial();
        
        return this;
      }
      /**
       * <code>required string card_serial = 4;</code>
       *
       * <pre>
       * 卡号
       * </pre>
       */
      public Builder setCardSerialBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        cardSerial_ = value;
        
        return this;
      }

      // required int32 card_type = 5;
      private int cardType_ ;
      /**
       * <code>required int32 card_type = 5;</code>
       *
       * <pre>
       * 卡类型
       * </pre>
       */
      public boolean hasCardType() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>required int32 card_type = 5;</code>
       *
       * <pre>
       * 卡类型
       * </pre>
       */
      public int getCardType() {
        return cardType_;
      }
      /**
       * <code>required int32 card_type = 5;</code>
       *
       * <pre>
       * 卡类型
       * </pre>
       */
      public Builder setCardType(int value) {
        bitField0_ |= 0x00000010;
        cardType_ = value;
        
        return this;
      }
      /**
       * <code>required int32 card_type = 5;</code>
       *
       * <pre>
       * 卡类型
       * </pre>
       */
      public Builder clearCardType() {
        bitField0_ = (bitField0_ & ~0x00000010);
        cardType_ = 0;
        
        return this;
      }

      // required int32 action_type = 6;
      private int actionType_ ;
      /**
       * <code>required int32 action_type = 6;</code>
       *
       * <pre>
       * 动作类型
       * </pre>
       */
      public boolean hasActionType() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>required int32 action_type = 6;</code>
       *
       * <pre>
       * 动作类型
       * </pre>
       */
      public int getActionType() {
        return actionType_;
      }
      /**
       * <code>required int32 action_type = 6;</code>
       *
       * <pre>
       * 动作类型
       * </pre>
       */
      public Builder setActionType(int value) {
        bitField0_ |= 0x00000020;
        actionType_ = value;
        
        return this;
      }
      /**
       * <code>required int32 action_type = 6;</code>
       *
       * <pre>
       * 动作类型
       * </pre>
       */
      public Builder clearActionType() {
        bitField0_ = (bitField0_ & ~0x00000020);
        actionType_ = 0;
        
        return this;
      }

      // required int32 action_result = 7;
      private int actionResult_ ;
      /**
       * <code>required int32 action_result = 7;</code>
       *
       * <pre>
       * 动作结果
       * </pre>
       */
      public boolean hasActionResult() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>required int32 action_result = 7;</code>
       *
       * <pre>
       * 动作结果
       * </pre>
       */
      public int getActionResult() {
        return actionResult_;
      }
      /**
       * <code>required int32 action_result = 7;</code>
       *
       * <pre>
       * 动作结果
       * </pre>
       */
      public Builder setActionResult(int value) {
        bitField0_ |= 0x00000040;
        actionResult_ = value;
        
        return this;
      }
      /**
       * <code>required int32 action_result = 7;</code>
       *
       * <pre>
       * 动作结果
       * </pre>
       */
      public Builder clearActionResult() {
        bitField0_ = (bitField0_ & ~0x00000040);
        actionResult_ = 0;
        
        return this;
      }

      // required int32 create_time = 8;
      private int createTime_ ;
      /**
       * <code>required int32 create_time = 8;</code>
       *
       * <pre>
       * 发生时间
       * </pre>
       */
      public boolean hasCreateTime() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>required int32 create_time = 8;</code>
       *
       * <pre>
       * 发生时间
       * </pre>
       */
      public int getCreateTime() {
        return createTime_;
      }
      /**
       * <code>required int32 create_time = 8;</code>
       *
       * <pre>
       * 发生时间
       * </pre>
       */
      public Builder setCreateTime(int value) {
        bitField0_ |= 0x00000080;
        createTime_ = value;
        
        return this;
      }
      /**
       * <code>required int32 create_time = 8;</code>
       *
       * <pre>
       * 发生时间
       * </pre>
       */
      public Builder clearCreateTime() {
        bitField0_ = (bitField0_ & ~0x00000080);
        createTime_ = 0;
        
        return this;
      }

      // required int32 instrument_id = 9;
      private int instrumentId_ ;
      /**
       * <code>required int32 instrument_id = 9;</code>
       *
       * <pre>
       * 仪器ID
       * </pre>
       */
      public boolean hasInstrumentId() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>required int32 instrument_id = 9;</code>
       *
       * <pre>
       * 仪器ID
       * </pre>
       */
      public int getInstrumentId() {
        return instrumentId_;
      }
      /**
       * <code>required int32 instrument_id = 9;</code>
       *
       * <pre>
       * 仪器ID
       * </pre>
       */
      public Builder setInstrumentId(int value) {
        bitField0_ |= 0x00000100;
        instrumentId_ = value;
        
        return this;
      }
      /**
       * <code>required int32 instrument_id = 9;</code>
       *
       * <pre>
       * 仪器ID
       * </pre>
       */
      public Builder clearInstrumentId() {
        bitField0_ = (bitField0_ & ~0x00000100);
        instrumentId_ = 0;
        
        return this;
      }

      // @@protoc_insertion_point(builder_scope:biotech.osla.UserEvent)
    }

    static {
      defaultInstance = new UserEvent(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:biotech.osla.UserEvent)
  }

  public interface UserEventListOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {

    // repeated .biotech.osla.UserEvent user_event = 1;
    /**
     * <code>repeated .biotech.osla.UserEvent user_event = 1;</code>
     */
    java.util.List<com.slark.pengder.protocol.MessageProtos.UserEvent> 
        getUserEventList();
    /**
     * <code>repeated .biotech.osla.UserEvent user_event = 1;</code>
     */
    com.slark.pengder.protocol.MessageProtos.UserEvent getUserEvent(int index);
    /**
     * <code>repeated .biotech.osla.UserEvent user_event = 1;</code>
     */
    int getUserEventCount();
  }
  /**
   * Protobuf type {@code biotech.osla.UserEventList}
   *
   * <pre>
   * 刷卡机用户事件列表
   * </pre>
   */
  public static final class UserEventList extends
      com.google.protobuf.GeneratedMessageLite
      implements UserEventListOrBuilder {
    // Use UserEventList.newBuilder() to construct.
    private UserEventList(com.google.protobuf.GeneratedMessageLite.Builder builder) {
      super(builder);

    }
    private UserEventList(boolean noInit) {}

    private static final UserEventList defaultInstance;
    public static UserEventList getDefaultInstance() {
      return defaultInstance;
    }

    public UserEventList getDefaultInstanceForType() {
      return defaultInstance;
    }

    private UserEventList(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                userEvent_ = new java.util.ArrayList<com.slark.pengder.protocol.MessageProtos.UserEvent>();
                mutable_bitField0_ |= 0x00000001;
              }
              userEvent_.add(input.readMessage(com.slark.pengder.protocol.MessageProtos.UserEvent.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          userEvent_ = java.util.Collections.unmodifiableList(userEvent_);
        }
        makeExtensionsImmutable();
      }
    }
    public static com.google.protobuf.Parser<UserEventList> PARSER =
        new com.google.protobuf.AbstractParser<UserEventList>() {
      public UserEventList parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new UserEventList(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<UserEventList> getParserForType() {
      return PARSER;
    }

    // repeated .biotech.osla.UserEvent user_event = 1;
    public static final int USER_EVENT_FIELD_NUMBER = 1;
    private java.util.List<com.slark.pengder.protocol.MessageProtos.UserEvent> userEvent_;
    /**
     * <code>repeated .biotech.osla.UserEvent user_event = 1;</code>
     */
    public java.util.List<com.slark.pengder.protocol.MessageProtos.UserEvent> getUserEventList() {
      return userEvent_;
    }
    /**
     * <code>repeated .biotech.osla.UserEvent user_event = 1;</code>
     */
    public java.util.List<? extends com.slark.pengder.protocol.MessageProtos.UserEventOrBuilder> 
        getUserEventOrBuilderList() {
      return userEvent_;
    }
    /**
     * <code>repeated .biotech.osla.UserEvent user_event = 1;</code>
     */
    public int getUserEventCount() {
      return userEvent_.size();
    }
    /**
     * <code>repeated .biotech.osla.UserEvent user_event = 1;</code>
     */
    public com.slark.pengder.protocol.MessageProtos.UserEvent getUserEvent(int index) {
      return userEvent_.get(index);
    }
    /**
     * <code>repeated .biotech.osla.UserEvent user_event = 1;</code>
     */
    public com.slark.pengder.protocol.MessageProtos.UserEventOrBuilder getUserEventOrBuilder(
        int index) {
      return userEvent_.get(index);
    }

    private void initFields() {
      userEvent_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      for (int i = 0; i < getUserEventCount(); i++) {
        if (!getUserEvent(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < userEvent_.size(); i++) {
        output.writeMessage(1, userEvent_.get(i));
      }
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < userEvent_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, userEvent_.get(i));
      }
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.slark.pengder.protocol.MessageProtos.UserEventList parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.slark.pengder.protocol.MessageProtos.UserEventList parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.slark.pengder.protocol.MessageProtos.UserEventList parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.slark.pengder.protocol.MessageProtos.UserEventList parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.slark.pengder.protocol.MessageProtos.UserEventList parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.slark.pengder.protocol.MessageProtos.UserEventList parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.slark.pengder.protocol.MessageProtos.UserEventList parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.slark.pengder.protocol.MessageProtos.UserEventList parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.slark.pengder.protocol.MessageProtos.UserEventList parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.slark.pengder.protocol.MessageProtos.UserEventList parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.slark.pengder.protocol.MessageProtos.UserEventList prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    /**
     * Protobuf type {@code biotech.osla.UserEventList}
     *
     * <pre>
     * 刷卡机用户事件列表
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.slark.pengder.protocol.MessageProtos.UserEventList, Builder>
        implements com.slark.pengder.protocol.MessageProtos.UserEventListOrBuilder {
      // Construct using com.slark.pengder.protocol.MessageProtos.UserEventList.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        userEvent_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.slark.pengder.protocol.MessageProtos.UserEventList getDefaultInstanceForType() {
        return com.slark.pengder.protocol.MessageProtos.UserEventList.getDefaultInstance();
      }

      public com.slark.pengder.protocol.MessageProtos.UserEventList build() {
        com.slark.pengder.protocol.MessageProtos.UserEventList result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.slark.pengder.protocol.MessageProtos.UserEventList buildPartial() {
        com.slark.pengder.protocol.MessageProtos.UserEventList result = new com.slark.pengder.protocol.MessageProtos.UserEventList(this);
        int from_bitField0_ = bitField0_;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          userEvent_ = java.util.Collections.unmodifiableList(userEvent_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.userEvent_ = userEvent_;
        return result;
      }

      public Builder mergeFrom(com.slark.pengder.protocol.MessageProtos.UserEventList other) {
        if (other == com.slark.pengder.protocol.MessageProtos.UserEventList.getDefaultInstance()) return this;
        if (!other.userEvent_.isEmpty()) {
          if (userEvent_.isEmpty()) {
            userEvent_ = other.userEvent_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureUserEventIsMutable();
            userEvent_.addAll(other.userEvent_);
          }
          
        }
        return this;
      }

      public final boolean isInitialized() {
        for (int i = 0; i < getUserEventCount(); i++) {
          if (!getUserEvent(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.slark.pengder.protocol.MessageProtos.UserEventList parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.slark.pengder.protocol.MessageProtos.UserEventList) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // repeated .biotech.osla.UserEvent user_event = 1;
      private java.util.List<com.slark.pengder.protocol.MessageProtos.UserEvent> userEvent_ =
        java.util.Collections.emptyList();
      private void ensureUserEventIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          userEvent_ = new java.util.ArrayList<com.slark.pengder.protocol.MessageProtos.UserEvent>(userEvent_);
          bitField0_ |= 0x00000001;
         }
      }

      /**
       * <code>repeated .biotech.osla.UserEvent user_event = 1;</code>
       */
      public java.util.List<com.slark.pengder.protocol.MessageProtos.UserEvent> getUserEventList() {
        return java.util.Collections.unmodifiableList(userEvent_);
      }
      /**
       * <code>repeated .biotech.osla.UserEvent user_event = 1;</code>
       */
      public int getUserEventCount() {
        return userEvent_.size();
      }
      /**
       * <code>repeated .biotech.osla.UserEvent user_event = 1;</code>
       */
      public com.slark.pengder.protocol.MessageProtos.UserEvent getUserEvent(int index) {
        return userEvent_.get(index);
      }
      /**
       * <code>repeated .biotech.osla.UserEvent user_event = 1;</code>
       */
      public Builder setUserEvent(
          int index, com.slark.pengder.protocol.MessageProtos.UserEvent value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureUserEventIsMutable();
        userEvent_.set(index, value);

        return this;
      }
      /**
       * <code>repeated .biotech.osla.UserEvent user_event = 1;</code>
       */
      public Builder setUserEvent(
          int index, com.slark.pengder.protocol.MessageProtos.UserEvent.Builder builderForValue) {
        ensureUserEventIsMutable();
        userEvent_.set(index, builderForValue.build());

        return this;
      }
      /**
       * <code>repeated .biotech.osla.UserEvent user_event = 1;</code>
       */
      public Builder addUserEvent(com.slark.pengder.protocol.MessageProtos.UserEvent value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureUserEventIsMutable();
        userEvent_.add(value);

        return this;
      }
      /**
       * <code>repeated .biotech.osla.UserEvent user_event = 1;</code>
       */
      public Builder addUserEvent(
          int index, com.slark.pengder.protocol.MessageProtos.UserEvent value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureUserEventIsMutable();
        userEvent_.add(index, value);

        return this;
      }
      /**
       * <code>repeated .biotech.osla.UserEvent user_event = 1;</code>
       */
      public Builder addUserEvent(
          com.slark.pengder.protocol.MessageProtos.UserEvent.Builder builderForValue) {
        ensureUserEventIsMutable();
        userEvent_.add(builderForValue.build());

        return this;
      }
      /**
       * <code>repeated .biotech.osla.UserEvent user_event = 1;</code>
       */
      public Builder addUserEvent(
          int index, com.slark.pengder.protocol.MessageProtos.UserEvent.Builder builderForValue) {
        ensureUserEventIsMutable();
        userEvent_.add(index, builderForValue.build());

        return this;
      }
      /**
       * <code>repeated .biotech.osla.UserEvent user_event = 1;</code>
       */
      public Builder addAllUserEvent(
          java.lang.Iterable<? extends com.slark.pengder.protocol.MessageProtos.UserEvent> values) {
        ensureUserEventIsMutable();
        super.addAll(values, userEvent_);

        return this;
      }
      /**
       * <code>repeated .biotech.osla.UserEvent user_event = 1;</code>
       */
      public Builder clearUserEvent() {
        userEvent_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);

        return this;
      }
      /**
       * <code>repeated .biotech.osla.UserEvent user_event = 1;</code>
       */
      public Builder removeUserEvent(int index) {
        ensureUserEventIsMutable();
        userEvent_.remove(index);

        return this;
      }

      // @@protoc_insertion_point(builder_scope:biotech.osla.UserEventList)
    }

    static {
      defaultInstance = new UserEventList(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:biotech.osla.UserEventList)
  }

  public interface SystemEventOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {

    // required int64 id = 1;
    /**
     * <code>required int64 id = 1;</code>
     *
     * <pre>
     * 事件记录ID
     * </pre>
     */
    boolean hasId();
    /**
     * <code>required int64 id = 1;</code>
     *
     * <pre>
     * 事件记录ID
     * </pre>
     */
    long getId();

    // required int32 event_type = 2;
    /**
     * <code>required int32 event_type = 2;</code>
     *
     * <pre>
     * 事件类型
     * </pre>
     */
    boolean hasEventType();
    /**
     * <code>required int32 event_type = 2;</code>
     *
     * <pre>
     * 事件类型
     * </pre>
     */
    int getEventType();

    // optional int64 event_content = 3;
    /**
     * <code>optional int64 event_content = 3;</code>
     *
     * <pre>
     * 事件内容
     * </pre>
     */
    boolean hasEventContent();
    /**
     * <code>optional int64 event_content = 3;</code>
     *
     * <pre>
     * 事件内容
     * </pre>
     */
    long getEventContent();

    // required int32 create_time = 4;
    /**
     * <code>required int32 create_time = 4;</code>
     *
     * <pre>
     * 发生时间
     * </pre>
     */
    boolean hasCreateTime();
    /**
     * <code>required int32 create_time = 4;</code>
     *
     * <pre>
     * 发生时间
     * </pre>
     */
    int getCreateTime();

    // required int32 instrument_id = 5;
    /**
     * <code>required int32 instrument_id = 5;</code>
     *
     * <pre>
     * 仪器ID
     * </pre>
     */
    boolean hasInstrumentId();
    /**
     * <code>required int32 instrument_id = 5;</code>
     *
     * <pre>
     * 仪器ID
     * </pre>
     */
    int getInstrumentId();
  }
  /**
   * Protobuf type {@code biotech.osla.SystemEvent}
   *
   * <pre>
   * 刷卡机系统事件表
   * </pre>
   */
  public static final class SystemEvent extends
      com.google.protobuf.GeneratedMessageLite
      implements SystemEventOrBuilder {
    // Use SystemEvent.newBuilder() to construct.
    private SystemEvent(com.google.protobuf.GeneratedMessageLite.Builder builder) {
      super(builder);

    }
    private SystemEvent(boolean noInit) {}

    private static final SystemEvent defaultInstance;
    public static SystemEvent getDefaultInstance() {
      return defaultInstance;
    }

    public SystemEvent getDefaultInstanceForType() {
      return defaultInstance;
    }

    private SystemEvent(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              id_ = input.readInt64();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              eventType_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              eventContent_ = input.readInt64();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              createTime_ = input.readInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              instrumentId_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static com.google.protobuf.Parser<SystemEvent> PARSER =
        new com.google.protobuf.AbstractParser<SystemEvent>() {
      public SystemEvent parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new SystemEvent(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<SystemEvent> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required int64 id = 1;
    public static final int ID_FIELD_NUMBER = 1;
    private long id_;
    /**
     * <code>required int64 id = 1;</code>
     *
     * <pre>
     * 事件记录ID
     * </pre>
     */
    public boolean hasId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int64 id = 1;</code>
     *
     * <pre>
     * 事件记录ID
     * </pre>
     */
    public long getId() {
      return id_;
    }

    // required int32 event_type = 2;
    public static final int EVENT_TYPE_FIELD_NUMBER = 2;
    private int eventType_;
    /**
     * <code>required int32 event_type = 2;</code>
     *
     * <pre>
     * 事件类型
     * </pre>
     */
    public boolean hasEventType() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required int32 event_type = 2;</code>
     *
     * <pre>
     * 事件类型
     * </pre>
     */
    public int getEventType() {
      return eventType_;
    }

    // optional int64 event_content = 3;
    public static final int EVENT_CONTENT_FIELD_NUMBER = 3;
    private long eventContent_;
    /**
     * <code>optional int64 event_content = 3;</code>
     *
     * <pre>
     * 事件内容
     * </pre>
     */
    public boolean hasEventContent() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int64 event_content = 3;</code>
     *
     * <pre>
     * 事件内容
     * </pre>
     */
    public long getEventContent() {
      return eventContent_;
    }

    // required int32 create_time = 4;
    public static final int CREATE_TIME_FIELD_NUMBER = 4;
    private int createTime_;
    /**
     * <code>required int32 create_time = 4;</code>
     *
     * <pre>
     * 发生时间
     * </pre>
     */
    public boolean hasCreateTime() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>required int32 create_time = 4;</code>
     *
     * <pre>
     * 发生时间
     * </pre>
     */
    public int getCreateTime() {
      return createTime_;
    }

    // required int32 instrument_id = 5;
    public static final int INSTRUMENT_ID_FIELD_NUMBER = 5;
    private int instrumentId_;
    /**
     * <code>required int32 instrument_id = 5;</code>
     *
     * <pre>
     * 仪器ID
     * </pre>
     */
    public boolean hasInstrumentId() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>required int32 instrument_id = 5;</code>
     *
     * <pre>
     * 仪器ID
     * </pre>
     */
    public int getInstrumentId() {
      return instrumentId_;
    }

    private void initFields() {
      id_ = 0L;
      eventType_ = 0;
      eventContent_ = 0L;
      createTime_ = 0;
      instrumentId_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasEventType()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasCreateTime()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasInstrumentId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt64(1, id_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, eventType_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt64(3, eventContent_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(4, createTime_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(5, instrumentId_);
      }
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, id_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, eventType_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(3, eventContent_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, createTime_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, instrumentId_);
      }
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.slark.pengder.protocol.MessageProtos.SystemEvent parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.slark.pengder.protocol.MessageProtos.SystemEvent parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.slark.pengder.protocol.MessageProtos.SystemEvent parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.slark.pengder.protocol.MessageProtos.SystemEvent parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.slark.pengder.protocol.MessageProtos.SystemEvent parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.slark.pengder.protocol.MessageProtos.SystemEvent parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.slark.pengder.protocol.MessageProtos.SystemEvent parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.slark.pengder.protocol.MessageProtos.SystemEvent parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.slark.pengder.protocol.MessageProtos.SystemEvent parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.slark.pengder.protocol.MessageProtos.SystemEvent parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.slark.pengder.protocol.MessageProtos.SystemEvent prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    /**
     * Protobuf type {@code biotech.osla.SystemEvent}
     *
     * <pre>
     * 刷卡机系统事件表
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.slark.pengder.protocol.MessageProtos.SystemEvent, Builder>
        implements com.slark.pengder.protocol.MessageProtos.SystemEventOrBuilder {
      // Construct using com.slark.pengder.protocol.MessageProtos.SystemEvent.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        id_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        eventType_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        eventContent_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000004);
        createTime_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        instrumentId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.slark.pengder.protocol.MessageProtos.SystemEvent getDefaultInstanceForType() {
        return com.slark.pengder.protocol.MessageProtos.SystemEvent.getDefaultInstance();
      }

      public com.slark.pengder.protocol.MessageProtos.SystemEvent build() {
        com.slark.pengder.protocol.MessageProtos.SystemEvent result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.slark.pengder.protocol.MessageProtos.SystemEvent buildPartial() {
        com.slark.pengder.protocol.MessageProtos.SystemEvent result = new com.slark.pengder.protocol.MessageProtos.SystemEvent(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.id_ = id_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.eventType_ = eventType_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.eventContent_ = eventContent_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.createTime_ = createTime_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.instrumentId_ = instrumentId_;
        result.bitField0_ = to_bitField0_;
        return result;
      }

      public Builder mergeFrom(com.slark.pengder.protocol.MessageProtos.SystemEvent other) {
        if (other == com.slark.pengder.protocol.MessageProtos.SystemEvent.getDefaultInstance()) return this;
        if (other.hasId()) {
          setId(other.getId());
        }
        if (other.hasEventType()) {
          setEventType(other.getEventType());
        }
        if (other.hasEventContent()) {
          setEventContent(other.getEventContent());
        }
        if (other.hasCreateTime()) {
          setCreateTime(other.getCreateTime());
        }
        if (other.hasInstrumentId()) {
          setInstrumentId(other.getInstrumentId());
        }
        return this;
      }

      public final boolean isInitialized() {
        if (!hasId()) {
          
          return false;
        }
        if (!hasEventType()) {
          
          return false;
        }
        if (!hasCreateTime()) {
          
          return false;
        }
        if (!hasInstrumentId()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.slark.pengder.protocol.MessageProtos.SystemEvent parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.slark.pengder.protocol.MessageProtos.SystemEvent) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required int64 id = 1;
      private long id_ ;
      /**
       * <code>required int64 id = 1;</code>
       *
       * <pre>
       * 事件记录ID
       * </pre>
       */
      public boolean hasId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int64 id = 1;</code>
       *
       * <pre>
       * 事件记录ID
       * </pre>
       */
      public long getId() {
        return id_;
      }
      /**
       * <code>required int64 id = 1;</code>
       *
       * <pre>
       * 事件记录ID
       * </pre>
       */
      public Builder setId(long value) {
        bitField0_ |= 0x00000001;
        id_ = value;
        
        return this;
      }
      /**
       * <code>required int64 id = 1;</code>
       *
       * <pre>
       * 事件记录ID
       * </pre>
       */
      public Builder clearId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        id_ = 0L;
        
        return this;
      }

      // required int32 event_type = 2;
      private int eventType_ ;
      /**
       * <code>required int32 event_type = 2;</code>
       *
       * <pre>
       * 事件类型
       * </pre>
       */
      public boolean hasEventType() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required int32 event_type = 2;</code>
       *
       * <pre>
       * 事件类型
       * </pre>
       */
      public int getEventType() {
        return eventType_;
      }
      /**
       * <code>required int32 event_type = 2;</code>
       *
       * <pre>
       * 事件类型
       * </pre>
       */
      public Builder setEventType(int value) {
        bitField0_ |= 0x00000002;
        eventType_ = value;
        
        return this;
      }
      /**
       * <code>required int32 event_type = 2;</code>
       *
       * <pre>
       * 事件类型
       * </pre>
       */
      public Builder clearEventType() {
        bitField0_ = (bitField0_ & ~0x00000002);
        eventType_ = 0;
        
        return this;
      }

      // optional int64 event_content = 3;
      private long eventContent_ ;
      /**
       * <code>optional int64 event_content = 3;</code>
       *
       * <pre>
       * 事件内容
       * </pre>
       */
      public boolean hasEventContent() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int64 event_content = 3;</code>
       *
       * <pre>
       * 事件内容
       * </pre>
       */
      public long getEventContent() {
        return eventContent_;
      }
      /**
       * <code>optional int64 event_content = 3;</code>
       *
       * <pre>
       * 事件内容
       * </pre>
       */
      public Builder setEventContent(long value) {
        bitField0_ |= 0x00000004;
        eventContent_ = value;
        
        return this;
      }
      /**
       * <code>optional int64 event_content = 3;</code>
       *
       * <pre>
       * 事件内容
       * </pre>
       */
      public Builder clearEventContent() {
        bitField0_ = (bitField0_ & ~0x00000004);
        eventContent_ = 0L;
        
        return this;
      }

      // required int32 create_time = 4;
      private int createTime_ ;
      /**
       * <code>required int32 create_time = 4;</code>
       *
       * <pre>
       * 发生时间
       * </pre>
       */
      public boolean hasCreateTime() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>required int32 create_time = 4;</code>
       *
       * <pre>
       * 发生时间
       * </pre>
       */
      public int getCreateTime() {
        return createTime_;
      }
      /**
       * <code>required int32 create_time = 4;</code>
       *
       * <pre>
       * 发生时间
       * </pre>
       */
      public Builder setCreateTime(int value) {
        bitField0_ |= 0x00000008;
        createTime_ = value;
        
        return this;
      }
      /**
       * <code>required int32 create_time = 4;</code>
       *
       * <pre>
       * 发生时间
       * </pre>
       */
      public Builder clearCreateTime() {
        bitField0_ = (bitField0_ & ~0x00000008);
        createTime_ = 0;
        
        return this;
      }

      // required int32 instrument_id = 5;
      private int instrumentId_ ;
      /**
       * <code>required int32 instrument_id = 5;</code>
       *
       * <pre>
       * 仪器ID
       * </pre>
       */
      public boolean hasInstrumentId() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>required int32 instrument_id = 5;</code>
       *
       * <pre>
       * 仪器ID
       * </pre>
       */
      public int getInstrumentId() {
        return instrumentId_;
      }
      /**
       * <code>required int32 instrument_id = 5;</code>
       *
       * <pre>
       * 仪器ID
       * </pre>
       */
      public Builder setInstrumentId(int value) {
        bitField0_ |= 0x00000010;
        instrumentId_ = value;
        
        return this;
      }
      /**
       * <code>required int32 instrument_id = 5;</code>
       *
       * <pre>
       * 仪器ID
       * </pre>
       */
      public Builder clearInstrumentId() {
        bitField0_ = (bitField0_ & ~0x00000010);
        instrumentId_ = 0;
        
        return this;
      }

      // @@protoc_insertion_point(builder_scope:biotech.osla.SystemEvent)
    }

    static {
      defaultInstance = new SystemEvent(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:biotech.osla.SystemEvent)
  }

  public interface SystemEventListOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {

    // repeated .biotech.osla.SystemEvent system_event = 1;
    /**
     * <code>repeated .biotech.osla.SystemEvent system_event = 1;</code>
     */
    java.util.List<com.slark.pengder.protocol.MessageProtos.SystemEvent> 
        getSystemEventList();
    /**
     * <code>repeated .biotech.osla.SystemEvent system_event = 1;</code>
     */
    com.slark.pengder.protocol.MessageProtos.SystemEvent getSystemEvent(int index);
    /**
     * <code>repeated .biotech.osla.SystemEvent system_event = 1;</code>
     */
    int getSystemEventCount();
  }
  /**
   * Protobuf type {@code biotech.osla.SystemEventList}
   *
   * <pre>
   * 刷卡机系统事件列表
   * </pre>
   */
  public static final class SystemEventList extends
      com.google.protobuf.GeneratedMessageLite
      implements SystemEventListOrBuilder {
    // Use SystemEventList.newBuilder() to construct.
    private SystemEventList(com.google.protobuf.GeneratedMessageLite.Builder builder) {
      super(builder);

    }
    private SystemEventList(boolean noInit) {}

    private static final SystemEventList defaultInstance;
    public static SystemEventList getDefaultInstance() {
      return defaultInstance;
    }

    public SystemEventList getDefaultInstanceForType() {
      return defaultInstance;
    }

    private SystemEventList(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                systemEvent_ = new java.util.ArrayList<com.slark.pengder.protocol.MessageProtos.SystemEvent>();
                mutable_bitField0_ |= 0x00000001;
              }
              systemEvent_.add(input.readMessage(com.slark.pengder.protocol.MessageProtos.SystemEvent.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          systemEvent_ = java.util.Collections.unmodifiableList(systemEvent_);
        }
        makeExtensionsImmutable();
      }
    }
    public static com.google.protobuf.Parser<SystemEventList> PARSER =
        new com.google.protobuf.AbstractParser<SystemEventList>() {
      public SystemEventList parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new SystemEventList(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<SystemEventList> getParserForType() {
      return PARSER;
    }

    // repeated .biotech.osla.SystemEvent system_event = 1;
    public static final int SYSTEM_EVENT_FIELD_NUMBER = 1;
    private java.util.List<com.slark.pengder.protocol.MessageProtos.SystemEvent> systemEvent_;
    /**
     * <code>repeated .biotech.osla.SystemEvent system_event = 1;</code>
     */
    public java.util.List<com.slark.pengder.protocol.MessageProtos.SystemEvent> getSystemEventList() {
      return systemEvent_;
    }
    /**
     * <code>repeated .biotech.osla.SystemEvent system_event = 1;</code>
     */
    public java.util.List<? extends com.slark.pengder.protocol.MessageProtos.SystemEventOrBuilder> 
        getSystemEventOrBuilderList() {
      return systemEvent_;
    }
    /**
     * <code>repeated .biotech.osla.SystemEvent system_event = 1;</code>
     */
    public int getSystemEventCount() {
      return systemEvent_.size();
    }
    /**
     * <code>repeated .biotech.osla.SystemEvent system_event = 1;</code>
     */
    public com.slark.pengder.protocol.MessageProtos.SystemEvent getSystemEvent(int index) {
      return systemEvent_.get(index);
    }
    /**
     * <code>repeated .biotech.osla.SystemEvent system_event = 1;</code>
     */
    public com.slark.pengder.protocol.MessageProtos.SystemEventOrBuilder getSystemEventOrBuilder(
        int index) {
      return systemEvent_.get(index);
    }

    private void initFields() {
      systemEvent_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      for (int i = 0; i < getSystemEventCount(); i++) {
        if (!getSystemEvent(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < systemEvent_.size(); i++) {
        output.writeMessage(1, systemEvent_.get(i));
      }
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < systemEvent_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, systemEvent_.get(i));
      }
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.slark.pengder.protocol.MessageProtos.SystemEventList parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.slark.pengder.protocol.MessageProtos.SystemEventList parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.slark.pengder.protocol.MessageProtos.SystemEventList parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.slark.pengder.protocol.MessageProtos.SystemEventList parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.slark.pengder.protocol.MessageProtos.SystemEventList parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.slark.pengder.protocol.MessageProtos.SystemEventList parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.slark.pengder.protocol.MessageProtos.SystemEventList parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.slark.pengder.protocol.MessageProtos.SystemEventList parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.slark.pengder.protocol.MessageProtos.SystemEventList parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.slark.pengder.protocol.MessageProtos.SystemEventList parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.slark.pengder.protocol.MessageProtos.SystemEventList prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    /**
     * Protobuf type {@code biotech.osla.SystemEventList}
     *
     * <pre>
     * 刷卡机系统事件列表
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.slark.pengder.protocol.MessageProtos.SystemEventList, Builder>
        implements com.slark.pengder.protocol.MessageProtos.SystemEventListOrBuilder {
      // Construct using com.slark.pengder.protocol.MessageProtos.SystemEventList.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        systemEvent_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.slark.pengder.protocol.MessageProtos.SystemEventList getDefaultInstanceForType() {
        return com.slark.pengder.protocol.MessageProtos.SystemEventList.getDefaultInstance();
      }

      public com.slark.pengder.protocol.MessageProtos.SystemEventList build() {
        com.slark.pengder.protocol.MessageProtos.SystemEventList result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.slark.pengder.protocol.MessageProtos.SystemEventList buildPartial() {
        com.slark.pengder.protocol.MessageProtos.SystemEventList result = new com.slark.pengder.protocol.MessageProtos.SystemEventList(this);
        int from_bitField0_ = bitField0_;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          systemEvent_ = java.util.Collections.unmodifiableList(systemEvent_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.systemEvent_ = systemEvent_;
        return result;
      }

      public Builder mergeFrom(com.slark.pengder.protocol.MessageProtos.SystemEventList other) {
        if (other == com.slark.pengder.protocol.MessageProtos.SystemEventList.getDefaultInstance()) return this;
        if (!other.systemEvent_.isEmpty()) {
          if (systemEvent_.isEmpty()) {
            systemEvent_ = other.systemEvent_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureSystemEventIsMutable();
            systemEvent_.addAll(other.systemEvent_);
          }
          
        }
        return this;
      }

      public final boolean isInitialized() {
        for (int i = 0; i < getSystemEventCount(); i++) {
          if (!getSystemEvent(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.slark.pengder.protocol.MessageProtos.SystemEventList parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.slark.pengder.protocol.MessageProtos.SystemEventList) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // repeated .biotech.osla.SystemEvent system_event = 1;
      private java.util.List<com.slark.pengder.protocol.MessageProtos.SystemEvent> systemEvent_ =
        java.util.Collections.emptyList();
      private void ensureSystemEventIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          systemEvent_ = new java.util.ArrayList<com.slark.pengder.protocol.MessageProtos.SystemEvent>(systemEvent_);
          bitField0_ |= 0x00000001;
         }
      }

      /**
       * <code>repeated .biotech.osla.SystemEvent system_event = 1;</code>
       */
      public java.util.List<com.slark.pengder.protocol.MessageProtos.SystemEvent> getSystemEventList() {
        return java.util.Collections.unmodifiableList(systemEvent_);
      }
      /**
       * <code>repeated .biotech.osla.SystemEvent system_event = 1;</code>
       */
      public int getSystemEventCount() {
        return systemEvent_.size();
      }
      /**
       * <code>repeated .biotech.osla.SystemEvent system_event = 1;</code>
       */
      public com.slark.pengder.protocol.MessageProtos.SystemEvent getSystemEvent(int index) {
        return systemEvent_.get(index);
      }
      /**
       * <code>repeated .biotech.osla.SystemEvent system_event = 1;</code>
       */
      public Builder setSystemEvent(
          int index, com.slark.pengder.protocol.MessageProtos.SystemEvent value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureSystemEventIsMutable();
        systemEvent_.set(index, value);

        return this;
      }
      /**
       * <code>repeated .biotech.osla.SystemEvent system_event = 1;</code>
       */
      public Builder setSystemEvent(
          int index, com.slark.pengder.protocol.MessageProtos.SystemEvent.Builder builderForValue) {
        ensureSystemEventIsMutable();
        systemEvent_.set(index, builderForValue.build());

        return this;
      }
      /**
       * <code>repeated .biotech.osla.SystemEvent system_event = 1;</code>
       */
      public Builder addSystemEvent(com.slark.pengder.protocol.MessageProtos.SystemEvent value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureSystemEventIsMutable();
        systemEvent_.add(value);

        return this;
      }
      /**
       * <code>repeated .biotech.osla.SystemEvent system_event = 1;</code>
       */
      public Builder addSystemEvent(
          int index, com.slark.pengder.protocol.MessageProtos.SystemEvent value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureSystemEventIsMutable();
        systemEvent_.add(index, value);

        return this;
      }
      /**
       * <code>repeated .biotech.osla.SystemEvent system_event = 1;</code>
       */
      public Builder addSystemEvent(
          com.slark.pengder.protocol.MessageProtos.SystemEvent.Builder builderForValue) {
        ensureSystemEventIsMutable();
        systemEvent_.add(builderForValue.build());

        return this;
      }
      /**
       * <code>repeated .biotech.osla.SystemEvent system_event = 1;</code>
       */
      public Builder addSystemEvent(
          int index, com.slark.pengder.protocol.MessageProtos.SystemEvent.Builder builderForValue) {
        ensureSystemEventIsMutable();
        systemEvent_.add(index, builderForValue.build());

        return this;
      }
      /**
       * <code>repeated .biotech.osla.SystemEvent system_event = 1;</code>
       */
      public Builder addAllSystemEvent(
          java.lang.Iterable<? extends com.slark.pengder.protocol.MessageProtos.SystemEvent> values) {
        ensureSystemEventIsMutable();
        super.addAll(values, systemEvent_);

        return this;
      }
      /**
       * <code>repeated .biotech.osla.SystemEvent system_event = 1;</code>
       */
      public Builder clearSystemEvent() {
        systemEvent_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);

        return this;
      }
      /**
       * <code>repeated .biotech.osla.SystemEvent system_event = 1;</code>
       */
      public Builder removeSystemEvent(int index) {
        ensureSystemEventIsMutable();
        systemEvent_.remove(index);

        return this;
      }

      // @@protoc_insertion_point(builder_scope:biotech.osla.SystemEventList)
    }

    static {
      defaultInstance = new SystemEventList(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:biotech.osla.SystemEventList)
  }

  public interface FtpFileUploadOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {

    // required string path = 1;
    /**
     * <code>required string path = 1;</code>
     *
     * <pre>
     * ftp路径
     * </pre>
     */
    boolean hasPath();
    /**
     * <code>required string path = 1;</code>
     *
     * <pre>
     * ftp路径
     * </pre>
     */
    java.lang.String getPath();
    /**
     * <code>required string path = 1;</code>
     *
     * <pre>
     * ftp路径
     * </pre>
     */
    com.google.protobuf.ByteString
        getPathBytes();

    // required string file_name = 2;
    /**
     * <code>required string file_name = 2;</code>
     *
     * <pre>
     * 文件名
     * </pre>
     */
    boolean hasFileName();
    /**
     * <code>required string file_name = 2;</code>
     *
     * <pre>
     * 文件名
     * </pre>
     */
    java.lang.String getFileName();
    /**
     * <code>required string file_name = 2;</code>
     *
     * <pre>
     * 文件名
     * </pre>
     */
    com.google.protobuf.ByteString
        getFileNameBytes();

    // required .biotech.osla.FTP_FILE_UPLOAD_STATUS status = 3;
    /**
     * <code>required .biotech.osla.FTP_FILE_UPLOAD_STATUS status = 3;</code>
     *
     * <pre>
     * 文件状态
     * </pre>
     */
    boolean hasStatus();
    /**
     * <code>required .biotech.osla.FTP_FILE_UPLOAD_STATUS status = 3;</code>
     *
     * <pre>
     * 文件状态
     * </pre>
     */
    com.slark.pengder.protocol.MessageProtos.FTP_FILE_UPLOAD_STATUS getStatus();

    // required int32 consume_time = 4;
    /**
     * <code>required int32 consume_time = 4;</code>
     *
     * <pre>
     * 上传该文件使用总时间
     * </pre>
     */
    boolean hasConsumeTime();
    /**
     * <code>required int32 consume_time = 4;</code>
     *
     * <pre>
     * 上传该文件使用总时间
     * </pre>
     */
    int getConsumeTime();

    // required int64 file_size = 5;
    /**
     * <code>required int64 file_size = 5;</code>
     *
     * <pre>
     * 文件大小
     * </pre>
     */
    boolean hasFileSize();
    /**
     * <code>required int64 file_size = 5;</code>
     *
     * <pre>
     * 文件大小
     * </pre>
     */
    long getFileSize();

    // required string create_time = 6;
    /**
     * <code>required string create_time = 6;</code>
     *
     * <pre>
     * 文件生成时间
     * </pre>
     */
    boolean hasCreateTime();
    /**
     * <code>required string create_time = 6;</code>
     *
     * <pre>
     * 文件生成时间
     * </pre>
     */
    java.lang.String getCreateTime();
    /**
     * <code>required string create_time = 6;</code>
     *
     * <pre>
     * 文件生成时间
     * </pre>
     */
    com.google.protobuf.ByteString
        getCreateTimeBytes();

    // optional int32 percentage = 7;
    /**
     * <code>optional int32 percentage = 7;</code>
     *
     * <pre>
     * 文件上传百分比
     * </pre>
     */
    boolean hasPercentage();
    /**
     * <code>optional int32 percentage = 7;</code>
     *
     * <pre>
     * 文件上传百分比
     * </pre>
     */
    int getPercentage();

    // optional int32 localid = 8;
    /**
     * <code>optional int32 localid = 8;</code>
     */
    boolean hasLocalid();
    /**
     * <code>optional int32 localid = 8;</code>
     */
    int getLocalid();
  }
  /**
   * Protobuf type {@code biotech.osla.FtpFileUpload}
   *
   * <pre>
   * 文件上传至ftp信息
   * </pre>
   */
  public static final class FtpFileUpload extends
      com.google.protobuf.GeneratedMessageLite
      implements FtpFileUploadOrBuilder {
    // Use FtpFileUpload.newBuilder() to construct.
    private FtpFileUpload(com.google.protobuf.GeneratedMessageLite.Builder builder) {
      super(builder);

    }
    private FtpFileUpload(boolean noInit) {}

    private static final FtpFileUpload defaultInstance;
    public static FtpFileUpload getDefaultInstance() {
      return defaultInstance;
    }

    public FtpFileUpload getDefaultInstanceForType() {
      return defaultInstance;
    }

    private FtpFileUpload(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              path_ = input.readBytes();
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              fileName_ = input.readBytes();
              break;
            }
            case 24: {
              int rawValue = input.readEnum();
              com.slark.pengder.protocol.MessageProtos.FTP_FILE_UPLOAD_STATUS value = com.slark.pengder.protocol.MessageProtos.FTP_FILE_UPLOAD_STATUS.valueOf(rawValue);
              if (value != null) {
                bitField0_ |= 0x00000004;
                status_ = value;
              }
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              consumeTime_ = input.readInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              fileSize_ = input.readInt64();
              break;
            }
            case 50: {
              bitField0_ |= 0x00000020;
              createTime_ = input.readBytes();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000040;
              percentage_ = input.readInt32();
              break;
            }
            case 64: {
              bitField0_ |= 0x00000080;
              localid_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static com.google.protobuf.Parser<FtpFileUpload> PARSER =
        new com.google.protobuf.AbstractParser<FtpFileUpload>() {
      public FtpFileUpload parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new FtpFileUpload(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<FtpFileUpload> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required string path = 1;
    public static final int PATH_FIELD_NUMBER = 1;
    private java.lang.Object path_;
    /**
     * <code>required string path = 1;</code>
     *
     * <pre>
     * ftp路径
     * </pre>
     */
    public boolean hasPath() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required string path = 1;</code>
     *
     * <pre>
     * ftp路径
     * </pre>
     */
    public java.lang.String getPath() {
      java.lang.Object ref = path_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          path_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string path = 1;</code>
     *
     * <pre>
     * ftp路径
     * </pre>
     */
    public com.google.protobuf.ByteString
        getPathBytes() {
      java.lang.Object ref = path_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        path_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // required string file_name = 2;
    public static final int FILE_NAME_FIELD_NUMBER = 2;
    private java.lang.Object fileName_;
    /**
     * <code>required string file_name = 2;</code>
     *
     * <pre>
     * 文件名
     * </pre>
     */
    public boolean hasFileName() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required string file_name = 2;</code>
     *
     * <pre>
     * 文件名
     * </pre>
     */
    public java.lang.String getFileName() {
      java.lang.Object ref = fileName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          fileName_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string file_name = 2;</code>
     *
     * <pre>
     * 文件名
     * </pre>
     */
    public com.google.protobuf.ByteString
        getFileNameBytes() {
      java.lang.Object ref = fileName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        fileName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // required .biotech.osla.FTP_FILE_UPLOAD_STATUS status = 3;
    public static final int STATUS_FIELD_NUMBER = 3;
    private com.slark.pengder.protocol.MessageProtos.FTP_FILE_UPLOAD_STATUS status_;
    /**
     * <code>required .biotech.osla.FTP_FILE_UPLOAD_STATUS status = 3;</code>
     *
     * <pre>
     * 文件状态
     * </pre>
     */
    public boolean hasStatus() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required .biotech.osla.FTP_FILE_UPLOAD_STATUS status = 3;</code>
     *
     * <pre>
     * 文件状态
     * </pre>
     */
    public com.slark.pengder.protocol.MessageProtos.FTP_FILE_UPLOAD_STATUS getStatus() {
      return status_;
    }

    // required int32 consume_time = 4;
    public static final int CONSUME_TIME_FIELD_NUMBER = 4;
    private int consumeTime_;
    /**
     * <code>required int32 consume_time = 4;</code>
     *
     * <pre>
     * 上传该文件使用总时间
     * </pre>
     */
    public boolean hasConsumeTime() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>required int32 consume_time = 4;</code>
     *
     * <pre>
     * 上传该文件使用总时间
     * </pre>
     */
    public int getConsumeTime() {
      return consumeTime_;
    }

    // required int64 file_size = 5;
    public static final int FILE_SIZE_FIELD_NUMBER = 5;
    private long fileSize_;
    /**
     * <code>required int64 file_size = 5;</code>
     *
     * <pre>
     * 文件大小
     * </pre>
     */
    public boolean hasFileSize() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>required int64 file_size = 5;</code>
     *
     * <pre>
     * 文件大小
     * </pre>
     */
    public long getFileSize() {
      return fileSize_;
    }

    // required string create_time = 6;
    public static final int CREATE_TIME_FIELD_NUMBER = 6;
    private java.lang.Object createTime_;
    /**
     * <code>required string create_time = 6;</code>
     *
     * <pre>
     * 文件生成时间
     * </pre>
     */
    public boolean hasCreateTime() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>required string create_time = 6;</code>
     *
     * <pre>
     * 文件生成时间
     * </pre>
     */
    public java.lang.String getCreateTime() {
      java.lang.Object ref = createTime_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          createTime_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string create_time = 6;</code>
     *
     * <pre>
     * 文件生成时间
     * </pre>
     */
    public com.google.protobuf.ByteString
        getCreateTimeBytes() {
      java.lang.Object ref = createTime_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        createTime_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional int32 percentage = 7;
    public static final int PERCENTAGE_FIELD_NUMBER = 7;
    private int percentage_;
    /**
     * <code>optional int32 percentage = 7;</code>
     *
     * <pre>
     * 文件上传百分比
     * </pre>
     */
    public boolean hasPercentage() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional int32 percentage = 7;</code>
     *
     * <pre>
     * 文件上传百分比
     * </pre>
     */
    public int getPercentage() {
      return percentage_;
    }

    // optional int32 localid = 8;
    public static final int LOCALID_FIELD_NUMBER = 8;
    private int localid_;
    /**
     * <code>optional int32 localid = 8;</code>
     */
    public boolean hasLocalid() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional int32 localid = 8;</code>
     */
    public int getLocalid() {
      return localid_;
    }

    private void initFields() {
      path_ = "";
      fileName_ = "";
      status_ = com.slark.pengder.protocol.MessageProtos.FTP_FILE_UPLOAD_STATUS.FTP_FILE_UPLOAD_SUCCESS;
      consumeTime_ = 0;
      fileSize_ = 0L;
      createTime_ = "";
      percentage_ = 0;
      localid_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasPath()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasFileName()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasStatus()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasConsumeTime()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasFileSize()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasCreateTime()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getPathBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getFileNameBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeEnum(3, status_.getNumber());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(4, consumeTime_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt64(5, fileSize_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeBytes(6, getCreateTimeBytes());
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeInt32(7, percentage_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeInt32(8, localid_);
      }
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getPathBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getFileNameBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(3, status_.getNumber());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, consumeTime_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(5, fileSize_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(6, getCreateTimeBytes());
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(7, percentage_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(8, localid_);
      }
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.slark.pengder.protocol.MessageProtos.FtpFileUpload parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.slark.pengder.protocol.MessageProtos.FtpFileUpload parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.slark.pengder.protocol.MessageProtos.FtpFileUpload parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.slark.pengder.protocol.MessageProtos.FtpFileUpload parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.slark.pengder.protocol.MessageProtos.FtpFileUpload parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.slark.pengder.protocol.MessageProtos.FtpFileUpload parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.slark.pengder.protocol.MessageProtos.FtpFileUpload parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.slark.pengder.protocol.MessageProtos.FtpFileUpload parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.slark.pengder.protocol.MessageProtos.FtpFileUpload parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.slark.pengder.protocol.MessageProtos.FtpFileUpload parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.slark.pengder.protocol.MessageProtos.FtpFileUpload prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    /**
     * Protobuf type {@code biotech.osla.FtpFileUpload}
     *
     * <pre>
     * 文件上传至ftp信息
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.slark.pengder.protocol.MessageProtos.FtpFileUpload, Builder>
        implements com.slark.pengder.protocol.MessageProtos.FtpFileUploadOrBuilder {
      // Construct using com.slark.pengder.protocol.MessageProtos.FtpFileUpload.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        path_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        fileName_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        status_ = com.slark.pengder.protocol.MessageProtos.FTP_FILE_UPLOAD_STATUS.FTP_FILE_UPLOAD_SUCCESS;
        bitField0_ = (bitField0_ & ~0x00000004);
        consumeTime_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        fileSize_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000010);
        createTime_ = "";
        bitField0_ = (bitField0_ & ~0x00000020);
        percentage_ = 0;
        bitField0_ = (bitField0_ & ~0x00000040);
        localid_ = 0;
        bitField0_ = (bitField0_ & ~0x00000080);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.slark.pengder.protocol.MessageProtos.FtpFileUpload getDefaultInstanceForType() {
        return com.slark.pengder.protocol.MessageProtos.FtpFileUpload.getDefaultInstance();
      }

      public com.slark.pengder.protocol.MessageProtos.FtpFileUpload build() {
        com.slark.pengder.protocol.MessageProtos.FtpFileUpload result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.slark.pengder.protocol.MessageProtos.FtpFileUpload buildPartial() {
        com.slark.pengder.protocol.MessageProtos.FtpFileUpload result = new com.slark.pengder.protocol.MessageProtos.FtpFileUpload(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.path_ = path_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.fileName_ = fileName_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.status_ = status_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.consumeTime_ = consumeTime_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.fileSize_ = fileSize_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.createTime_ = createTime_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.percentage_ = percentage_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.localid_ = localid_;
        result.bitField0_ = to_bitField0_;
        return result;
      }

      public Builder mergeFrom(com.slark.pengder.protocol.MessageProtos.FtpFileUpload other) {
        if (other == com.slark.pengder.protocol.MessageProtos.FtpFileUpload.getDefaultInstance()) return this;
        if (other.hasPath()) {
          bitField0_ |= 0x00000001;
          path_ = other.path_;
          
        }
        if (other.hasFileName()) {
          bitField0_ |= 0x00000002;
          fileName_ = other.fileName_;
          
        }
        if (other.hasStatus()) {
          setStatus(other.getStatus());
        }
        if (other.hasConsumeTime()) {
          setConsumeTime(other.getConsumeTime());
        }
        if (other.hasFileSize()) {
          setFileSize(other.getFileSize());
        }
        if (other.hasCreateTime()) {
          bitField0_ |= 0x00000020;
          createTime_ = other.createTime_;
          
        }
        if (other.hasPercentage()) {
          setPercentage(other.getPercentage());
        }
        if (other.hasLocalid()) {
          setLocalid(other.getLocalid());
        }
        return this;
      }

      public final boolean isInitialized() {
        if (!hasPath()) {
          
          return false;
        }
        if (!hasFileName()) {
          
          return false;
        }
        if (!hasStatus()) {
          
          return false;
        }
        if (!hasConsumeTime()) {
          
          return false;
        }
        if (!hasFileSize()) {
          
          return false;
        }
        if (!hasCreateTime()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.slark.pengder.protocol.MessageProtos.FtpFileUpload parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.slark.pengder.protocol.MessageProtos.FtpFileUpload) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required string path = 1;
      private java.lang.Object path_ = "";
      /**
       * <code>required string path = 1;</code>
       *
       * <pre>
       * ftp路径
       * </pre>
       */
      public boolean hasPath() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required string path = 1;</code>
       *
       * <pre>
       * ftp路径
       * </pre>
       */
      public java.lang.String getPath() {
        java.lang.Object ref = path_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          path_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string path = 1;</code>
       *
       * <pre>
       * ftp路径
       * </pre>
       */
      public com.google.protobuf.ByteString
          getPathBytes() {
        java.lang.Object ref = path_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          path_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string path = 1;</code>
       *
       * <pre>
       * ftp路径
       * </pre>
       */
      public Builder setPath(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        path_ = value;
        
        return this;
      }
      /**
       * <code>required string path = 1;</code>
       *
       * <pre>
       * ftp路径
       * </pre>
       */
      public Builder clearPath() {
        bitField0_ = (bitField0_ & ~0x00000001);
        path_ = getDefaultInstance().getPath();
        
        return this;
      }
      /**
       * <code>required string path = 1;</code>
       *
       * <pre>
       * ftp路径
       * </pre>
       */
      public Builder setPathBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        path_ = value;
        
        return this;
      }

      // required string file_name = 2;
      private java.lang.Object fileName_ = "";
      /**
       * <code>required string file_name = 2;</code>
       *
       * <pre>
       * 文件名
       * </pre>
       */
      public boolean hasFileName() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required string file_name = 2;</code>
       *
       * <pre>
       * 文件名
       * </pre>
       */
      public java.lang.String getFileName() {
        java.lang.Object ref = fileName_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          fileName_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string file_name = 2;</code>
       *
       * <pre>
       * 文件名
       * </pre>
       */
      public com.google.protobuf.ByteString
          getFileNameBytes() {
        java.lang.Object ref = fileName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          fileName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string file_name = 2;</code>
       *
       * <pre>
       * 文件名
       * </pre>
       */
      public Builder setFileName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        fileName_ = value;
        
        return this;
      }
      /**
       * <code>required string file_name = 2;</code>
       *
       * <pre>
       * 文件名
       * </pre>
       */
      public Builder clearFileName() {
        bitField0_ = (bitField0_ & ~0x00000002);
        fileName_ = getDefaultInstance().getFileName();
        
        return this;
      }
      /**
       * <code>required string file_name = 2;</code>
       *
       * <pre>
       * 文件名
       * </pre>
       */
      public Builder setFileNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        fileName_ = value;
        
        return this;
      }

      // required .biotech.osla.FTP_FILE_UPLOAD_STATUS status = 3;
      private com.slark.pengder.protocol.MessageProtos.FTP_FILE_UPLOAD_STATUS status_ = com.slark.pengder.protocol.MessageProtos.FTP_FILE_UPLOAD_STATUS.FTP_FILE_UPLOAD_SUCCESS;
      /**
       * <code>required .biotech.osla.FTP_FILE_UPLOAD_STATUS status = 3;</code>
       *
       * <pre>
       * 文件状态
       * </pre>
       */
      public boolean hasStatus() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required .biotech.osla.FTP_FILE_UPLOAD_STATUS status = 3;</code>
       *
       * <pre>
       * 文件状态
       * </pre>
       */
      public com.slark.pengder.protocol.MessageProtos.FTP_FILE_UPLOAD_STATUS getStatus() {
        return status_;
      }
      /**
       * <code>required .biotech.osla.FTP_FILE_UPLOAD_STATUS status = 3;</code>
       *
       * <pre>
       * 文件状态
       * </pre>
       */
      public Builder setStatus(com.slark.pengder.protocol.MessageProtos.FTP_FILE_UPLOAD_STATUS value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000004;
        status_ = value;
        
        return this;
      }
      /**
       * <code>required .biotech.osla.FTP_FILE_UPLOAD_STATUS status = 3;</code>
       *
       * <pre>
       * 文件状态
       * </pre>
       */
      public Builder clearStatus() {
        bitField0_ = (bitField0_ & ~0x00000004);
        status_ = com.slark.pengder.protocol.MessageProtos.FTP_FILE_UPLOAD_STATUS.FTP_FILE_UPLOAD_SUCCESS;
        
        return this;
      }

      // required int32 consume_time = 4;
      private int consumeTime_ ;
      /**
       * <code>required int32 consume_time = 4;</code>
       *
       * <pre>
       * 上传该文件使用总时间
       * </pre>
       */
      public boolean hasConsumeTime() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>required int32 consume_time = 4;</code>
       *
       * <pre>
       * 上传该文件使用总时间
       * </pre>
       */
      public int getConsumeTime() {
        return consumeTime_;
      }
      /**
       * <code>required int32 consume_time = 4;</code>
       *
       * <pre>
       * 上传该文件使用总时间
       * </pre>
       */
      public Builder setConsumeTime(int value) {
        bitField0_ |= 0x00000008;
        consumeTime_ = value;
        
        return this;
      }
      /**
       * <code>required int32 consume_time = 4;</code>
       *
       * <pre>
       * 上传该文件使用总时间
       * </pre>
       */
      public Builder clearConsumeTime() {
        bitField0_ = (bitField0_ & ~0x00000008);
        consumeTime_ = 0;
        
        return this;
      }

      // required int64 file_size = 5;
      private long fileSize_ ;
      /**
       * <code>required int64 file_size = 5;</code>
       *
       * <pre>
       * 文件大小
       * </pre>
       */
      public boolean hasFileSize() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>required int64 file_size = 5;</code>
       *
       * <pre>
       * 文件大小
       * </pre>
       */
      public long getFileSize() {
        return fileSize_;
      }
      /**
       * <code>required int64 file_size = 5;</code>
       *
       * <pre>
       * 文件大小
       * </pre>
       */
      public Builder setFileSize(long value) {
        bitField0_ |= 0x00000010;
        fileSize_ = value;
        
        return this;
      }
      /**
       * <code>required int64 file_size = 5;</code>
       *
       * <pre>
       * 文件大小
       * </pre>
       */
      public Builder clearFileSize() {
        bitField0_ = (bitField0_ & ~0x00000010);
        fileSize_ = 0L;
        
        return this;
      }

      // required string create_time = 6;
      private java.lang.Object createTime_ = "";
      /**
       * <code>required string create_time = 6;</code>
       *
       * <pre>
       * 文件生成时间
       * </pre>
       */
      public boolean hasCreateTime() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>required string create_time = 6;</code>
       *
       * <pre>
       * 文件生成时间
       * </pre>
       */
      public java.lang.String getCreateTime() {
        java.lang.Object ref = createTime_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          createTime_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string create_time = 6;</code>
       *
       * <pre>
       * 文件生成时间
       * </pre>
       */
      public com.google.protobuf.ByteString
          getCreateTimeBytes() {
        java.lang.Object ref = createTime_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          createTime_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string create_time = 6;</code>
       *
       * <pre>
       * 文件生成时间
       * </pre>
       */
      public Builder setCreateTime(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000020;
        createTime_ = value;
        
        return this;
      }
      /**
       * <code>required string create_time = 6;</code>
       *
       * <pre>
       * 文件生成时间
       * </pre>
       */
      public Builder clearCreateTime() {
        bitField0_ = (bitField0_ & ~0x00000020);
        createTime_ = getDefaultInstance().getCreateTime();
        
        return this;
      }
      /**
       * <code>required string create_time = 6;</code>
       *
       * <pre>
       * 文件生成时间
       * </pre>
       */
      public Builder setCreateTimeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000020;
        createTime_ = value;
        
        return this;
      }

      // optional int32 percentage = 7;
      private int percentage_ ;
      /**
       * <code>optional int32 percentage = 7;</code>
       *
       * <pre>
       * 文件上传百分比
       * </pre>
       */
      public boolean hasPercentage() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional int32 percentage = 7;</code>
       *
       * <pre>
       * 文件上传百分比
       * </pre>
       */
      public int getPercentage() {
        return percentage_;
      }
      /**
       * <code>optional int32 percentage = 7;</code>
       *
       * <pre>
       * 文件上传百分比
       * </pre>
       */
      public Builder setPercentage(int value) {
        bitField0_ |= 0x00000040;
        percentage_ = value;
        
        return this;
      }
      /**
       * <code>optional int32 percentage = 7;</code>
       *
       * <pre>
       * 文件上传百分比
       * </pre>
       */
      public Builder clearPercentage() {
        bitField0_ = (bitField0_ & ~0x00000040);
        percentage_ = 0;
        
        return this;
      }

      // optional int32 localid = 8;
      private int localid_ ;
      /**
       * <code>optional int32 localid = 8;</code>
       */
      public boolean hasLocalid() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional int32 localid = 8;</code>
       */
      public int getLocalid() {
        return localid_;
      }
      /**
       * <code>optional int32 localid = 8;</code>
       */
      public Builder setLocalid(int value) {
        bitField0_ |= 0x00000080;
        localid_ = value;
        
        return this;
      }
      /**
       * <code>optional int32 localid = 8;</code>
       */
      public Builder clearLocalid() {
        bitField0_ = (bitField0_ & ~0x00000080);
        localid_ = 0;
        
        return this;
      }

      // @@protoc_insertion_point(builder_scope:biotech.osla.FtpFileUpload)
    }

    static {
      defaultInstance = new FtpFileUpload(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:biotech.osla.FtpFileUpload)
  }

  public interface FtpEventOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {

    // required int64 id = 1;
    /**
     * <code>required int64 id = 1;</code>
     *
     * <pre>
     * 事件记录ID
     * </pre>
     */
    boolean hasId();
    /**
     * <code>required int64 id = 1;</code>
     *
     * <pre>
     * 事件记录ID
     * </pre>
     */
    long getId();

    // required int32 user_id = 2;
    /**
     * <code>required int32 user_id = 2;</code>
     *
     * <pre>
     * 用户ID
     * </pre>
     */
    boolean hasUserId();
    /**
     * <code>required int32 user_id = 2;</code>
     *
     * <pre>
     * 用户ID
     * </pre>
     */
    int getUserId();

    // required int32 instrument_id = 3;
    /**
     * <code>required int32 instrument_id = 3;</code>
     *
     * <pre>
     * 仪器ID
     * </pre>
     */
    boolean hasInstrumentId();
    /**
     * <code>required int32 instrument_id = 3;</code>
     *
     * <pre>
     * 仪器ID
     * </pre>
     */
    int getInstrumentId();

    // required int32 group_id = 4;
    /**
     * <code>required int32 group_id = 4;</code>
     *
     * <pre>
     * 用户是在组
     * </pre>
     */
    boolean hasGroupId();
    /**
     * <code>required int32 group_id = 4;</code>
     *
     * <pre>
     * 用户是在组
     * </pre>
     */
    int getGroupId();

    // required int32 actived_account = 5;
    /**
     * <code>required int32 actived_account = 5;</code>
     *
     * <pre>
     * 用户付款账户
     * </pre>
     */
    boolean hasActivedAccount();
    /**
     * <code>required int32 actived_account = 5;</code>
     *
     * <pre>
     * 用户付款账户
     * </pre>
     */
    int getActivedAccount();

    // repeated .biotech.osla.FtpFileUpload file = 6;
    /**
     * <code>repeated .biotech.osla.FtpFileUpload file = 6;</code>
     *
     * <pre>
     * 文件状态，一个用户，一次上传多个文件
     * </pre>
     */
    java.util.List<com.slark.pengder.protocol.MessageProtos.FtpFileUpload> 
        getFileList();
    /**
     * <code>repeated .biotech.osla.FtpFileUpload file = 6;</code>
     *
     * <pre>
     * 文件状态，一个用户，一次上传多个文件
     * </pre>
     */
    com.slark.pengder.protocol.MessageProtos.FtpFileUpload getFile(int index);
    /**
     * <code>repeated .biotech.osla.FtpFileUpload file = 6;</code>
     *
     * <pre>
     * 文件状态，一个用户，一次上传多个文件
     * </pre>
     */
    int getFileCount();

    // optional int32 localId = 7;
    /**
     * <code>optional int32 localId = 7;</code>
     *
     * <pre>
     * 存储本地id，用于回调
     * </pre>
     */
    boolean hasLocalId();
    /**
     * <code>optional int32 localId = 7;</code>
     *
     * <pre>
     * 存储本地id，用于回调
     * </pre>
     */
    int getLocalId();
  }
  /**
   * Protobuf type {@code biotech.osla.FtpEvent}
   *
   * <pre>
   * 客户端上传文件信息
   * </pre>
   */
  public static final class FtpEvent extends
      com.google.protobuf.GeneratedMessageLite
      implements FtpEventOrBuilder {
    // Use FtpEvent.newBuilder() to construct.
    private FtpEvent(com.google.protobuf.GeneratedMessageLite.Builder builder) {
      super(builder);

    }
    private FtpEvent(boolean noInit) {}

    private static final FtpEvent defaultInstance;
    public static FtpEvent getDefaultInstance() {
      return defaultInstance;
    }

    public FtpEvent getDefaultInstanceForType() {
      return defaultInstance;
    }

    private FtpEvent(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              id_ = input.readInt64();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              userId_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              instrumentId_ = input.readInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              groupId_ = input.readInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              activedAccount_ = input.readInt32();
              break;
            }
            case 50: {
              if (!((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
                file_ = new java.util.ArrayList<com.slark.pengder.protocol.MessageProtos.FtpFileUpload>();
                mutable_bitField0_ |= 0x00000020;
              }
              file_.add(input.readMessage(com.slark.pengder.protocol.MessageProtos.FtpFileUpload.PARSER, extensionRegistry));
              break;
            }
            case 56: {
              bitField0_ |= 0x00000020;
              localId_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
          file_ = java.util.Collections.unmodifiableList(file_);
        }
        makeExtensionsImmutable();
      }
    }
    public static com.google.protobuf.Parser<FtpEvent> PARSER =
        new com.google.protobuf.AbstractParser<FtpEvent>() {
      public FtpEvent parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new FtpEvent(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<FtpEvent> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required int64 id = 1;
    public static final int ID_FIELD_NUMBER = 1;
    private long id_;
    /**
     * <code>required int64 id = 1;</code>
     *
     * <pre>
     * 事件记录ID
     * </pre>
     */
    public boolean hasId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int64 id = 1;</code>
     *
     * <pre>
     * 事件记录ID
     * </pre>
     */
    public long getId() {
      return id_;
    }

    // required int32 user_id = 2;
    public static final int USER_ID_FIELD_NUMBER = 2;
    private int userId_;
    /**
     * <code>required int32 user_id = 2;</code>
     *
     * <pre>
     * 用户ID
     * </pre>
     */
    public boolean hasUserId() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required int32 user_id = 2;</code>
     *
     * <pre>
     * 用户ID
     * </pre>
     */
    public int getUserId() {
      return userId_;
    }

    // required int32 instrument_id = 3;
    public static final int INSTRUMENT_ID_FIELD_NUMBER = 3;
    private int instrumentId_;
    /**
     * <code>required int32 instrument_id = 3;</code>
     *
     * <pre>
     * 仪器ID
     * </pre>
     */
    public boolean hasInstrumentId() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required int32 instrument_id = 3;</code>
     *
     * <pre>
     * 仪器ID
     * </pre>
     */
    public int getInstrumentId() {
      return instrumentId_;
    }

    // required int32 group_id = 4;
    public static final int GROUP_ID_FIELD_NUMBER = 4;
    private int groupId_;
    /**
     * <code>required int32 group_id = 4;</code>
     *
     * <pre>
     * 用户是在组
     * </pre>
     */
    public boolean hasGroupId() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>required int32 group_id = 4;</code>
     *
     * <pre>
     * 用户是在组
     * </pre>
     */
    public int getGroupId() {
      return groupId_;
    }

    // required int32 actived_account = 5;
    public static final int ACTIVED_ACCOUNT_FIELD_NUMBER = 5;
    private int activedAccount_;
    /**
     * <code>required int32 actived_account = 5;</code>
     *
     * <pre>
     * 用户付款账户
     * </pre>
     */
    public boolean hasActivedAccount() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>required int32 actived_account = 5;</code>
     *
     * <pre>
     * 用户付款账户
     * </pre>
     */
    public int getActivedAccount() {
      return activedAccount_;
    }

    // repeated .biotech.osla.FtpFileUpload file = 6;
    public static final int FILE_FIELD_NUMBER = 6;
    private java.util.List<com.slark.pengder.protocol.MessageProtos.FtpFileUpload> file_;
    /**
     * <code>repeated .biotech.osla.FtpFileUpload file = 6;</code>
     *
     * <pre>
     * 文件状态，一个用户，一次上传多个文件
     * </pre>
     */
    public java.util.List<com.slark.pengder.protocol.MessageProtos.FtpFileUpload> getFileList() {
      return file_;
    }
    /**
     * <code>repeated .biotech.osla.FtpFileUpload file = 6;</code>
     *
     * <pre>
     * 文件状态，一个用户，一次上传多个文件
     * </pre>
     */
    public java.util.List<? extends com.slark.pengder.protocol.MessageProtos.FtpFileUploadOrBuilder> 
        getFileOrBuilderList() {
      return file_;
    }
    /**
     * <code>repeated .biotech.osla.FtpFileUpload file = 6;</code>
     *
     * <pre>
     * 文件状态，一个用户，一次上传多个文件
     * </pre>
     */
    public int getFileCount() {
      return file_.size();
    }
    /**
     * <code>repeated .biotech.osla.FtpFileUpload file = 6;</code>
     *
     * <pre>
     * 文件状态，一个用户，一次上传多个文件
     * </pre>
     */
    public com.slark.pengder.protocol.MessageProtos.FtpFileUpload getFile(int index) {
      return file_.get(index);
    }
    /**
     * <code>repeated .biotech.osla.FtpFileUpload file = 6;</code>
     *
     * <pre>
     * 文件状态，一个用户，一次上传多个文件
     * </pre>
     */
    public com.slark.pengder.protocol.MessageProtos.FtpFileUploadOrBuilder getFileOrBuilder(
        int index) {
      return file_.get(index);
    }

    // optional int32 localId = 7;
    public static final int LOCALID_FIELD_NUMBER = 7;
    private int localId_;
    /**
     * <code>optional int32 localId = 7;</code>
     *
     * <pre>
     * 存储本地id，用于回调
     * </pre>
     */
    public boolean hasLocalId() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional int32 localId = 7;</code>
     *
     * <pre>
     * 存储本地id，用于回调
     * </pre>
     */
    public int getLocalId() {
      return localId_;
    }

    private void initFields() {
      id_ = 0L;
      userId_ = 0;
      instrumentId_ = 0;
      groupId_ = 0;
      activedAccount_ = 0;
      file_ = java.util.Collections.emptyList();
      localId_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasUserId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasInstrumentId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasGroupId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasActivedAccount()) {
        memoizedIsInitialized = 0;
        return false;
      }
      for (int i = 0; i < getFileCount(); i++) {
        if (!getFile(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt64(1, id_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, userId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, instrumentId_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(4, groupId_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(5, activedAccount_);
      }
      for (int i = 0; i < file_.size(); i++) {
        output.writeMessage(6, file_.get(i));
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeInt32(7, localId_);
      }
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, id_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, userId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, instrumentId_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, groupId_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, activedAccount_);
      }
      for (int i = 0; i < file_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, file_.get(i));
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(7, localId_);
      }
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.slark.pengder.protocol.MessageProtos.FtpEvent parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.slark.pengder.protocol.MessageProtos.FtpEvent parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.slark.pengder.protocol.MessageProtos.FtpEvent parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.slark.pengder.protocol.MessageProtos.FtpEvent parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.slark.pengder.protocol.MessageProtos.FtpEvent parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.slark.pengder.protocol.MessageProtos.FtpEvent parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.slark.pengder.protocol.MessageProtos.FtpEvent parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.slark.pengder.protocol.MessageProtos.FtpEvent parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.slark.pengder.protocol.MessageProtos.FtpEvent parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.slark.pengder.protocol.MessageProtos.FtpEvent parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.slark.pengder.protocol.MessageProtos.FtpEvent prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    /**
     * Protobuf type {@code biotech.osla.FtpEvent}
     *
     * <pre>
     * 客户端上传文件信息
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.slark.pengder.protocol.MessageProtos.FtpEvent, Builder>
        implements com.slark.pengder.protocol.MessageProtos.FtpEventOrBuilder {
      // Construct using com.slark.pengder.protocol.MessageProtos.FtpEvent.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        id_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        userId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        instrumentId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        groupId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        activedAccount_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        file_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000020);
        localId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000040);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.slark.pengder.protocol.MessageProtos.FtpEvent getDefaultInstanceForType() {
        return com.slark.pengder.protocol.MessageProtos.FtpEvent.getDefaultInstance();
      }

      public com.slark.pengder.protocol.MessageProtos.FtpEvent build() {
        com.slark.pengder.protocol.MessageProtos.FtpEvent result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.slark.pengder.protocol.MessageProtos.FtpEvent buildPartial() {
        com.slark.pengder.protocol.MessageProtos.FtpEvent result = new com.slark.pengder.protocol.MessageProtos.FtpEvent(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.id_ = id_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.userId_ = userId_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.instrumentId_ = instrumentId_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.groupId_ = groupId_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.activedAccount_ = activedAccount_;
        if (((bitField0_ & 0x00000020) == 0x00000020)) {
          file_ = java.util.Collections.unmodifiableList(file_);
          bitField0_ = (bitField0_ & ~0x00000020);
        }
        result.file_ = file_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000020;
        }
        result.localId_ = localId_;
        result.bitField0_ = to_bitField0_;
        return result;
      }

      public Builder mergeFrom(com.slark.pengder.protocol.MessageProtos.FtpEvent other) {
        if (other == com.slark.pengder.protocol.MessageProtos.FtpEvent.getDefaultInstance()) return this;
        if (other.hasId()) {
          setId(other.getId());
        }
        if (other.hasUserId()) {
          setUserId(other.getUserId());
        }
        if (other.hasInstrumentId()) {
          setInstrumentId(other.getInstrumentId());
        }
        if (other.hasGroupId()) {
          setGroupId(other.getGroupId());
        }
        if (other.hasActivedAccount()) {
          setActivedAccount(other.getActivedAccount());
        }
        if (!other.file_.isEmpty()) {
          if (file_.isEmpty()) {
            file_ = other.file_;
            bitField0_ = (bitField0_ & ~0x00000020);
          } else {
            ensureFileIsMutable();
            file_.addAll(other.file_);
          }
          
        }
        if (other.hasLocalId()) {
          setLocalId(other.getLocalId());
        }
        return this;
      }

      public final boolean isInitialized() {
        if (!hasId()) {
          
          return false;
        }
        if (!hasUserId()) {
          
          return false;
        }
        if (!hasInstrumentId()) {
          
          return false;
        }
        if (!hasGroupId()) {
          
          return false;
        }
        if (!hasActivedAccount()) {
          
          return false;
        }
        for (int i = 0; i < getFileCount(); i++) {
          if (!getFile(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.slark.pengder.protocol.MessageProtos.FtpEvent parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.slark.pengder.protocol.MessageProtos.FtpEvent) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required int64 id = 1;
      private long id_ ;
      /**
       * <code>required int64 id = 1;</code>
       *
       * <pre>
       * 事件记录ID
       * </pre>
       */
      public boolean hasId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int64 id = 1;</code>
       *
       * <pre>
       * 事件记录ID
       * </pre>
       */
      public long getId() {
        return id_;
      }
      /**
       * <code>required int64 id = 1;</code>
       *
       * <pre>
       * 事件记录ID
       * </pre>
       */
      public Builder setId(long value) {
        bitField0_ |= 0x00000001;
        id_ = value;
        
        return this;
      }
      /**
       * <code>required int64 id = 1;</code>
       *
       * <pre>
       * 事件记录ID
       * </pre>
       */
      public Builder clearId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        id_ = 0L;
        
        return this;
      }

      // required int32 user_id = 2;
      private int userId_ ;
      /**
       * <code>required int32 user_id = 2;</code>
       *
       * <pre>
       * 用户ID
       * </pre>
       */
      public boolean hasUserId() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required int32 user_id = 2;</code>
       *
       * <pre>
       * 用户ID
       * </pre>
       */
      public int getUserId() {
        return userId_;
      }
      /**
       * <code>required int32 user_id = 2;</code>
       *
       * <pre>
       * 用户ID
       * </pre>
       */
      public Builder setUserId(int value) {
        bitField0_ |= 0x00000002;
        userId_ = value;
        
        return this;
      }
      /**
       * <code>required int32 user_id = 2;</code>
       *
       * <pre>
       * 用户ID
       * </pre>
       */
      public Builder clearUserId() {
        bitField0_ = (bitField0_ & ~0x00000002);
        userId_ = 0;
        
        return this;
      }

      // required int32 instrument_id = 3;
      private int instrumentId_ ;
      /**
       * <code>required int32 instrument_id = 3;</code>
       *
       * <pre>
       * 仪器ID
       * </pre>
       */
      public boolean hasInstrumentId() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required int32 instrument_id = 3;</code>
       *
       * <pre>
       * 仪器ID
       * </pre>
       */
      public int getInstrumentId() {
        return instrumentId_;
      }
      /**
       * <code>required int32 instrument_id = 3;</code>
       *
       * <pre>
       * 仪器ID
       * </pre>
       */
      public Builder setInstrumentId(int value) {
        bitField0_ |= 0x00000004;
        instrumentId_ = value;
        
        return this;
      }
      /**
       * <code>required int32 instrument_id = 3;</code>
       *
       * <pre>
       * 仪器ID
       * </pre>
       */
      public Builder clearInstrumentId() {
        bitField0_ = (bitField0_ & ~0x00000004);
        instrumentId_ = 0;
        
        return this;
      }

      // required int32 group_id = 4;
      private int groupId_ ;
      /**
       * <code>required int32 group_id = 4;</code>
       *
       * <pre>
       * 用户是在组
       * </pre>
       */
      public boolean hasGroupId() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>required int32 group_id = 4;</code>
       *
       * <pre>
       * 用户是在组
       * </pre>
       */
      public int getGroupId() {
        return groupId_;
      }
      /**
       * <code>required int32 group_id = 4;</code>
       *
       * <pre>
       * 用户是在组
       * </pre>
       */
      public Builder setGroupId(int value) {
        bitField0_ |= 0x00000008;
        groupId_ = value;
        
        return this;
      }
      /**
       * <code>required int32 group_id = 4;</code>
       *
       * <pre>
       * 用户是在组
       * </pre>
       */
      public Builder clearGroupId() {
        bitField0_ = (bitField0_ & ~0x00000008);
        groupId_ = 0;
        
        return this;
      }

      // required int32 actived_account = 5;
      private int activedAccount_ ;
      /**
       * <code>required int32 actived_account = 5;</code>
       *
       * <pre>
       * 用户付款账户
       * </pre>
       */
      public boolean hasActivedAccount() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>required int32 actived_account = 5;</code>
       *
       * <pre>
       * 用户付款账户
       * </pre>
       */
      public int getActivedAccount() {
        return activedAccount_;
      }
      /**
       * <code>required int32 actived_account = 5;</code>
       *
       * <pre>
       * 用户付款账户
       * </pre>
       */
      public Builder setActivedAccount(int value) {
        bitField0_ |= 0x00000010;
        activedAccount_ = value;
        
        return this;
      }
      /**
       * <code>required int32 actived_account = 5;</code>
       *
       * <pre>
       * 用户付款账户
       * </pre>
       */
      public Builder clearActivedAccount() {
        bitField0_ = (bitField0_ & ~0x00000010);
        activedAccount_ = 0;
        
        return this;
      }

      // repeated .biotech.osla.FtpFileUpload file = 6;
      private java.util.List<com.slark.pengder.protocol.MessageProtos.FtpFileUpload> file_ =
        java.util.Collections.emptyList();
      private void ensureFileIsMutable() {
        if (!((bitField0_ & 0x00000020) == 0x00000020)) {
          file_ = new java.util.ArrayList<com.slark.pengder.protocol.MessageProtos.FtpFileUpload>(file_);
          bitField0_ |= 0x00000020;
         }
      }

      /**
       * <code>repeated .biotech.osla.FtpFileUpload file = 6;</code>
       *
       * <pre>
       * 文件状态，一个用户，一次上传多个文件
       * </pre>
       */
      public java.util.List<com.slark.pengder.protocol.MessageProtos.FtpFileUpload> getFileList() {
        return java.util.Collections.unmodifiableList(file_);
      }
      /**
       * <code>repeated .biotech.osla.FtpFileUpload file = 6;</code>
       *
       * <pre>
       * 文件状态，一个用户，一次上传多个文件
       * </pre>
       */
      public int getFileCount() {
        return file_.size();
      }
      /**
       * <code>repeated .biotech.osla.FtpFileUpload file = 6;</code>
       *
       * <pre>
       * 文件状态，一个用户，一次上传多个文件
       * </pre>
       */
      public com.slark.pengder.protocol.MessageProtos.FtpFileUpload getFile(int index) {
        return file_.get(index);
      }
      /**
       * <code>repeated .biotech.osla.FtpFileUpload file = 6;</code>
       *
       * <pre>
       * 文件状态，一个用户，一次上传多个文件
       * </pre>
       */
      public Builder setFile(
          int index, com.slark.pengder.protocol.MessageProtos.FtpFileUpload value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureFileIsMutable();
        file_.set(index, value);

        return this;
      }
      /**
       * <code>repeated .biotech.osla.FtpFileUpload file = 6;</code>
       *
       * <pre>
       * 文件状态，一个用户，一次上传多个文件
       * </pre>
       */
      public Builder setFile(
          int index, com.slark.pengder.protocol.MessageProtos.FtpFileUpload.Builder builderForValue) {
        ensureFileIsMutable();
        file_.set(index, builderForValue.build());

        return this;
      }
      /**
       * <code>repeated .biotech.osla.FtpFileUpload file = 6;</code>
       *
       * <pre>
       * 文件状态，一个用户，一次上传多个文件
       * </pre>
       */
      public Builder addFile(com.slark.pengder.protocol.MessageProtos.FtpFileUpload value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureFileIsMutable();
        file_.add(value);

        return this;
      }
      /**
       * <code>repeated .biotech.osla.FtpFileUpload file = 6;</code>
       *
       * <pre>
       * 文件状态，一个用户，一次上传多个文件
       * </pre>
       */
      public Builder addFile(
          int index, com.slark.pengder.protocol.MessageProtos.FtpFileUpload value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureFileIsMutable();
        file_.add(index, value);

        return this;
      }
      /**
       * <code>repeated .biotech.osla.FtpFileUpload file = 6;</code>
       *
       * <pre>
       * 文件状态，一个用户，一次上传多个文件
       * </pre>
       */
      public Builder addFile(
          com.slark.pengder.protocol.MessageProtos.FtpFileUpload.Builder builderForValue) {
        ensureFileIsMutable();
        file_.add(builderForValue.build());

        return this;
      }
      /**
       * <code>repeated .biotech.osla.FtpFileUpload file = 6;</code>
       *
       * <pre>
       * 文件状态，一个用户，一次上传多个文件
       * </pre>
       */
      public Builder addFile(
          int index, com.slark.pengder.protocol.MessageProtos.FtpFileUpload.Builder builderForValue) {
        ensureFileIsMutable();
        file_.add(index, builderForValue.build());

        return this;
      }
      /**
       * <code>repeated .biotech.osla.FtpFileUpload file = 6;</code>
       *
       * <pre>
       * 文件状态，一个用户，一次上传多个文件
       * </pre>
       */
      public Builder addAllFile(
          java.lang.Iterable<? extends com.slark.pengder.protocol.MessageProtos.FtpFileUpload> values) {
        ensureFileIsMutable();
        super.addAll(values, file_);

        return this;
      }
      /**
       * <code>repeated .biotech.osla.FtpFileUpload file = 6;</code>
       *
       * <pre>
       * 文件状态，一个用户，一次上传多个文件
       * </pre>
       */
      public Builder clearFile() {
        file_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000020);

        return this;
      }
      /**
       * <code>repeated .biotech.osla.FtpFileUpload file = 6;</code>
       *
       * <pre>
       * 文件状态，一个用户，一次上传多个文件
       * </pre>
       */
      public Builder removeFile(int index) {
        ensureFileIsMutable();
        file_.remove(index);

        return this;
      }

      // optional int32 localId = 7;
      private int localId_ ;
      /**
       * <code>optional int32 localId = 7;</code>
       *
       * <pre>
       * 存储本地id，用于回调
       * </pre>
       */
      public boolean hasLocalId() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional int32 localId = 7;</code>
       *
       * <pre>
       * 存储本地id，用于回调
       * </pre>
       */
      public int getLocalId() {
        return localId_;
      }
      /**
       * <code>optional int32 localId = 7;</code>
       *
       * <pre>
       * 存储本地id，用于回调
       * </pre>
       */
      public Builder setLocalId(int value) {
        bitField0_ |= 0x00000040;
        localId_ = value;
        
        return this;
      }
      /**
       * <code>optional int32 localId = 7;</code>
       *
       * <pre>
       * 存储本地id，用于回调
       * </pre>
       */
      public Builder clearLocalId() {
        bitField0_ = (bitField0_ & ~0x00000040);
        localId_ = 0;
        
        return this;
      }

      // @@protoc_insertion_point(builder_scope:biotech.osla.FtpEvent)
    }

    static {
      defaultInstance = new FtpEvent(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:biotech.osla.FtpEvent)
  }

  public interface FtpEventListOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {

    // repeated .biotech.osla.FtpEvent ftp_event = 1;
    /**
     * <code>repeated .biotech.osla.FtpEvent ftp_event = 1;</code>
     */
    java.util.List<com.slark.pengder.protocol.MessageProtos.FtpEvent> 
        getFtpEventList();
    /**
     * <code>repeated .biotech.osla.FtpEvent ftp_event = 1;</code>
     */
    com.slark.pengder.protocol.MessageProtos.FtpEvent getFtpEvent(int index);
    /**
     * <code>repeated .biotech.osla.FtpEvent ftp_event = 1;</code>
     */
    int getFtpEventCount();
  }
  /**
   * Protobuf type {@code biotech.osla.FtpEventList}
   */
  public static final class FtpEventList extends
      com.google.protobuf.GeneratedMessageLite
      implements FtpEventListOrBuilder {
    // Use FtpEventList.newBuilder() to construct.
    private FtpEventList(com.google.protobuf.GeneratedMessageLite.Builder builder) {
      super(builder);

    }
    private FtpEventList(boolean noInit) {}

    private static final FtpEventList defaultInstance;
    public static FtpEventList getDefaultInstance() {
      return defaultInstance;
    }

    public FtpEventList getDefaultInstanceForType() {
      return defaultInstance;
    }

    private FtpEventList(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                ftpEvent_ = new java.util.ArrayList<com.slark.pengder.protocol.MessageProtos.FtpEvent>();
                mutable_bitField0_ |= 0x00000001;
              }
              ftpEvent_.add(input.readMessage(com.slark.pengder.protocol.MessageProtos.FtpEvent.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          ftpEvent_ = java.util.Collections.unmodifiableList(ftpEvent_);
        }
        makeExtensionsImmutable();
      }
    }
    public static com.google.protobuf.Parser<FtpEventList> PARSER =
        new com.google.protobuf.AbstractParser<FtpEventList>() {
      public FtpEventList parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new FtpEventList(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<FtpEventList> getParserForType() {
      return PARSER;
    }

    // repeated .biotech.osla.FtpEvent ftp_event = 1;
    public static final int FTP_EVENT_FIELD_NUMBER = 1;
    private java.util.List<com.slark.pengder.protocol.MessageProtos.FtpEvent> ftpEvent_;
    /**
     * <code>repeated .biotech.osla.FtpEvent ftp_event = 1;</code>
     */
    public java.util.List<com.slark.pengder.protocol.MessageProtos.FtpEvent> getFtpEventList() {
      return ftpEvent_;
    }
    /**
     * <code>repeated .biotech.osla.FtpEvent ftp_event = 1;</code>
     */
    public java.util.List<? extends com.slark.pengder.protocol.MessageProtos.FtpEventOrBuilder> 
        getFtpEventOrBuilderList() {
      return ftpEvent_;
    }
    /**
     * <code>repeated .biotech.osla.FtpEvent ftp_event = 1;</code>
     */
    public int getFtpEventCount() {
      return ftpEvent_.size();
    }
    /**
     * <code>repeated .biotech.osla.FtpEvent ftp_event = 1;</code>
     */
    public com.slark.pengder.protocol.MessageProtos.FtpEvent getFtpEvent(int index) {
      return ftpEvent_.get(index);
    }
    /**
     * <code>repeated .biotech.osla.FtpEvent ftp_event = 1;</code>
     */
    public com.slark.pengder.protocol.MessageProtos.FtpEventOrBuilder getFtpEventOrBuilder(
        int index) {
      return ftpEvent_.get(index);
    }

    private void initFields() {
      ftpEvent_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      for (int i = 0; i < getFtpEventCount(); i++) {
        if (!getFtpEvent(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < ftpEvent_.size(); i++) {
        output.writeMessage(1, ftpEvent_.get(i));
      }
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < ftpEvent_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, ftpEvent_.get(i));
      }
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.slark.pengder.protocol.MessageProtos.FtpEventList parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.slark.pengder.protocol.MessageProtos.FtpEventList parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.slark.pengder.protocol.MessageProtos.FtpEventList parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.slark.pengder.protocol.MessageProtos.FtpEventList parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.slark.pengder.protocol.MessageProtos.FtpEventList parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.slark.pengder.protocol.MessageProtos.FtpEventList parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.slark.pengder.protocol.MessageProtos.FtpEventList parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.slark.pengder.protocol.MessageProtos.FtpEventList parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.slark.pengder.protocol.MessageProtos.FtpEventList parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.slark.pengder.protocol.MessageProtos.FtpEventList parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.slark.pengder.protocol.MessageProtos.FtpEventList prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    /**
     * Protobuf type {@code biotech.osla.FtpEventList}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.slark.pengder.protocol.MessageProtos.FtpEventList, Builder>
        implements com.slark.pengder.protocol.MessageProtos.FtpEventListOrBuilder {
      // Construct using com.slark.pengder.protocol.MessageProtos.FtpEventList.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        ftpEvent_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.slark.pengder.protocol.MessageProtos.FtpEventList getDefaultInstanceForType() {
        return com.slark.pengder.protocol.MessageProtos.FtpEventList.getDefaultInstance();
      }

      public com.slark.pengder.protocol.MessageProtos.FtpEventList build() {
        com.slark.pengder.protocol.MessageProtos.FtpEventList result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.slark.pengder.protocol.MessageProtos.FtpEventList buildPartial() {
        com.slark.pengder.protocol.MessageProtos.FtpEventList result = new com.slark.pengder.protocol.MessageProtos.FtpEventList(this);
        int from_bitField0_ = bitField0_;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          ftpEvent_ = java.util.Collections.unmodifiableList(ftpEvent_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.ftpEvent_ = ftpEvent_;
        return result;
      }

      public Builder mergeFrom(com.slark.pengder.protocol.MessageProtos.FtpEventList other) {
        if (other == com.slark.pengder.protocol.MessageProtos.FtpEventList.getDefaultInstance()) return this;
        if (!other.ftpEvent_.isEmpty()) {
          if (ftpEvent_.isEmpty()) {
            ftpEvent_ = other.ftpEvent_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureFtpEventIsMutable();
            ftpEvent_.addAll(other.ftpEvent_);
          }
          
        }
        return this;
      }

      public final boolean isInitialized() {
        for (int i = 0; i < getFtpEventCount(); i++) {
          if (!getFtpEvent(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.slark.pengder.protocol.MessageProtos.FtpEventList parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.slark.pengder.protocol.MessageProtos.FtpEventList) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // repeated .biotech.osla.FtpEvent ftp_event = 1;
      private java.util.List<com.slark.pengder.protocol.MessageProtos.FtpEvent> ftpEvent_ =
        java.util.Collections.emptyList();
      private void ensureFtpEventIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          ftpEvent_ = new java.util.ArrayList<com.slark.pengder.protocol.MessageProtos.FtpEvent>(ftpEvent_);
          bitField0_ |= 0x00000001;
         }
      }

      /**
       * <code>repeated .biotech.osla.FtpEvent ftp_event = 1;</code>
       */
      public java.util.List<com.slark.pengder.protocol.MessageProtos.FtpEvent> getFtpEventList() {
        return java.util.Collections.unmodifiableList(ftpEvent_);
      }
      /**
       * <code>repeated .biotech.osla.FtpEvent ftp_event = 1;</code>
       */
      public int getFtpEventCount() {
        return ftpEvent_.size();
      }
      /**
       * <code>repeated .biotech.osla.FtpEvent ftp_event = 1;</code>
       */
      public com.slark.pengder.protocol.MessageProtos.FtpEvent getFtpEvent(int index) {
        return ftpEvent_.get(index);
      }
      /**
       * <code>repeated .biotech.osla.FtpEvent ftp_event = 1;</code>
       */
      public Builder setFtpEvent(
          int index, com.slark.pengder.protocol.MessageProtos.FtpEvent value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureFtpEventIsMutable();
        ftpEvent_.set(index, value);

        return this;
      }
      /**
       * <code>repeated .biotech.osla.FtpEvent ftp_event = 1;</code>
       */
      public Builder setFtpEvent(
          int index, com.slark.pengder.protocol.MessageProtos.FtpEvent.Builder builderForValue) {
        ensureFtpEventIsMutable();
        ftpEvent_.set(index, builderForValue.build());

        return this;
      }
      /**
       * <code>repeated .biotech.osla.FtpEvent ftp_event = 1;</code>
       */
      public Builder addFtpEvent(com.slark.pengder.protocol.MessageProtos.FtpEvent value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureFtpEventIsMutable();
        ftpEvent_.add(value);

        return this;
      }
      /**
       * <code>repeated .biotech.osla.FtpEvent ftp_event = 1;</code>
       */
      public Builder addFtpEvent(
          int index, com.slark.pengder.protocol.MessageProtos.FtpEvent value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureFtpEventIsMutable();
        ftpEvent_.add(index, value);

        return this;
      }
      /**
       * <code>repeated .biotech.osla.FtpEvent ftp_event = 1;</code>
       */
      public Builder addFtpEvent(
          com.slark.pengder.protocol.MessageProtos.FtpEvent.Builder builderForValue) {
        ensureFtpEventIsMutable();
        ftpEvent_.add(builderForValue.build());

        return this;
      }
      /**
       * <code>repeated .biotech.osla.FtpEvent ftp_event = 1;</code>
       */
      public Builder addFtpEvent(
          int index, com.slark.pengder.protocol.MessageProtos.FtpEvent.Builder builderForValue) {
        ensureFtpEventIsMutable();
        ftpEvent_.add(index, builderForValue.build());

        return this;
      }
      /**
       * <code>repeated .biotech.osla.FtpEvent ftp_event = 1;</code>
       */
      public Builder addAllFtpEvent(
          java.lang.Iterable<? extends com.slark.pengder.protocol.MessageProtos.FtpEvent> values) {
        ensureFtpEventIsMutable();
        super.addAll(values, ftpEvent_);

        return this;
      }
      /**
       * <code>repeated .biotech.osla.FtpEvent ftp_event = 1;</code>
       */
      public Builder clearFtpEvent() {
        ftpEvent_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);

        return this;
      }
      /**
       * <code>repeated .biotech.osla.FtpEvent ftp_event = 1;</code>
       */
      public Builder removeFtpEvent(int index) {
        ensureFtpEventIsMutable();
        ftpEvent_.remove(index);

        return this;
      }

      // @@protoc_insertion_point(builder_scope:biotech.osla.FtpEventList)
    }

    static {
      defaultInstance = new FtpEventList(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:biotech.osla.FtpEventList)
  }

  public interface DeviceCaptureEventOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {

    // required int64 id = 1;
    /**
     * <code>required int64 id = 1;</code>
     *
     * <pre>
     * 事件记录ID
     * </pre>
     */
    boolean hasId();
    /**
     * <code>required int64 id = 1;</code>
     *
     * <pre>
     * 事件记录ID
     * </pre>
     */
    long getId();

    // required int32 instrumentId = 2;
    /**
     * <code>required int32 instrumentId = 2;</code>
     *
     * <pre>
     * 设备ID
     * </pre>
     */
    boolean hasInstrumentId();
    /**
     * <code>required int32 instrumentId = 2;</code>
     *
     * <pre>
     * 设备ID
     * </pre>
     */
    int getInstrumentId();

    // required string deviceName = 3;
    /**
     * <code>required string deviceName = 3;</code>
     *
     * <pre>
     * 设备名称
     * </pre>
     */
    boolean hasDeviceName();
    /**
     * <code>required string deviceName = 3;</code>
     *
     * <pre>
     * 设备名称
     * </pre>
     */
    java.lang.String getDeviceName();
    /**
     * <code>required string deviceName = 3;</code>
     *
     * <pre>
     * 设备名称
     * </pre>
     */
    com.google.protobuf.ByteString
        getDeviceNameBytes();

    // required string deviceValue = 4;
    /**
     * <code>required string deviceValue = 4;</code>
     *
     * <pre>
     * 设备数据
     * </pre>
     */
    boolean hasDeviceValue();
    /**
     * <code>required string deviceValue = 4;</code>
     *
     * <pre>
     * 设备数据
     * </pre>
     */
    java.lang.String getDeviceValue();
    /**
     * <code>required string deviceValue = 4;</code>
     *
     * <pre>
     * 设备数据
     * </pre>
     */
    com.google.protobuf.ByteString
        getDeviceValueBytes();

    // required int32 captureTime = 5;
    /**
     * <code>required int32 captureTime = 5;</code>
     *
     * <pre>
     * 采集时间
     * </pre>
     */
    boolean hasCaptureTime();
    /**
     * <code>required int32 captureTime = 5;</code>
     *
     * <pre>
     * 采集时间
     * </pre>
     */
    int getCaptureTime();
  }
  /**
   * Protobuf type {@code biotech.osla.DeviceCaptureEvent}
   *
   * <pre>
   * 设备采集器采集的数据
   * </pre>
   */
  public static final class DeviceCaptureEvent extends
      com.google.protobuf.GeneratedMessageLite
      implements DeviceCaptureEventOrBuilder {
    // Use DeviceCaptureEvent.newBuilder() to construct.
    private DeviceCaptureEvent(com.google.protobuf.GeneratedMessageLite.Builder builder) {
      super(builder);

    }
    private DeviceCaptureEvent(boolean noInit) {}

    private static final DeviceCaptureEvent defaultInstance;
    public static DeviceCaptureEvent getDefaultInstance() {
      return defaultInstance;
    }

    public DeviceCaptureEvent getDefaultInstanceForType() {
      return defaultInstance;
    }

    private DeviceCaptureEvent(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              id_ = input.readInt64();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              instrumentId_ = input.readInt32();
              break;
            }
            case 26: {
              bitField0_ |= 0x00000004;
              deviceName_ = input.readBytes();
              break;
            }
            case 34: {
              bitField0_ |= 0x00000008;
              deviceValue_ = input.readBytes();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              captureTime_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static com.google.protobuf.Parser<DeviceCaptureEvent> PARSER =
        new com.google.protobuf.AbstractParser<DeviceCaptureEvent>() {
      public DeviceCaptureEvent parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new DeviceCaptureEvent(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<DeviceCaptureEvent> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required int64 id = 1;
    public static final int ID_FIELD_NUMBER = 1;
    private long id_;
    /**
     * <code>required int64 id = 1;</code>
     *
     * <pre>
     * 事件记录ID
     * </pre>
     */
    public boolean hasId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int64 id = 1;</code>
     *
     * <pre>
     * 事件记录ID
     * </pre>
     */
    public long getId() {
      return id_;
    }

    // required int32 instrumentId = 2;
    public static final int INSTRUMENTID_FIELD_NUMBER = 2;
    private int instrumentId_;
    /**
     * <code>required int32 instrumentId = 2;</code>
     *
     * <pre>
     * 设备ID
     * </pre>
     */
    public boolean hasInstrumentId() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required int32 instrumentId = 2;</code>
     *
     * <pre>
     * 设备ID
     * </pre>
     */
    public int getInstrumentId() {
      return instrumentId_;
    }

    // required string deviceName = 3;
    public static final int DEVICENAME_FIELD_NUMBER = 3;
    private java.lang.Object deviceName_;
    /**
     * <code>required string deviceName = 3;</code>
     *
     * <pre>
     * 设备名称
     * </pre>
     */
    public boolean hasDeviceName() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required string deviceName = 3;</code>
     *
     * <pre>
     * 设备名称
     * </pre>
     */
    public java.lang.String getDeviceName() {
      java.lang.Object ref = deviceName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          deviceName_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string deviceName = 3;</code>
     *
     * <pre>
     * 设备名称
     * </pre>
     */
    public com.google.protobuf.ByteString
        getDeviceNameBytes() {
      java.lang.Object ref = deviceName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        deviceName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // required string deviceValue = 4;
    public static final int DEVICEVALUE_FIELD_NUMBER = 4;
    private java.lang.Object deviceValue_;
    /**
     * <code>required string deviceValue = 4;</code>
     *
     * <pre>
     * 设备数据
     * </pre>
     */
    public boolean hasDeviceValue() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>required string deviceValue = 4;</code>
     *
     * <pre>
     * 设备数据
     * </pre>
     */
    public java.lang.String getDeviceValue() {
      java.lang.Object ref = deviceValue_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          deviceValue_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string deviceValue = 4;</code>
     *
     * <pre>
     * 设备数据
     * </pre>
     */
    public com.google.protobuf.ByteString
        getDeviceValueBytes() {
      java.lang.Object ref = deviceValue_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        deviceValue_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // required int32 captureTime = 5;
    public static final int CAPTURETIME_FIELD_NUMBER = 5;
    private int captureTime_;
    /**
     * <code>required int32 captureTime = 5;</code>
     *
     * <pre>
     * 采集时间
     * </pre>
     */
    public boolean hasCaptureTime() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>required int32 captureTime = 5;</code>
     *
     * <pre>
     * 采集时间
     * </pre>
     */
    public int getCaptureTime() {
      return captureTime_;
    }

    private void initFields() {
      id_ = 0L;
      instrumentId_ = 0;
      deviceName_ = "";
      deviceValue_ = "";
      captureTime_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasInstrumentId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasDeviceName()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasDeviceValue()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasCaptureTime()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt64(1, id_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, instrumentId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBytes(3, getDeviceNameBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeBytes(4, getDeviceValueBytes());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(5, captureTime_);
      }
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, id_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, instrumentId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, getDeviceNameBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(4, getDeviceValueBytes());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, captureTime_);
      }
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.slark.pengder.protocol.MessageProtos.DeviceCaptureEvent parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.slark.pengder.protocol.MessageProtos.DeviceCaptureEvent parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.slark.pengder.protocol.MessageProtos.DeviceCaptureEvent parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.slark.pengder.protocol.MessageProtos.DeviceCaptureEvent parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.slark.pengder.protocol.MessageProtos.DeviceCaptureEvent parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.slark.pengder.protocol.MessageProtos.DeviceCaptureEvent parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.slark.pengder.protocol.MessageProtos.DeviceCaptureEvent parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.slark.pengder.protocol.MessageProtos.DeviceCaptureEvent parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.slark.pengder.protocol.MessageProtos.DeviceCaptureEvent parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.slark.pengder.protocol.MessageProtos.DeviceCaptureEvent parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.slark.pengder.protocol.MessageProtos.DeviceCaptureEvent prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    /**
     * Protobuf type {@code biotech.osla.DeviceCaptureEvent}
     *
     * <pre>
     * 设备采集器采集的数据
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.slark.pengder.protocol.MessageProtos.DeviceCaptureEvent, Builder>
        implements com.slark.pengder.protocol.MessageProtos.DeviceCaptureEventOrBuilder {
      // Construct using com.slark.pengder.protocol.MessageProtos.DeviceCaptureEvent.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        id_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        instrumentId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        deviceName_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        deviceValue_ = "";
        bitField0_ = (bitField0_ & ~0x00000008);
        captureTime_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.slark.pengder.protocol.MessageProtos.DeviceCaptureEvent getDefaultInstanceForType() {
        return com.slark.pengder.protocol.MessageProtos.DeviceCaptureEvent.getDefaultInstance();
      }

      public com.slark.pengder.protocol.MessageProtos.DeviceCaptureEvent build() {
        com.slark.pengder.protocol.MessageProtos.DeviceCaptureEvent result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.slark.pengder.protocol.MessageProtos.DeviceCaptureEvent buildPartial() {
        com.slark.pengder.protocol.MessageProtos.DeviceCaptureEvent result = new com.slark.pengder.protocol.MessageProtos.DeviceCaptureEvent(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.id_ = id_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.instrumentId_ = instrumentId_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.deviceName_ = deviceName_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.deviceValue_ = deviceValue_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.captureTime_ = captureTime_;
        result.bitField0_ = to_bitField0_;
        return result;
      }

      public Builder mergeFrom(com.slark.pengder.protocol.MessageProtos.DeviceCaptureEvent other) {
        if (other == com.slark.pengder.protocol.MessageProtos.DeviceCaptureEvent.getDefaultInstance()) return this;
        if (other.hasId()) {
          setId(other.getId());
        }
        if (other.hasInstrumentId()) {
          setInstrumentId(other.getInstrumentId());
        }
        if (other.hasDeviceName()) {
          bitField0_ |= 0x00000004;
          deviceName_ = other.deviceName_;
          
        }
        if (other.hasDeviceValue()) {
          bitField0_ |= 0x00000008;
          deviceValue_ = other.deviceValue_;
          
        }
        if (other.hasCaptureTime()) {
          setCaptureTime(other.getCaptureTime());
        }
        return this;
      }

      public final boolean isInitialized() {
        if (!hasId()) {
          
          return false;
        }
        if (!hasInstrumentId()) {
          
          return false;
        }
        if (!hasDeviceName()) {
          
          return false;
        }
        if (!hasDeviceValue()) {
          
          return false;
        }
        if (!hasCaptureTime()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.slark.pengder.protocol.MessageProtos.DeviceCaptureEvent parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.slark.pengder.protocol.MessageProtos.DeviceCaptureEvent) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required int64 id = 1;
      private long id_ ;
      /**
       * <code>required int64 id = 1;</code>
       *
       * <pre>
       * 事件记录ID
       * </pre>
       */
      public boolean hasId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int64 id = 1;</code>
       *
       * <pre>
       * 事件记录ID
       * </pre>
       */
      public long getId() {
        return id_;
      }
      /**
       * <code>required int64 id = 1;</code>
       *
       * <pre>
       * 事件记录ID
       * </pre>
       */
      public Builder setId(long value) {
        bitField0_ |= 0x00000001;
        id_ = value;
        
        return this;
      }
      /**
       * <code>required int64 id = 1;</code>
       *
       * <pre>
       * 事件记录ID
       * </pre>
       */
      public Builder clearId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        id_ = 0L;
        
        return this;
      }

      // required int32 instrumentId = 2;
      private int instrumentId_ ;
      /**
       * <code>required int32 instrumentId = 2;</code>
       *
       * <pre>
       * 设备ID
       * </pre>
       */
      public boolean hasInstrumentId() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required int32 instrumentId = 2;</code>
       *
       * <pre>
       * 设备ID
       * </pre>
       */
      public int getInstrumentId() {
        return instrumentId_;
      }
      /**
       * <code>required int32 instrumentId = 2;</code>
       *
       * <pre>
       * 设备ID
       * </pre>
       */
      public Builder setInstrumentId(int value) {
        bitField0_ |= 0x00000002;
        instrumentId_ = value;
        
        return this;
      }
      /**
       * <code>required int32 instrumentId = 2;</code>
       *
       * <pre>
       * 设备ID
       * </pre>
       */
      public Builder clearInstrumentId() {
        bitField0_ = (bitField0_ & ~0x00000002);
        instrumentId_ = 0;
        
        return this;
      }

      // required string deviceName = 3;
      private java.lang.Object deviceName_ = "";
      /**
       * <code>required string deviceName = 3;</code>
       *
       * <pre>
       * 设备名称
       * </pre>
       */
      public boolean hasDeviceName() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required string deviceName = 3;</code>
       *
       * <pre>
       * 设备名称
       * </pre>
       */
      public java.lang.String getDeviceName() {
        java.lang.Object ref = deviceName_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          deviceName_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string deviceName = 3;</code>
       *
       * <pre>
       * 设备名称
       * </pre>
       */
      public com.google.protobuf.ByteString
          getDeviceNameBytes() {
        java.lang.Object ref = deviceName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          deviceName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string deviceName = 3;</code>
       *
       * <pre>
       * 设备名称
       * </pre>
       */
      public Builder setDeviceName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        deviceName_ = value;
        
        return this;
      }
      /**
       * <code>required string deviceName = 3;</code>
       *
       * <pre>
       * 设备名称
       * </pre>
       */
      public Builder clearDeviceName() {
        bitField0_ = (bitField0_ & ~0x00000004);
        deviceName_ = getDefaultInstance().getDeviceName();
        
        return this;
      }
      /**
       * <code>required string deviceName = 3;</code>
       *
       * <pre>
       * 设备名称
       * </pre>
       */
      public Builder setDeviceNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        deviceName_ = value;
        
        return this;
      }

      // required string deviceValue = 4;
      private java.lang.Object deviceValue_ = "";
      /**
       * <code>required string deviceValue = 4;</code>
       *
       * <pre>
       * 设备数据
       * </pre>
       */
      public boolean hasDeviceValue() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>required string deviceValue = 4;</code>
       *
       * <pre>
       * 设备数据
       * </pre>
       */
      public java.lang.String getDeviceValue() {
        java.lang.Object ref = deviceValue_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          deviceValue_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string deviceValue = 4;</code>
       *
       * <pre>
       * 设备数据
       * </pre>
       */
      public com.google.protobuf.ByteString
          getDeviceValueBytes() {
        java.lang.Object ref = deviceValue_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          deviceValue_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string deviceValue = 4;</code>
       *
       * <pre>
       * 设备数据
       * </pre>
       */
      public Builder setDeviceValue(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        deviceValue_ = value;
        
        return this;
      }
      /**
       * <code>required string deviceValue = 4;</code>
       *
       * <pre>
       * 设备数据
       * </pre>
       */
      public Builder clearDeviceValue() {
        bitField0_ = (bitField0_ & ~0x00000008);
        deviceValue_ = getDefaultInstance().getDeviceValue();
        
        return this;
      }
      /**
       * <code>required string deviceValue = 4;</code>
       *
       * <pre>
       * 设备数据
       * </pre>
       */
      public Builder setDeviceValueBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        deviceValue_ = value;
        
        return this;
      }

      // required int32 captureTime = 5;
      private int captureTime_ ;
      /**
       * <code>required int32 captureTime = 5;</code>
       *
       * <pre>
       * 采集时间
       * </pre>
       */
      public boolean hasCaptureTime() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>required int32 captureTime = 5;</code>
       *
       * <pre>
       * 采集时间
       * </pre>
       */
      public int getCaptureTime() {
        return captureTime_;
      }
      /**
       * <code>required int32 captureTime = 5;</code>
       *
       * <pre>
       * 采集时间
       * </pre>
       */
      public Builder setCaptureTime(int value) {
        bitField0_ |= 0x00000010;
        captureTime_ = value;
        
        return this;
      }
      /**
       * <code>required int32 captureTime = 5;</code>
       *
       * <pre>
       * 采集时间
       * </pre>
       */
      public Builder clearCaptureTime() {
        bitField0_ = (bitField0_ & ~0x00000010);
        captureTime_ = 0;
        
        return this;
      }

      // @@protoc_insertion_point(builder_scope:biotech.osla.DeviceCaptureEvent)
    }

    static {
      defaultInstance = new DeviceCaptureEvent(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:biotech.osla.DeviceCaptureEvent)
  }

  public interface DeviceCaptureEventListOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {

    // repeated .biotech.osla.DeviceCaptureEvent device_capture_event = 1;
    /**
     * <code>repeated .biotech.osla.DeviceCaptureEvent device_capture_event = 1;</code>
     */
    java.util.List<com.slark.pengder.protocol.MessageProtos.DeviceCaptureEvent> 
        getDeviceCaptureEventList();
    /**
     * <code>repeated .biotech.osla.DeviceCaptureEvent device_capture_event = 1;</code>
     */
    com.slark.pengder.protocol.MessageProtos.DeviceCaptureEvent getDeviceCaptureEvent(int index);
    /**
     * <code>repeated .biotech.osla.DeviceCaptureEvent device_capture_event = 1;</code>
     */
    int getDeviceCaptureEventCount();
  }
  /**
   * Protobuf type {@code biotech.osla.DeviceCaptureEventList}
   */
  public static final class DeviceCaptureEventList extends
      com.google.protobuf.GeneratedMessageLite
      implements DeviceCaptureEventListOrBuilder {
    // Use DeviceCaptureEventList.newBuilder() to construct.
    private DeviceCaptureEventList(com.google.protobuf.GeneratedMessageLite.Builder builder) {
      super(builder);

    }
    private DeviceCaptureEventList(boolean noInit) {}

    private static final DeviceCaptureEventList defaultInstance;
    public static DeviceCaptureEventList getDefaultInstance() {
      return defaultInstance;
    }

    public DeviceCaptureEventList getDefaultInstanceForType() {
      return defaultInstance;
    }

    private DeviceCaptureEventList(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                deviceCaptureEvent_ = new java.util.ArrayList<com.slark.pengder.protocol.MessageProtos.DeviceCaptureEvent>();
                mutable_bitField0_ |= 0x00000001;
              }
              deviceCaptureEvent_.add(input.readMessage(com.slark.pengder.protocol.MessageProtos.DeviceCaptureEvent.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          deviceCaptureEvent_ = java.util.Collections.unmodifiableList(deviceCaptureEvent_);
        }
        makeExtensionsImmutable();
      }
    }
    public static com.google.protobuf.Parser<DeviceCaptureEventList> PARSER =
        new com.google.protobuf.AbstractParser<DeviceCaptureEventList>() {
      public DeviceCaptureEventList parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new DeviceCaptureEventList(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<DeviceCaptureEventList> getParserForType() {
      return PARSER;
    }

    // repeated .biotech.osla.DeviceCaptureEvent device_capture_event = 1;
    public static final int DEVICE_CAPTURE_EVENT_FIELD_NUMBER = 1;
    private java.util.List<com.slark.pengder.protocol.MessageProtos.DeviceCaptureEvent> deviceCaptureEvent_;
    /**
     * <code>repeated .biotech.osla.DeviceCaptureEvent device_capture_event = 1;</code>
     */
    public java.util.List<com.slark.pengder.protocol.MessageProtos.DeviceCaptureEvent> getDeviceCaptureEventList() {
      return deviceCaptureEvent_;
    }
    /**
     * <code>repeated .biotech.osla.DeviceCaptureEvent device_capture_event = 1;</code>
     */
    public java.util.List<? extends com.slark.pengder.protocol.MessageProtos.DeviceCaptureEventOrBuilder> 
        getDeviceCaptureEventOrBuilderList() {
      return deviceCaptureEvent_;
    }
    /**
     * <code>repeated .biotech.osla.DeviceCaptureEvent device_capture_event = 1;</code>
     */
    public int getDeviceCaptureEventCount() {
      return deviceCaptureEvent_.size();
    }
    /**
     * <code>repeated .biotech.osla.DeviceCaptureEvent device_capture_event = 1;</code>
     */
    public com.slark.pengder.protocol.MessageProtos.DeviceCaptureEvent getDeviceCaptureEvent(int index) {
      return deviceCaptureEvent_.get(index);
    }
    /**
     * <code>repeated .biotech.osla.DeviceCaptureEvent device_capture_event = 1;</code>
     */
    public com.slark.pengder.protocol.MessageProtos.DeviceCaptureEventOrBuilder getDeviceCaptureEventOrBuilder(
        int index) {
      return deviceCaptureEvent_.get(index);
    }

    private void initFields() {
      deviceCaptureEvent_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      for (int i = 0; i < getDeviceCaptureEventCount(); i++) {
        if (!getDeviceCaptureEvent(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < deviceCaptureEvent_.size(); i++) {
        output.writeMessage(1, deviceCaptureEvent_.get(i));
      }
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < deviceCaptureEvent_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, deviceCaptureEvent_.get(i));
      }
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.slark.pengder.protocol.MessageProtos.DeviceCaptureEventList parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.slark.pengder.protocol.MessageProtos.DeviceCaptureEventList parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.slark.pengder.protocol.MessageProtos.DeviceCaptureEventList parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.slark.pengder.protocol.MessageProtos.DeviceCaptureEventList parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.slark.pengder.protocol.MessageProtos.DeviceCaptureEventList parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.slark.pengder.protocol.MessageProtos.DeviceCaptureEventList parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.slark.pengder.protocol.MessageProtos.DeviceCaptureEventList parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.slark.pengder.protocol.MessageProtos.DeviceCaptureEventList parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.slark.pengder.protocol.MessageProtos.DeviceCaptureEventList parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.slark.pengder.protocol.MessageProtos.DeviceCaptureEventList parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.slark.pengder.protocol.MessageProtos.DeviceCaptureEventList prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    /**
     * Protobuf type {@code biotech.osla.DeviceCaptureEventList}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.slark.pengder.protocol.MessageProtos.DeviceCaptureEventList, Builder>
        implements com.slark.pengder.protocol.MessageProtos.DeviceCaptureEventListOrBuilder {
      // Construct using com.slark.pengder.protocol.MessageProtos.DeviceCaptureEventList.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        deviceCaptureEvent_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.slark.pengder.protocol.MessageProtos.DeviceCaptureEventList getDefaultInstanceForType() {
        return com.slark.pengder.protocol.MessageProtos.DeviceCaptureEventList.getDefaultInstance();
      }

      public com.slark.pengder.protocol.MessageProtos.DeviceCaptureEventList build() {
        com.slark.pengder.protocol.MessageProtos.DeviceCaptureEventList result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.slark.pengder.protocol.MessageProtos.DeviceCaptureEventList buildPartial() {
        com.slark.pengder.protocol.MessageProtos.DeviceCaptureEventList result = new com.slark.pengder.protocol.MessageProtos.DeviceCaptureEventList(this);
        int from_bitField0_ = bitField0_;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          deviceCaptureEvent_ = java.util.Collections.unmodifiableList(deviceCaptureEvent_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.deviceCaptureEvent_ = deviceCaptureEvent_;
        return result;
      }

      public Builder mergeFrom(com.slark.pengder.protocol.MessageProtos.DeviceCaptureEventList other) {
        if (other == com.slark.pengder.protocol.MessageProtos.DeviceCaptureEventList.getDefaultInstance()) return this;
        if (!other.deviceCaptureEvent_.isEmpty()) {
          if (deviceCaptureEvent_.isEmpty()) {
            deviceCaptureEvent_ = other.deviceCaptureEvent_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureDeviceCaptureEventIsMutable();
            deviceCaptureEvent_.addAll(other.deviceCaptureEvent_);
          }
          
        }
        return this;
      }

      public final boolean isInitialized() {
        for (int i = 0; i < getDeviceCaptureEventCount(); i++) {
          if (!getDeviceCaptureEvent(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.slark.pengder.protocol.MessageProtos.DeviceCaptureEventList parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.slark.pengder.protocol.MessageProtos.DeviceCaptureEventList) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // repeated .biotech.osla.DeviceCaptureEvent device_capture_event = 1;
      private java.util.List<com.slark.pengder.protocol.MessageProtos.DeviceCaptureEvent> deviceCaptureEvent_ =
        java.util.Collections.emptyList();
      private void ensureDeviceCaptureEventIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          deviceCaptureEvent_ = new java.util.ArrayList<com.slark.pengder.protocol.MessageProtos.DeviceCaptureEvent>(deviceCaptureEvent_);
          bitField0_ |= 0x00000001;
         }
      }

      /**
       * <code>repeated .biotech.osla.DeviceCaptureEvent device_capture_event = 1;</code>
       */
      public java.util.List<com.slark.pengder.protocol.MessageProtos.DeviceCaptureEvent> getDeviceCaptureEventList() {
        return java.util.Collections.unmodifiableList(deviceCaptureEvent_);
      }
      /**
       * <code>repeated .biotech.osla.DeviceCaptureEvent device_capture_event = 1;</code>
       */
      public int getDeviceCaptureEventCount() {
        return deviceCaptureEvent_.size();
      }
      /**
       * <code>repeated .biotech.osla.DeviceCaptureEvent device_capture_event = 1;</code>
       */
      public com.slark.pengder.protocol.MessageProtos.DeviceCaptureEvent getDeviceCaptureEvent(int index) {
        return deviceCaptureEvent_.get(index);
      }
      /**
       * <code>repeated .biotech.osla.DeviceCaptureEvent device_capture_event = 1;</code>
       */
      public Builder setDeviceCaptureEvent(
          int index, com.slark.pengder.protocol.MessageProtos.DeviceCaptureEvent value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureDeviceCaptureEventIsMutable();
        deviceCaptureEvent_.set(index, value);

        return this;
      }
      /**
       * <code>repeated .biotech.osla.DeviceCaptureEvent device_capture_event = 1;</code>
       */
      public Builder setDeviceCaptureEvent(
          int index, com.slark.pengder.protocol.MessageProtos.DeviceCaptureEvent.Builder builderForValue) {
        ensureDeviceCaptureEventIsMutable();
        deviceCaptureEvent_.set(index, builderForValue.build());

        return this;
      }
      /**
       * <code>repeated .biotech.osla.DeviceCaptureEvent device_capture_event = 1;</code>
       */
      public Builder addDeviceCaptureEvent(com.slark.pengder.protocol.MessageProtos.DeviceCaptureEvent value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureDeviceCaptureEventIsMutable();
        deviceCaptureEvent_.add(value);

        return this;
      }
      /**
       * <code>repeated .biotech.osla.DeviceCaptureEvent device_capture_event = 1;</code>
       */
      public Builder addDeviceCaptureEvent(
          int index, com.slark.pengder.protocol.MessageProtos.DeviceCaptureEvent value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureDeviceCaptureEventIsMutable();
        deviceCaptureEvent_.add(index, value);

        return this;
      }
      /**
       * <code>repeated .biotech.osla.DeviceCaptureEvent device_capture_event = 1;</code>
       */
      public Builder addDeviceCaptureEvent(
          com.slark.pengder.protocol.MessageProtos.DeviceCaptureEvent.Builder builderForValue) {
        ensureDeviceCaptureEventIsMutable();
        deviceCaptureEvent_.add(builderForValue.build());

        return this;
      }
      /**
       * <code>repeated .biotech.osla.DeviceCaptureEvent device_capture_event = 1;</code>
       */
      public Builder addDeviceCaptureEvent(
          int index, com.slark.pengder.protocol.MessageProtos.DeviceCaptureEvent.Builder builderForValue) {
        ensureDeviceCaptureEventIsMutable();
        deviceCaptureEvent_.add(index, builderForValue.build());

        return this;
      }
      /**
       * <code>repeated .biotech.osla.DeviceCaptureEvent device_capture_event = 1;</code>
       */
      public Builder addAllDeviceCaptureEvent(
          java.lang.Iterable<? extends com.slark.pengder.protocol.MessageProtos.DeviceCaptureEvent> values) {
        ensureDeviceCaptureEventIsMutable();
        super.addAll(values, deviceCaptureEvent_);

        return this;
      }
      /**
       * <code>repeated .biotech.osla.DeviceCaptureEvent device_capture_event = 1;</code>
       */
      public Builder clearDeviceCaptureEvent() {
        deviceCaptureEvent_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);

        return this;
      }
      /**
       * <code>repeated .biotech.osla.DeviceCaptureEvent device_capture_event = 1;</code>
       */
      public Builder removeDeviceCaptureEvent(int index) {
        ensureDeviceCaptureEventIsMutable();
        deviceCaptureEvent_.remove(index);

        return this;
      }

      // @@protoc_insertion_point(builder_scope:biotech.osla.DeviceCaptureEventList)
    }

    static {
      defaultInstance = new DeviceCaptureEventList(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:biotech.osla.DeviceCaptureEventList)
  }

  public interface SessionOpertaionReqOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {

    // required int32 id = 1;
    /**
     * <code>required int32 id = 1;</code>
     *
     * <pre>
     * 数据库主键
     * </pre>
     */
    boolean hasId();
    /**
     * <code>required int32 id = 1;</code>
     *
     * <pre>
     * 数据库主键
     * </pre>
     */
    int getId();

    // required int32 user_id = 2;
    /**
     * <code>required int32 user_id = 2;</code>
     *
     * <pre>
     * 用户ID
     * </pre>
     */
    boolean hasUserId();
    /**
     * <code>required int32 user_id = 2;</code>
     *
     * <pre>
     * 用户ID
     * </pre>
     */
    int getUserId();

    // required string card_serial = 3;
    /**
     * <code>required string card_serial = 3;</code>
     *
     * <pre>
     * 卡号
     * </pre>
     */
    boolean hasCardSerial();
    /**
     * <code>required string card_serial = 3;</code>
     *
     * <pre>
     * 卡号
     * </pre>
     */
    java.lang.String getCardSerial();
    /**
     * <code>required string card_serial = 3;</code>
     *
     * <pre>
     * 卡号
     * </pre>
     */
    com.google.protobuf.ByteString
        getCardSerialBytes();

    // required int32 user_role = 4;
    /**
     * <code>required int32 user_role = 4;</code>
     *
     * <pre>
     * 用户角色
     * </pre>
     */
    boolean hasUserRole();
    /**
     * <code>required int32 user_role = 4;</code>
     *
     * <pre>
     * 用户角色
     * </pre>
     */
    int getUserRole();

    // required int32 operation_type = 5;
    /**
     * <code>required int32 operation_type = 5;</code>
     *
     * <pre>
     * 8 上机，1 下机
     * </pre>
     */
    boolean hasOperationType();
    /**
     * <code>required int32 operation_type = 5;</code>
     *
     * <pre>
     * 8 上机，1 下机
     * </pre>
     */
    int getOperationType();
  }
  /**
   * Protobuf type {@code biotech.osla.SessionOpertaionReq}
   *
   * <pre>
   * 开始结束回话操作
   * </pre>
   */
  public static final class SessionOpertaionReq extends
      com.google.protobuf.GeneratedMessageLite
      implements SessionOpertaionReqOrBuilder {
    // Use SessionOpertaionReq.newBuilder() to construct.
    private SessionOpertaionReq(com.google.protobuf.GeneratedMessageLite.Builder builder) {
      super(builder);

    }
    private SessionOpertaionReq(boolean noInit) {}

    private static final SessionOpertaionReq defaultInstance;
    public static SessionOpertaionReq getDefaultInstance() {
      return defaultInstance;
    }

    public SessionOpertaionReq getDefaultInstanceForType() {
      return defaultInstance;
    }

    private SessionOpertaionReq(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              id_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              userId_ = input.readInt32();
              break;
            }
            case 26: {
              bitField0_ |= 0x00000004;
              cardSerial_ = input.readBytes();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              userRole_ = input.readInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              operationType_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static com.google.protobuf.Parser<SessionOpertaionReq> PARSER =
        new com.google.protobuf.AbstractParser<SessionOpertaionReq>() {
      public SessionOpertaionReq parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new SessionOpertaionReq(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<SessionOpertaionReq> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required int32 id = 1;
    public static final int ID_FIELD_NUMBER = 1;
    private int id_;
    /**
     * <code>required int32 id = 1;</code>
     *
     * <pre>
     * 数据库主键
     * </pre>
     */
    public boolean hasId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int32 id = 1;</code>
     *
     * <pre>
     * 数据库主键
     * </pre>
     */
    public int getId() {
      return id_;
    }

    // required int32 user_id = 2;
    public static final int USER_ID_FIELD_NUMBER = 2;
    private int userId_;
    /**
     * <code>required int32 user_id = 2;</code>
     *
     * <pre>
     * 用户ID
     * </pre>
     */
    public boolean hasUserId() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required int32 user_id = 2;</code>
     *
     * <pre>
     * 用户ID
     * </pre>
     */
    public int getUserId() {
      return userId_;
    }

    // required string card_serial = 3;
    public static final int CARD_SERIAL_FIELD_NUMBER = 3;
    private java.lang.Object cardSerial_;
    /**
     * <code>required string card_serial = 3;</code>
     *
     * <pre>
     * 卡号
     * </pre>
     */
    public boolean hasCardSerial() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required string card_serial = 3;</code>
     *
     * <pre>
     * 卡号
     * </pre>
     */
    public java.lang.String getCardSerial() {
      java.lang.Object ref = cardSerial_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          cardSerial_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string card_serial = 3;</code>
     *
     * <pre>
     * 卡号
     * </pre>
     */
    public com.google.protobuf.ByteString
        getCardSerialBytes() {
      java.lang.Object ref = cardSerial_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        cardSerial_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // required int32 user_role = 4;
    public static final int USER_ROLE_FIELD_NUMBER = 4;
    private int userRole_;
    /**
     * <code>required int32 user_role = 4;</code>
     *
     * <pre>
     * 用户角色
     * </pre>
     */
    public boolean hasUserRole() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>required int32 user_role = 4;</code>
     *
     * <pre>
     * 用户角色
     * </pre>
     */
    public int getUserRole() {
      return userRole_;
    }

    // required int32 operation_type = 5;
    public static final int OPERATION_TYPE_FIELD_NUMBER = 5;
    private int operationType_;
    /**
     * <code>required int32 operation_type = 5;</code>
     *
     * <pre>
     * 8 上机，1 下机
     * </pre>
     */
    public boolean hasOperationType() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>required int32 operation_type = 5;</code>
     *
     * <pre>
     * 8 上机，1 下机
     * </pre>
     */
    public int getOperationType() {
      return operationType_;
    }

    private void initFields() {
      id_ = 0;
      userId_ = 0;
      cardSerial_ = "";
      userRole_ = 0;
      operationType_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasUserId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasCardSerial()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasUserRole()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasOperationType()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, id_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, userId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBytes(3, getCardSerialBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(4, userRole_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(5, operationType_);
      }
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, id_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, userId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, getCardSerialBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, userRole_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, operationType_);
      }
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.slark.pengder.protocol.MessageProtos.SessionOpertaionReq parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.slark.pengder.protocol.MessageProtos.SessionOpertaionReq parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.slark.pengder.protocol.MessageProtos.SessionOpertaionReq parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.slark.pengder.protocol.MessageProtos.SessionOpertaionReq parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.slark.pengder.protocol.MessageProtos.SessionOpertaionReq parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.slark.pengder.protocol.MessageProtos.SessionOpertaionReq parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.slark.pengder.protocol.MessageProtos.SessionOpertaionReq parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.slark.pengder.protocol.MessageProtos.SessionOpertaionReq parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.slark.pengder.protocol.MessageProtos.SessionOpertaionReq parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.slark.pengder.protocol.MessageProtos.SessionOpertaionReq parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.slark.pengder.protocol.MessageProtos.SessionOpertaionReq prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    /**
     * Protobuf type {@code biotech.osla.SessionOpertaionReq}
     *
     * <pre>
     * 开始结束回话操作
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.slark.pengder.protocol.MessageProtos.SessionOpertaionReq, Builder>
        implements com.slark.pengder.protocol.MessageProtos.SessionOpertaionReqOrBuilder {
      // Construct using com.slark.pengder.protocol.MessageProtos.SessionOpertaionReq.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        id_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        userId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        cardSerial_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        userRole_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        operationType_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.slark.pengder.protocol.MessageProtos.SessionOpertaionReq getDefaultInstanceForType() {
        return com.slark.pengder.protocol.MessageProtos.SessionOpertaionReq.getDefaultInstance();
      }

      public com.slark.pengder.protocol.MessageProtos.SessionOpertaionReq build() {
        com.slark.pengder.protocol.MessageProtos.SessionOpertaionReq result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.slark.pengder.protocol.MessageProtos.SessionOpertaionReq buildPartial() {
        com.slark.pengder.protocol.MessageProtos.SessionOpertaionReq result = new com.slark.pengder.protocol.MessageProtos.SessionOpertaionReq(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.id_ = id_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.userId_ = userId_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.cardSerial_ = cardSerial_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.userRole_ = userRole_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.operationType_ = operationType_;
        result.bitField0_ = to_bitField0_;
        return result;
      }

      public Builder mergeFrom(com.slark.pengder.protocol.MessageProtos.SessionOpertaionReq other) {
        if (other == com.slark.pengder.protocol.MessageProtos.SessionOpertaionReq.getDefaultInstance()) return this;
        if (other.hasId()) {
          setId(other.getId());
        }
        if (other.hasUserId()) {
          setUserId(other.getUserId());
        }
        if (other.hasCardSerial()) {
          bitField0_ |= 0x00000004;
          cardSerial_ = other.cardSerial_;
          
        }
        if (other.hasUserRole()) {
          setUserRole(other.getUserRole());
        }
        if (other.hasOperationType()) {
          setOperationType(other.getOperationType());
        }
        return this;
      }

      public final boolean isInitialized() {
        if (!hasId()) {
          
          return false;
        }
        if (!hasUserId()) {
          
          return false;
        }
        if (!hasCardSerial()) {
          
          return false;
        }
        if (!hasUserRole()) {
          
          return false;
        }
        if (!hasOperationType()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.slark.pengder.protocol.MessageProtos.SessionOpertaionReq parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.slark.pengder.protocol.MessageProtos.SessionOpertaionReq) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required int32 id = 1;
      private int id_ ;
      /**
       * <code>required int32 id = 1;</code>
       *
       * <pre>
       * 数据库主键
       * </pre>
       */
      public boolean hasId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int32 id = 1;</code>
       *
       * <pre>
       * 数据库主键
       * </pre>
       */
      public int getId() {
        return id_;
      }
      /**
       * <code>required int32 id = 1;</code>
       *
       * <pre>
       * 数据库主键
       * </pre>
       */
      public Builder setId(int value) {
        bitField0_ |= 0x00000001;
        id_ = value;
        
        return this;
      }
      /**
       * <code>required int32 id = 1;</code>
       *
       * <pre>
       * 数据库主键
       * </pre>
       */
      public Builder clearId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        id_ = 0;
        
        return this;
      }

      // required int32 user_id = 2;
      private int userId_ ;
      /**
       * <code>required int32 user_id = 2;</code>
       *
       * <pre>
       * 用户ID
       * </pre>
       */
      public boolean hasUserId() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required int32 user_id = 2;</code>
       *
       * <pre>
       * 用户ID
       * </pre>
       */
      public int getUserId() {
        return userId_;
      }
      /**
       * <code>required int32 user_id = 2;</code>
       *
       * <pre>
       * 用户ID
       * </pre>
       */
      public Builder setUserId(int value) {
        bitField0_ |= 0x00000002;
        userId_ = value;
        
        return this;
      }
      /**
       * <code>required int32 user_id = 2;</code>
       *
       * <pre>
       * 用户ID
       * </pre>
       */
      public Builder clearUserId() {
        bitField0_ = (bitField0_ & ~0x00000002);
        userId_ = 0;
        
        return this;
      }

      // required string card_serial = 3;
      private java.lang.Object cardSerial_ = "";
      /**
       * <code>required string card_serial = 3;</code>
       *
       * <pre>
       * 卡号
       * </pre>
       */
      public boolean hasCardSerial() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required string card_serial = 3;</code>
       *
       * <pre>
       * 卡号
       * </pre>
       */
      public java.lang.String getCardSerial() {
        java.lang.Object ref = cardSerial_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          cardSerial_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string card_serial = 3;</code>
       *
       * <pre>
       * 卡号
       * </pre>
       */
      public com.google.protobuf.ByteString
          getCardSerialBytes() {
        java.lang.Object ref = cardSerial_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          cardSerial_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string card_serial = 3;</code>
       *
       * <pre>
       * 卡号
       * </pre>
       */
      public Builder setCardSerial(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        cardSerial_ = value;
        
        return this;
      }
      /**
       * <code>required string card_serial = 3;</code>
       *
       * <pre>
       * 卡号
       * </pre>
       */
      public Builder clearCardSerial() {
        bitField0_ = (bitField0_ & ~0x00000004);
        cardSerial_ = getDefaultInstance().getCardSerial();
        
        return this;
      }
      /**
       * <code>required string card_serial = 3;</code>
       *
       * <pre>
       * 卡号
       * </pre>
       */
      public Builder setCardSerialBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        cardSerial_ = value;
        
        return this;
      }

      // required int32 user_role = 4;
      private int userRole_ ;
      /**
       * <code>required int32 user_role = 4;</code>
       *
       * <pre>
       * 用户角色
       * </pre>
       */
      public boolean hasUserRole() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>required int32 user_role = 4;</code>
       *
       * <pre>
       * 用户角色
       * </pre>
       */
      public int getUserRole() {
        return userRole_;
      }
      /**
       * <code>required int32 user_role = 4;</code>
       *
       * <pre>
       * 用户角色
       * </pre>
       */
      public Builder setUserRole(int value) {
        bitField0_ |= 0x00000008;
        userRole_ = value;
        
        return this;
      }
      /**
       * <code>required int32 user_role = 4;</code>
       *
       * <pre>
       * 用户角色
       * </pre>
       */
      public Builder clearUserRole() {
        bitField0_ = (bitField0_ & ~0x00000008);
        userRole_ = 0;
        
        return this;
      }

      // required int32 operation_type = 5;
      private int operationType_ ;
      /**
       * <code>required int32 operation_type = 5;</code>
       *
       * <pre>
       * 8 上机，1 下机
       * </pre>
       */
      public boolean hasOperationType() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>required int32 operation_type = 5;</code>
       *
       * <pre>
       * 8 上机，1 下机
       * </pre>
       */
      public int getOperationType() {
        return operationType_;
      }
      /**
       * <code>required int32 operation_type = 5;</code>
       *
       * <pre>
       * 8 上机，1 下机
       * </pre>
       */
      public Builder setOperationType(int value) {
        bitField0_ |= 0x00000010;
        operationType_ = value;
        
        return this;
      }
      /**
       * <code>required int32 operation_type = 5;</code>
       *
       * <pre>
       * 8 上机，1 下机
       * </pre>
       */
      public Builder clearOperationType() {
        bitField0_ = (bitField0_ & ~0x00000010);
        operationType_ = 0;
        
        return this;
      }

      // @@protoc_insertion_point(builder_scope:biotech.osla.SessionOpertaionReq)
    }

    static {
      defaultInstance = new SessionOpertaionReq(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:biotech.osla.SessionOpertaionReq)
  }

  public interface SessionOpertaionRepOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {

    // required int32 id = 1;
    /**
     * <code>required int32 id = 1;</code>
     *
     * <pre>
     * 数据库主键
     * </pre>
     */
    boolean hasId();
    /**
     * <code>required int32 id = 1;</code>
     *
     * <pre>
     * 数据库主键
     * </pre>
     */
    int getId();

    // required int32 status = 2;
    /**
     * <code>required int32 status = 2;</code>
     *
     * <pre>
     * 状态数据
     * </pre>
     */
    boolean hasStatus();
    /**
     * <code>required int32 status = 2;</code>
     *
     * <pre>
     * 状态数据
     * </pre>
     */
    int getStatus();

    // required int32 BookingId = 3;
    /**
     * <code>required int32 BookingId = 3;</code>
     *
     * <pre>
     * 是否预约 0：无，1：有
     * </pre>
     */
    boolean hasBookingId();
    /**
     * <code>required int32 BookingId = 3;</code>
     *
     * <pre>
     * 是否预约 0：无，1：有
     * </pre>
     */
    int getBookingId();
  }
  /**
   * Protobuf type {@code biotech.osla.SessionOpertaionRep}
   */
  public static final class SessionOpertaionRep extends
      com.google.protobuf.GeneratedMessageLite
      implements SessionOpertaionRepOrBuilder {
    // Use SessionOpertaionRep.newBuilder() to construct.
    private SessionOpertaionRep(com.google.protobuf.GeneratedMessageLite.Builder builder) {
      super(builder);

    }
    private SessionOpertaionRep(boolean noInit) {}

    private static final SessionOpertaionRep defaultInstance;
    public static SessionOpertaionRep getDefaultInstance() {
      return defaultInstance;
    }

    public SessionOpertaionRep getDefaultInstanceForType() {
      return defaultInstance;
    }

    private SessionOpertaionRep(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              id_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              status_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              bookingId_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static com.google.protobuf.Parser<SessionOpertaionRep> PARSER =
        new com.google.protobuf.AbstractParser<SessionOpertaionRep>() {
      public SessionOpertaionRep parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new SessionOpertaionRep(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<SessionOpertaionRep> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required int32 id = 1;
    public static final int ID_FIELD_NUMBER = 1;
    private int id_;
    /**
     * <code>required int32 id = 1;</code>
     *
     * <pre>
     * 数据库主键
     * </pre>
     */
    public boolean hasId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int32 id = 1;</code>
     *
     * <pre>
     * 数据库主键
     * </pre>
     */
    public int getId() {
      return id_;
    }

    // required int32 status = 2;
    public static final int STATUS_FIELD_NUMBER = 2;
    private int status_;
    /**
     * <code>required int32 status = 2;</code>
     *
     * <pre>
     * 状态数据
     * </pre>
     */
    public boolean hasStatus() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required int32 status = 2;</code>
     *
     * <pre>
     * 状态数据
     * </pre>
     */
    public int getStatus() {
      return status_;
    }

    // required int32 BookingId = 3;
    public static final int BOOKINGID_FIELD_NUMBER = 3;
    private int bookingId_;
    /**
     * <code>required int32 BookingId = 3;</code>
     *
     * <pre>
     * 是否预约 0：无，1：有
     * </pre>
     */
    public boolean hasBookingId() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required int32 BookingId = 3;</code>
     *
     * <pre>
     * 是否预约 0：无，1：有
     * </pre>
     */
    public int getBookingId() {
      return bookingId_;
    }

    private void initFields() {
      id_ = 0;
      status_ = 0;
      bookingId_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasStatus()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasBookingId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, id_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, status_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, bookingId_);
      }
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, id_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, status_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, bookingId_);
      }
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.slark.pengder.protocol.MessageProtos.SessionOpertaionRep parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.slark.pengder.protocol.MessageProtos.SessionOpertaionRep parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.slark.pengder.protocol.MessageProtos.SessionOpertaionRep parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.slark.pengder.protocol.MessageProtos.SessionOpertaionRep parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.slark.pengder.protocol.MessageProtos.SessionOpertaionRep parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.slark.pengder.protocol.MessageProtos.SessionOpertaionRep parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.slark.pengder.protocol.MessageProtos.SessionOpertaionRep parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.slark.pengder.protocol.MessageProtos.SessionOpertaionRep parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.slark.pengder.protocol.MessageProtos.SessionOpertaionRep parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.slark.pengder.protocol.MessageProtos.SessionOpertaionRep parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.slark.pengder.protocol.MessageProtos.SessionOpertaionRep prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    /**
     * Protobuf type {@code biotech.osla.SessionOpertaionRep}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.slark.pengder.protocol.MessageProtos.SessionOpertaionRep, Builder>
        implements com.slark.pengder.protocol.MessageProtos.SessionOpertaionRepOrBuilder {
      // Construct using com.slark.pengder.protocol.MessageProtos.SessionOpertaionRep.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        id_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        status_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        bookingId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.slark.pengder.protocol.MessageProtos.SessionOpertaionRep getDefaultInstanceForType() {
        return com.slark.pengder.protocol.MessageProtos.SessionOpertaionRep.getDefaultInstance();
      }

      public com.slark.pengder.protocol.MessageProtos.SessionOpertaionRep build() {
        com.slark.pengder.protocol.MessageProtos.SessionOpertaionRep result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.slark.pengder.protocol.MessageProtos.SessionOpertaionRep buildPartial() {
        com.slark.pengder.protocol.MessageProtos.SessionOpertaionRep result = new com.slark.pengder.protocol.MessageProtos.SessionOpertaionRep(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.id_ = id_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.status_ = status_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.bookingId_ = bookingId_;
        result.bitField0_ = to_bitField0_;
        return result;
      }

      public Builder mergeFrom(com.slark.pengder.protocol.MessageProtos.SessionOpertaionRep other) {
        if (other == com.slark.pengder.protocol.MessageProtos.SessionOpertaionRep.getDefaultInstance()) return this;
        if (other.hasId()) {
          setId(other.getId());
        }
        if (other.hasStatus()) {
          setStatus(other.getStatus());
        }
        if (other.hasBookingId()) {
          setBookingId(other.getBookingId());
        }
        return this;
      }

      public final boolean isInitialized() {
        if (!hasId()) {
          
          return false;
        }
        if (!hasStatus()) {
          
          return false;
        }
        if (!hasBookingId()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.slark.pengder.protocol.MessageProtos.SessionOpertaionRep parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.slark.pengder.protocol.MessageProtos.SessionOpertaionRep) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required int32 id = 1;
      private int id_ ;
      /**
       * <code>required int32 id = 1;</code>
       *
       * <pre>
       * 数据库主键
       * </pre>
       */
      public boolean hasId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int32 id = 1;</code>
       *
       * <pre>
       * 数据库主键
       * </pre>
       */
      public int getId() {
        return id_;
      }
      /**
       * <code>required int32 id = 1;</code>
       *
       * <pre>
       * 数据库主键
       * </pre>
       */
      public Builder setId(int value) {
        bitField0_ |= 0x00000001;
        id_ = value;
        
        return this;
      }
      /**
       * <code>required int32 id = 1;</code>
       *
       * <pre>
       * 数据库主键
       * </pre>
       */
      public Builder clearId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        id_ = 0;
        
        return this;
      }

      // required int32 status = 2;
      private int status_ ;
      /**
       * <code>required int32 status = 2;</code>
       *
       * <pre>
       * 状态数据
       * </pre>
       */
      public boolean hasStatus() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required int32 status = 2;</code>
       *
       * <pre>
       * 状态数据
       * </pre>
       */
      public int getStatus() {
        return status_;
      }
      /**
       * <code>required int32 status = 2;</code>
       *
       * <pre>
       * 状态数据
       * </pre>
       */
      public Builder setStatus(int value) {
        bitField0_ |= 0x00000002;
        status_ = value;
        
        return this;
      }
      /**
       * <code>required int32 status = 2;</code>
       *
       * <pre>
       * 状态数据
       * </pre>
       */
      public Builder clearStatus() {
        bitField0_ = (bitField0_ & ~0x00000002);
        status_ = 0;
        
        return this;
      }

      // required int32 BookingId = 3;
      private int bookingId_ ;
      /**
       * <code>required int32 BookingId = 3;</code>
       *
       * <pre>
       * 是否预约 0：无，1：有
       * </pre>
       */
      public boolean hasBookingId() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required int32 BookingId = 3;</code>
       *
       * <pre>
       * 是否预约 0：无，1：有
       * </pre>
       */
      public int getBookingId() {
        return bookingId_;
      }
      /**
       * <code>required int32 BookingId = 3;</code>
       *
       * <pre>
       * 是否预约 0：无，1：有
       * </pre>
       */
      public Builder setBookingId(int value) {
        bitField0_ |= 0x00000004;
        bookingId_ = value;
        
        return this;
      }
      /**
       * <code>required int32 BookingId = 3;</code>
       *
       * <pre>
       * 是否预约 0：无，1：有
       * </pre>
       */
      public Builder clearBookingId() {
        bitField0_ = (bitField0_ & ~0x00000004);
        bookingId_ = 0;
        
        return this;
      }

      // @@protoc_insertion_point(builder_scope:biotech.osla.SessionOpertaionRep)
    }

    static {
      defaultInstance = new SessionOpertaionRep(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:biotech.osla.SessionOpertaionRep)
  }

  public interface EntrustOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {

    // required int32 id = 1;
    /**
     * <code>required int32 id = 1;</code>
     *
     * <pre>
     * 委托ID
     * </pre>
     */
    boolean hasId();
    /**
     * <code>required int32 id = 1;</code>
     *
     * <pre>
     * 委托ID
     * </pre>
     */
    int getId();

    // required int32 user_id = 2;
    /**
     * <code>required int32 user_id = 2;</code>
     *
     * <pre>
     * 用户ID
     * </pre>
     */
    boolean hasUserId();
    /**
     * <code>required int32 user_id = 2;</code>
     *
     * <pre>
     * 用户ID
     * </pre>
     */
    int getUserId();

    // required string title = 3;
    /**
     * <code>required string title = 3;</code>
     *
     * <pre>
     * 委托名
     * </pre>
     */
    boolean hasTitle();
    /**
     * <code>required string title = 3;</code>
     *
     * <pre>
     * 委托名
     * </pre>
     */
    java.lang.String getTitle();
    /**
     * <code>required string title = 3;</code>
     *
     * <pre>
     * 委托名
     * </pre>
     */
    com.google.protobuf.ByteString
        getTitleBytes();

    // required int32 status = 4;
    /**
     * <code>required int32 status = 4;</code>
     *
     * <pre>
     * 委托状态 1：已提交 2：待确定 3：已确定 4：未执行 5：未完成 6：已完成
     * </pre>
     */
    boolean hasStatus();
    /**
     * <code>required int32 status = 4;</code>
     *
     * <pre>
     * 委托状态 1：已提交 2：待确定 3：已确定 4：未执行 5：未完成 6：已完成
     * </pre>
     */
    int getStatus();

    // required int32 is_doing = 5;
    /**
     * <code>required int32 is_doing = 5;</code>
     *
     * <pre>
     * 是否试验中 0 ,1
     * </pre>
     */
    boolean hasIsDoing();
    /**
     * <code>required int32 is_doing = 5;</code>
     *
     * <pre>
     * 是否试验中 0 ,1
     * </pre>
     */
    int getIsDoing();
  }
  /**
   * Protobuf type {@code biotech.osla.Entrust}
   *
   * <pre>
   * 委托记录
   * </pre>
   */
  public static final class Entrust extends
      com.google.protobuf.GeneratedMessageLite
      implements EntrustOrBuilder {
    // Use Entrust.newBuilder() to construct.
    private Entrust(com.google.protobuf.GeneratedMessageLite.Builder builder) {
      super(builder);

    }
    private Entrust(boolean noInit) {}

    private static final Entrust defaultInstance;
    public static Entrust getDefaultInstance() {
      return defaultInstance;
    }

    public Entrust getDefaultInstanceForType() {
      return defaultInstance;
    }

    private Entrust(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              id_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              userId_ = input.readInt32();
              break;
            }
            case 26: {
              bitField0_ |= 0x00000004;
              title_ = input.readBytes();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              status_ = input.readInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              isDoing_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static com.google.protobuf.Parser<Entrust> PARSER =
        new com.google.protobuf.AbstractParser<Entrust>() {
      public Entrust parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Entrust(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<Entrust> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required int32 id = 1;
    public static final int ID_FIELD_NUMBER = 1;
    private int id_;
    /**
     * <code>required int32 id = 1;</code>
     *
     * <pre>
     * 委托ID
     * </pre>
     */
    public boolean hasId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int32 id = 1;</code>
     *
     * <pre>
     * 委托ID
     * </pre>
     */
    public int getId() {
      return id_;
    }

    // required int32 user_id = 2;
    public static final int USER_ID_FIELD_NUMBER = 2;
    private int userId_;
    /**
     * <code>required int32 user_id = 2;</code>
     *
     * <pre>
     * 用户ID
     * </pre>
     */
    public boolean hasUserId() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required int32 user_id = 2;</code>
     *
     * <pre>
     * 用户ID
     * </pre>
     */
    public int getUserId() {
      return userId_;
    }

    // required string title = 3;
    public static final int TITLE_FIELD_NUMBER = 3;
    private java.lang.Object title_;
    /**
     * <code>required string title = 3;</code>
     *
     * <pre>
     * 委托名
     * </pre>
     */
    public boolean hasTitle() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required string title = 3;</code>
     *
     * <pre>
     * 委托名
     * </pre>
     */
    public java.lang.String getTitle() {
      java.lang.Object ref = title_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          title_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string title = 3;</code>
     *
     * <pre>
     * 委托名
     * </pre>
     */
    public com.google.protobuf.ByteString
        getTitleBytes() {
      java.lang.Object ref = title_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        title_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // required int32 status = 4;
    public static final int STATUS_FIELD_NUMBER = 4;
    private int status_;
    /**
     * <code>required int32 status = 4;</code>
     *
     * <pre>
     * 委托状态 1：已提交 2：待确定 3：已确定 4：未执行 5：未完成 6：已完成
     * </pre>
     */
    public boolean hasStatus() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>required int32 status = 4;</code>
     *
     * <pre>
     * 委托状态 1：已提交 2：待确定 3：已确定 4：未执行 5：未完成 6：已完成
     * </pre>
     */
    public int getStatus() {
      return status_;
    }

    // required int32 is_doing = 5;
    public static final int IS_DOING_FIELD_NUMBER = 5;
    private int isDoing_;
    /**
     * <code>required int32 is_doing = 5;</code>
     *
     * <pre>
     * 是否试验中 0 ,1
     * </pre>
     */
    public boolean hasIsDoing() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>required int32 is_doing = 5;</code>
     *
     * <pre>
     * 是否试验中 0 ,1
     * </pre>
     */
    public int getIsDoing() {
      return isDoing_;
    }

    private void initFields() {
      id_ = 0;
      userId_ = 0;
      title_ = "";
      status_ = 0;
      isDoing_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasUserId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasTitle()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasStatus()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasIsDoing()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, id_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, userId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBytes(3, getTitleBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(4, status_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(5, isDoing_);
      }
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, id_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, userId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, getTitleBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, status_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, isDoing_);
      }
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.slark.pengder.protocol.MessageProtos.Entrust parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.slark.pengder.protocol.MessageProtos.Entrust parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.slark.pengder.protocol.MessageProtos.Entrust parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.slark.pengder.protocol.MessageProtos.Entrust parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.slark.pengder.protocol.MessageProtos.Entrust parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.slark.pengder.protocol.MessageProtos.Entrust parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.slark.pengder.protocol.MessageProtos.Entrust parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.slark.pengder.protocol.MessageProtos.Entrust parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.slark.pengder.protocol.MessageProtos.Entrust parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.slark.pengder.protocol.MessageProtos.Entrust parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.slark.pengder.protocol.MessageProtos.Entrust prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    /**
     * Protobuf type {@code biotech.osla.Entrust}
     *
     * <pre>
     * 委托记录
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.slark.pengder.protocol.MessageProtos.Entrust, Builder>
        implements com.slark.pengder.protocol.MessageProtos.EntrustOrBuilder {
      // Construct using com.slark.pengder.protocol.MessageProtos.Entrust.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        id_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        userId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        title_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        status_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        isDoing_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.slark.pengder.protocol.MessageProtos.Entrust getDefaultInstanceForType() {
        return com.slark.pengder.protocol.MessageProtos.Entrust.getDefaultInstance();
      }

      public com.slark.pengder.protocol.MessageProtos.Entrust build() {
        com.slark.pengder.protocol.MessageProtos.Entrust result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.slark.pengder.protocol.MessageProtos.Entrust buildPartial() {
        com.slark.pengder.protocol.MessageProtos.Entrust result = new com.slark.pengder.protocol.MessageProtos.Entrust(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.id_ = id_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.userId_ = userId_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.title_ = title_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.status_ = status_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.isDoing_ = isDoing_;
        result.bitField0_ = to_bitField0_;
        return result;
      }

      public Builder mergeFrom(com.slark.pengder.protocol.MessageProtos.Entrust other) {
        if (other == com.slark.pengder.protocol.MessageProtos.Entrust.getDefaultInstance()) return this;
        if (other.hasId()) {
          setId(other.getId());
        }
        if (other.hasUserId()) {
          setUserId(other.getUserId());
        }
        if (other.hasTitle()) {
          bitField0_ |= 0x00000004;
          title_ = other.title_;
          
        }
        if (other.hasStatus()) {
          setStatus(other.getStatus());
        }
        if (other.hasIsDoing()) {
          setIsDoing(other.getIsDoing());
        }
        return this;
      }

      public final boolean isInitialized() {
        if (!hasId()) {
          
          return false;
        }
        if (!hasUserId()) {
          
          return false;
        }
        if (!hasTitle()) {
          
          return false;
        }
        if (!hasStatus()) {
          
          return false;
        }
        if (!hasIsDoing()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.slark.pengder.protocol.MessageProtos.Entrust parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.slark.pengder.protocol.MessageProtos.Entrust) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required int32 id = 1;
      private int id_ ;
      /**
       * <code>required int32 id = 1;</code>
       *
       * <pre>
       * 委托ID
       * </pre>
       */
      public boolean hasId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int32 id = 1;</code>
       *
       * <pre>
       * 委托ID
       * </pre>
       */
      public int getId() {
        return id_;
      }
      /**
       * <code>required int32 id = 1;</code>
       *
       * <pre>
       * 委托ID
       * </pre>
       */
      public Builder setId(int value) {
        bitField0_ |= 0x00000001;
        id_ = value;
        
        return this;
      }
      /**
       * <code>required int32 id = 1;</code>
       *
       * <pre>
       * 委托ID
       * </pre>
       */
      public Builder clearId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        id_ = 0;
        
        return this;
      }

      // required int32 user_id = 2;
      private int userId_ ;
      /**
       * <code>required int32 user_id = 2;</code>
       *
       * <pre>
       * 用户ID
       * </pre>
       */
      public boolean hasUserId() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required int32 user_id = 2;</code>
       *
       * <pre>
       * 用户ID
       * </pre>
       */
      public int getUserId() {
        return userId_;
      }
      /**
       * <code>required int32 user_id = 2;</code>
       *
       * <pre>
       * 用户ID
       * </pre>
       */
      public Builder setUserId(int value) {
        bitField0_ |= 0x00000002;
        userId_ = value;
        
        return this;
      }
      /**
       * <code>required int32 user_id = 2;</code>
       *
       * <pre>
       * 用户ID
       * </pre>
       */
      public Builder clearUserId() {
        bitField0_ = (bitField0_ & ~0x00000002);
        userId_ = 0;
        
        return this;
      }

      // required string title = 3;
      private java.lang.Object title_ = "";
      /**
       * <code>required string title = 3;</code>
       *
       * <pre>
       * 委托名
       * </pre>
       */
      public boolean hasTitle() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required string title = 3;</code>
       *
       * <pre>
       * 委托名
       * </pre>
       */
      public java.lang.String getTitle() {
        java.lang.Object ref = title_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          title_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string title = 3;</code>
       *
       * <pre>
       * 委托名
       * </pre>
       */
      public com.google.protobuf.ByteString
          getTitleBytes() {
        java.lang.Object ref = title_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          title_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string title = 3;</code>
       *
       * <pre>
       * 委托名
       * </pre>
       */
      public Builder setTitle(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        title_ = value;
        
        return this;
      }
      /**
       * <code>required string title = 3;</code>
       *
       * <pre>
       * 委托名
       * </pre>
       */
      public Builder clearTitle() {
        bitField0_ = (bitField0_ & ~0x00000004);
        title_ = getDefaultInstance().getTitle();
        
        return this;
      }
      /**
       * <code>required string title = 3;</code>
       *
       * <pre>
       * 委托名
       * </pre>
       */
      public Builder setTitleBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        title_ = value;
        
        return this;
      }

      // required int32 status = 4;
      private int status_ ;
      /**
       * <code>required int32 status = 4;</code>
       *
       * <pre>
       * 委托状态 1：已提交 2：待确定 3：已确定 4：未执行 5：未完成 6：已完成
       * </pre>
       */
      public boolean hasStatus() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>required int32 status = 4;</code>
       *
       * <pre>
       * 委托状态 1：已提交 2：待确定 3：已确定 4：未执行 5：未完成 6：已完成
       * </pre>
       */
      public int getStatus() {
        return status_;
      }
      /**
       * <code>required int32 status = 4;</code>
       *
       * <pre>
       * 委托状态 1：已提交 2：待确定 3：已确定 4：未执行 5：未完成 6：已完成
       * </pre>
       */
      public Builder setStatus(int value) {
        bitField0_ |= 0x00000008;
        status_ = value;
        
        return this;
      }
      /**
       * <code>required int32 status = 4;</code>
       *
       * <pre>
       * 委托状态 1：已提交 2：待确定 3：已确定 4：未执行 5：未完成 6：已完成
       * </pre>
       */
      public Builder clearStatus() {
        bitField0_ = (bitField0_ & ~0x00000008);
        status_ = 0;
        
        return this;
      }

      // required int32 is_doing = 5;
      private int isDoing_ ;
      /**
       * <code>required int32 is_doing = 5;</code>
       *
       * <pre>
       * 是否试验中 0 ,1
       * </pre>
       */
      public boolean hasIsDoing() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>required int32 is_doing = 5;</code>
       *
       * <pre>
       * 是否试验中 0 ,1
       * </pre>
       */
      public int getIsDoing() {
        return isDoing_;
      }
      /**
       * <code>required int32 is_doing = 5;</code>
       *
       * <pre>
       * 是否试验中 0 ,1
       * </pre>
       */
      public Builder setIsDoing(int value) {
        bitField0_ |= 0x00000010;
        isDoing_ = value;
        
        return this;
      }
      /**
       * <code>required int32 is_doing = 5;</code>
       *
       * <pre>
       * 是否试验中 0 ,1
       * </pre>
       */
      public Builder clearIsDoing() {
        bitField0_ = (bitField0_ & ~0x00000010);
        isDoing_ = 0;
        
        return this;
      }

      // @@protoc_insertion_point(builder_scope:biotech.osla.Entrust)
    }

    static {
      defaultInstance = new Entrust(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:biotech.osla.Entrust)
  }

  public interface EntrustListOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {

    // repeated .biotech.osla.Entrust entrust = 1;
    /**
     * <code>repeated .biotech.osla.Entrust entrust = 1;</code>
     */
    java.util.List<com.slark.pengder.protocol.MessageProtos.Entrust> 
        getEntrustList();
    /**
     * <code>repeated .biotech.osla.Entrust entrust = 1;</code>
     */
    com.slark.pengder.protocol.MessageProtos.Entrust getEntrust(int index);
    /**
     * <code>repeated .biotech.osla.Entrust entrust = 1;</code>
     */
    int getEntrustCount();
  }
  /**
   * Protobuf type {@code biotech.osla.EntrustList}
   *
   * <pre>
   * 委托记录列表
   * </pre>
   */
  public static final class EntrustList extends
      com.google.protobuf.GeneratedMessageLite
      implements EntrustListOrBuilder {
    // Use EntrustList.newBuilder() to construct.
    private EntrustList(com.google.protobuf.GeneratedMessageLite.Builder builder) {
      super(builder);

    }
    private EntrustList(boolean noInit) {}

    private static final EntrustList defaultInstance;
    public static EntrustList getDefaultInstance() {
      return defaultInstance;
    }

    public EntrustList getDefaultInstanceForType() {
      return defaultInstance;
    }

    private EntrustList(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                entrust_ = new java.util.ArrayList<com.slark.pengder.protocol.MessageProtos.Entrust>();
                mutable_bitField0_ |= 0x00000001;
              }
              entrust_.add(input.readMessage(com.slark.pengder.protocol.MessageProtos.Entrust.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          entrust_ = java.util.Collections.unmodifiableList(entrust_);
        }
        makeExtensionsImmutable();
      }
    }
    public static com.google.protobuf.Parser<EntrustList> PARSER =
        new com.google.protobuf.AbstractParser<EntrustList>() {
      public EntrustList parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new EntrustList(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<EntrustList> getParserForType() {
      return PARSER;
    }

    // repeated .biotech.osla.Entrust entrust = 1;
    public static final int ENTRUST_FIELD_NUMBER = 1;
    private java.util.List<com.slark.pengder.protocol.MessageProtos.Entrust> entrust_;
    /**
     * <code>repeated .biotech.osla.Entrust entrust = 1;</code>
     */
    public java.util.List<com.slark.pengder.protocol.MessageProtos.Entrust> getEntrustList() {
      return entrust_;
    }
    /**
     * <code>repeated .biotech.osla.Entrust entrust = 1;</code>
     */
    public java.util.List<? extends com.slark.pengder.protocol.MessageProtos.EntrustOrBuilder> 
        getEntrustOrBuilderList() {
      return entrust_;
    }
    /**
     * <code>repeated .biotech.osla.Entrust entrust = 1;</code>
     */
    public int getEntrustCount() {
      return entrust_.size();
    }
    /**
     * <code>repeated .biotech.osla.Entrust entrust = 1;</code>
     */
    public com.slark.pengder.protocol.MessageProtos.Entrust getEntrust(int index) {
      return entrust_.get(index);
    }
    /**
     * <code>repeated .biotech.osla.Entrust entrust = 1;</code>
     */
    public com.slark.pengder.protocol.MessageProtos.EntrustOrBuilder getEntrustOrBuilder(
        int index) {
      return entrust_.get(index);
    }

    private void initFields() {
      entrust_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      for (int i = 0; i < getEntrustCount(); i++) {
        if (!getEntrust(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < entrust_.size(); i++) {
        output.writeMessage(1, entrust_.get(i));
      }
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < entrust_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, entrust_.get(i));
      }
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.slark.pengder.protocol.MessageProtos.EntrustList parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.slark.pengder.protocol.MessageProtos.EntrustList parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.slark.pengder.protocol.MessageProtos.EntrustList parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.slark.pengder.protocol.MessageProtos.EntrustList parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.slark.pengder.protocol.MessageProtos.EntrustList parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.slark.pengder.protocol.MessageProtos.EntrustList parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.slark.pengder.protocol.MessageProtos.EntrustList parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.slark.pengder.protocol.MessageProtos.EntrustList parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.slark.pengder.protocol.MessageProtos.EntrustList parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.slark.pengder.protocol.MessageProtos.EntrustList parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.slark.pengder.protocol.MessageProtos.EntrustList prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    /**
     * Protobuf type {@code biotech.osla.EntrustList}
     *
     * <pre>
     * 委托记录列表
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.slark.pengder.protocol.MessageProtos.EntrustList, Builder>
        implements com.slark.pengder.protocol.MessageProtos.EntrustListOrBuilder {
      // Construct using com.slark.pengder.protocol.MessageProtos.EntrustList.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        entrust_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.slark.pengder.protocol.MessageProtos.EntrustList getDefaultInstanceForType() {
        return com.slark.pengder.protocol.MessageProtos.EntrustList.getDefaultInstance();
      }

      public com.slark.pengder.protocol.MessageProtos.EntrustList build() {
        com.slark.pengder.protocol.MessageProtos.EntrustList result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.slark.pengder.protocol.MessageProtos.EntrustList buildPartial() {
        com.slark.pengder.protocol.MessageProtos.EntrustList result = new com.slark.pengder.protocol.MessageProtos.EntrustList(this);
        int from_bitField0_ = bitField0_;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          entrust_ = java.util.Collections.unmodifiableList(entrust_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.entrust_ = entrust_;
        return result;
      }

      public Builder mergeFrom(com.slark.pengder.protocol.MessageProtos.EntrustList other) {
        if (other == com.slark.pengder.protocol.MessageProtos.EntrustList.getDefaultInstance()) return this;
        if (!other.entrust_.isEmpty()) {
          if (entrust_.isEmpty()) {
            entrust_ = other.entrust_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureEntrustIsMutable();
            entrust_.addAll(other.entrust_);
          }
          
        }
        return this;
      }

      public final boolean isInitialized() {
        for (int i = 0; i < getEntrustCount(); i++) {
          if (!getEntrust(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.slark.pengder.protocol.MessageProtos.EntrustList parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.slark.pengder.protocol.MessageProtos.EntrustList) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // repeated .biotech.osla.Entrust entrust = 1;
      private java.util.List<com.slark.pengder.protocol.MessageProtos.Entrust> entrust_ =
        java.util.Collections.emptyList();
      private void ensureEntrustIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          entrust_ = new java.util.ArrayList<com.slark.pengder.protocol.MessageProtos.Entrust>(entrust_);
          bitField0_ |= 0x00000001;
         }
      }

      /**
       * <code>repeated .biotech.osla.Entrust entrust = 1;</code>
       */
      public java.util.List<com.slark.pengder.protocol.MessageProtos.Entrust> getEntrustList() {
        return java.util.Collections.unmodifiableList(entrust_);
      }
      /**
       * <code>repeated .biotech.osla.Entrust entrust = 1;</code>
       */
      public int getEntrustCount() {
        return entrust_.size();
      }
      /**
       * <code>repeated .biotech.osla.Entrust entrust = 1;</code>
       */
      public com.slark.pengder.protocol.MessageProtos.Entrust getEntrust(int index) {
        return entrust_.get(index);
      }
      /**
       * <code>repeated .biotech.osla.Entrust entrust = 1;</code>
       */
      public Builder setEntrust(
          int index, com.slark.pengder.protocol.MessageProtos.Entrust value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureEntrustIsMutable();
        entrust_.set(index, value);

        return this;
      }
      /**
       * <code>repeated .biotech.osla.Entrust entrust = 1;</code>
       */
      public Builder setEntrust(
          int index, com.slark.pengder.protocol.MessageProtos.Entrust.Builder builderForValue) {
        ensureEntrustIsMutable();
        entrust_.set(index, builderForValue.build());

        return this;
      }
      /**
       * <code>repeated .biotech.osla.Entrust entrust = 1;</code>
       */
      public Builder addEntrust(com.slark.pengder.protocol.MessageProtos.Entrust value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureEntrustIsMutable();
        entrust_.add(value);

        return this;
      }
      /**
       * <code>repeated .biotech.osla.Entrust entrust = 1;</code>
       */
      public Builder addEntrust(
          int index, com.slark.pengder.protocol.MessageProtos.Entrust value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureEntrustIsMutable();
        entrust_.add(index, value);

        return this;
      }
      /**
       * <code>repeated .biotech.osla.Entrust entrust = 1;</code>
       */
      public Builder addEntrust(
          com.slark.pengder.protocol.MessageProtos.Entrust.Builder builderForValue) {
        ensureEntrustIsMutable();
        entrust_.add(builderForValue.build());

        return this;
      }
      /**
       * <code>repeated .biotech.osla.Entrust entrust = 1;</code>
       */
      public Builder addEntrust(
          int index, com.slark.pengder.protocol.MessageProtos.Entrust.Builder builderForValue) {
        ensureEntrustIsMutable();
        entrust_.add(index, builderForValue.build());

        return this;
      }
      /**
       * <code>repeated .biotech.osla.Entrust entrust = 1;</code>
       */
      public Builder addAllEntrust(
          java.lang.Iterable<? extends com.slark.pengder.protocol.MessageProtos.Entrust> values) {
        ensureEntrustIsMutable();
        super.addAll(values, entrust_);

        return this;
      }
      /**
       * <code>repeated .biotech.osla.Entrust entrust = 1;</code>
       */
      public Builder clearEntrust() {
        entrust_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);

        return this;
      }
      /**
       * <code>repeated .biotech.osla.Entrust entrust = 1;</code>
       */
      public Builder removeEntrust(int index) {
        ensureEntrustIsMutable();
        entrust_.remove(index);

        return this;
      }

      // @@protoc_insertion_point(builder_scope:biotech.osla.EntrustList)
    }

    static {
      defaultInstance = new EntrustList(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:biotech.osla.EntrustList)
  }

  public interface EntrustEventOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {

    // required int64 id = 1;
    /**
     * <code>required int64 id = 1;</code>
     *
     * <pre>
     * 事件记录ID
     * </pre>
     */
    boolean hasId();
    /**
     * <code>required int64 id = 1;</code>
     *
     * <pre>
     * 事件记录ID
     * </pre>
     */
    long getId();

    // required int32 entrust_id = 2;
    /**
     * <code>required int32 entrust_id = 2;</code>
     *
     * <pre>
     * 委托id
     * </pre>
     */
    boolean hasEntrustId();
    /**
     * <code>required int32 entrust_id = 2;</code>
     *
     * <pre>
     * 委托id
     * </pre>
     */
    int getEntrustId();

    // required int32 status = 3;
    /**
     * <code>required int32 status = 3;</code>
     *
     * <pre>
     * 委托状态
     * </pre>
     */
    boolean hasStatus();
    /**
     * <code>required int32 status = 3;</code>
     *
     * <pre>
     * 委托状态
     * </pre>
     */
    int getStatus();

    // optional int32 is_doing = 4;
    /**
     * <code>optional int32 is_doing = 4;</code>
     *
     * <pre>
     * 是否试验中
     * </pre>
     */
    boolean hasIsDoing();
    /**
     * <code>optional int32 is_doing = 4;</code>
     *
     * <pre>
     * 是否试验中
     * </pre>
     */
    int getIsDoing();

    // required int64 session_id = 5;
    /**
     * <code>required int64 session_id = 5;</code>
     *
     * <pre>
     * 会话ID
     * </pre>
     */
    boolean hasSessionId();
    /**
     * <code>required int64 session_id = 5;</code>
     *
     * <pre>
     * 会话ID
     * </pre>
     */
    long getSessionId();

    // optional .biotech.osla.Session sessionInfo = 6;
    /**
     * <code>optional .biotech.osla.Session sessionInfo = 6;</code>
     *
     * <pre>
     * 会话信息
     * </pre>
     */
    boolean hasSessionInfo();
    /**
     * <code>optional .biotech.osla.Session sessionInfo = 6;</code>
     *
     * <pre>
     * 会话信息
     * </pre>
     */
    com.slark.pengder.protocol.MessageProtos.Session getSessionInfo();
  }
  /**
   * Protobuf type {@code biotech.osla.EntrustEvent}
   *
   * <pre>
   * 委托事件表
   * </pre>
   */
  public static final class EntrustEvent extends
      com.google.protobuf.GeneratedMessageLite
      implements EntrustEventOrBuilder {
    // Use EntrustEvent.newBuilder() to construct.
    private EntrustEvent(com.google.protobuf.GeneratedMessageLite.Builder builder) {
      super(builder);

    }
    private EntrustEvent(boolean noInit) {}

    private static final EntrustEvent defaultInstance;
    public static EntrustEvent getDefaultInstance() {
      return defaultInstance;
    }

    public EntrustEvent getDefaultInstanceForType() {
      return defaultInstance;
    }

    private EntrustEvent(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              id_ = input.readInt64();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              entrustId_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              status_ = input.readInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              isDoing_ = input.readInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              sessionId_ = input.readInt64();
              break;
            }
            case 50: {
              com.slark.pengder.protocol.MessageProtos.Session.Builder subBuilder = null;
              if (((bitField0_ & 0x00000020) == 0x00000020)) {
                subBuilder = sessionInfo_.toBuilder();
              }
              sessionInfo_ = input.readMessage(com.slark.pengder.protocol.MessageProtos.Session.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(sessionInfo_);
                sessionInfo_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000020;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static com.google.protobuf.Parser<EntrustEvent> PARSER =
        new com.google.protobuf.AbstractParser<EntrustEvent>() {
      public EntrustEvent parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new EntrustEvent(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<EntrustEvent> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required int64 id = 1;
    public static final int ID_FIELD_NUMBER = 1;
    private long id_;
    /**
     * <code>required int64 id = 1;</code>
     *
     * <pre>
     * 事件记录ID
     * </pre>
     */
    public boolean hasId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int64 id = 1;</code>
     *
     * <pre>
     * 事件记录ID
     * </pre>
     */
    public long getId() {
      return id_;
    }

    // required int32 entrust_id = 2;
    public static final int ENTRUST_ID_FIELD_NUMBER = 2;
    private int entrustId_;
    /**
     * <code>required int32 entrust_id = 2;</code>
     *
     * <pre>
     * 委托id
     * </pre>
     */
    public boolean hasEntrustId() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required int32 entrust_id = 2;</code>
     *
     * <pre>
     * 委托id
     * </pre>
     */
    public int getEntrustId() {
      return entrustId_;
    }

    // required int32 status = 3;
    public static final int STATUS_FIELD_NUMBER = 3;
    private int status_;
    /**
     * <code>required int32 status = 3;</code>
     *
     * <pre>
     * 委托状态
     * </pre>
     */
    public boolean hasStatus() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required int32 status = 3;</code>
     *
     * <pre>
     * 委托状态
     * </pre>
     */
    public int getStatus() {
      return status_;
    }

    // optional int32 is_doing = 4;
    public static final int IS_DOING_FIELD_NUMBER = 4;
    private int isDoing_;
    /**
     * <code>optional int32 is_doing = 4;</code>
     *
     * <pre>
     * 是否试验中
     * </pre>
     */
    public boolean hasIsDoing() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional int32 is_doing = 4;</code>
     *
     * <pre>
     * 是否试验中
     * </pre>
     */
    public int getIsDoing() {
      return isDoing_;
    }

    // required int64 session_id = 5;
    public static final int SESSION_ID_FIELD_NUMBER = 5;
    private long sessionId_;
    /**
     * <code>required int64 session_id = 5;</code>
     *
     * <pre>
     * 会话ID
     * </pre>
     */
    public boolean hasSessionId() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>required int64 session_id = 5;</code>
     *
     * <pre>
     * 会话ID
     * </pre>
     */
    public long getSessionId() {
      return sessionId_;
    }

    // optional .biotech.osla.Session sessionInfo = 6;
    public static final int SESSIONINFO_FIELD_NUMBER = 6;
    private com.slark.pengder.protocol.MessageProtos.Session sessionInfo_;
    /**
     * <code>optional .biotech.osla.Session sessionInfo = 6;</code>
     *
     * <pre>
     * 会话信息
     * </pre>
     */
    public boolean hasSessionInfo() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional .biotech.osla.Session sessionInfo = 6;</code>
     *
     * <pre>
     * 会话信息
     * </pre>
     */
    public com.slark.pengder.protocol.MessageProtos.Session getSessionInfo() {
      return sessionInfo_;
    }

    private void initFields() {
      id_ = 0L;
      entrustId_ = 0;
      status_ = 0;
      isDoing_ = 0;
      sessionId_ = 0L;
      sessionInfo_ = com.slark.pengder.protocol.MessageProtos.Session.getDefaultInstance();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasEntrustId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasStatus()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasSessionId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (hasSessionInfo()) {
        if (!getSessionInfo().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt64(1, id_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, entrustId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, status_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(4, isDoing_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt64(5, sessionId_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeMessage(6, sessionInfo_);
      }
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, id_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, entrustId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, status_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, isDoing_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(5, sessionId_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, sessionInfo_);
      }
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.slark.pengder.protocol.MessageProtos.EntrustEvent parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.slark.pengder.protocol.MessageProtos.EntrustEvent parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.slark.pengder.protocol.MessageProtos.EntrustEvent parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.slark.pengder.protocol.MessageProtos.EntrustEvent parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.slark.pengder.protocol.MessageProtos.EntrustEvent parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.slark.pengder.protocol.MessageProtos.EntrustEvent parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.slark.pengder.protocol.MessageProtos.EntrustEvent parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.slark.pengder.protocol.MessageProtos.EntrustEvent parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.slark.pengder.protocol.MessageProtos.EntrustEvent parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.slark.pengder.protocol.MessageProtos.EntrustEvent parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.slark.pengder.protocol.MessageProtos.EntrustEvent prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    /**
     * Protobuf type {@code biotech.osla.EntrustEvent}
     *
     * <pre>
     * 委托事件表
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.slark.pengder.protocol.MessageProtos.EntrustEvent, Builder>
        implements com.slark.pengder.protocol.MessageProtos.EntrustEventOrBuilder {
      // Construct using com.slark.pengder.protocol.MessageProtos.EntrustEvent.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        id_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        entrustId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        status_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        isDoing_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        sessionId_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000010);
        sessionInfo_ = com.slark.pengder.protocol.MessageProtos.Session.getDefaultInstance();
        bitField0_ = (bitField0_ & ~0x00000020);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.slark.pengder.protocol.MessageProtos.EntrustEvent getDefaultInstanceForType() {
        return com.slark.pengder.protocol.MessageProtos.EntrustEvent.getDefaultInstance();
      }

      public com.slark.pengder.protocol.MessageProtos.EntrustEvent build() {
        com.slark.pengder.protocol.MessageProtos.EntrustEvent result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.slark.pengder.protocol.MessageProtos.EntrustEvent buildPartial() {
        com.slark.pengder.protocol.MessageProtos.EntrustEvent result = new com.slark.pengder.protocol.MessageProtos.EntrustEvent(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.id_ = id_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.entrustId_ = entrustId_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.status_ = status_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.isDoing_ = isDoing_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.sessionId_ = sessionId_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.sessionInfo_ = sessionInfo_;
        result.bitField0_ = to_bitField0_;
        return result;
      }

      public Builder mergeFrom(com.slark.pengder.protocol.MessageProtos.EntrustEvent other) {
        if (other == com.slark.pengder.protocol.MessageProtos.EntrustEvent.getDefaultInstance()) return this;
        if (other.hasId()) {
          setId(other.getId());
        }
        if (other.hasEntrustId()) {
          setEntrustId(other.getEntrustId());
        }
        if (other.hasStatus()) {
          setStatus(other.getStatus());
        }
        if (other.hasIsDoing()) {
          setIsDoing(other.getIsDoing());
        }
        if (other.hasSessionId()) {
          setSessionId(other.getSessionId());
        }
        if (other.hasSessionInfo()) {
          mergeSessionInfo(other.getSessionInfo());
        }
        return this;
      }

      public final boolean isInitialized() {
        if (!hasId()) {
          
          return false;
        }
        if (!hasEntrustId()) {
          
          return false;
        }
        if (!hasStatus()) {
          
          return false;
        }
        if (!hasSessionId()) {
          
          return false;
        }
        if (hasSessionInfo()) {
          if (!getSessionInfo().isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.slark.pengder.protocol.MessageProtos.EntrustEvent parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.slark.pengder.protocol.MessageProtos.EntrustEvent) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required int64 id = 1;
      private long id_ ;
      /**
       * <code>required int64 id = 1;</code>
       *
       * <pre>
       * 事件记录ID
       * </pre>
       */
      public boolean hasId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int64 id = 1;</code>
       *
       * <pre>
       * 事件记录ID
       * </pre>
       */
      public long getId() {
        return id_;
      }
      /**
       * <code>required int64 id = 1;</code>
       *
       * <pre>
       * 事件记录ID
       * </pre>
       */
      public Builder setId(long value) {
        bitField0_ |= 0x00000001;
        id_ = value;
        
        return this;
      }
      /**
       * <code>required int64 id = 1;</code>
       *
       * <pre>
       * 事件记录ID
       * </pre>
       */
      public Builder clearId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        id_ = 0L;
        
        return this;
      }

      // required int32 entrust_id = 2;
      private int entrustId_ ;
      /**
       * <code>required int32 entrust_id = 2;</code>
       *
       * <pre>
       * 委托id
       * </pre>
       */
      public boolean hasEntrustId() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required int32 entrust_id = 2;</code>
       *
       * <pre>
       * 委托id
       * </pre>
       */
      public int getEntrustId() {
        return entrustId_;
      }
      /**
       * <code>required int32 entrust_id = 2;</code>
       *
       * <pre>
       * 委托id
       * </pre>
       */
      public Builder setEntrustId(int value) {
        bitField0_ |= 0x00000002;
        entrustId_ = value;
        
        return this;
      }
      /**
       * <code>required int32 entrust_id = 2;</code>
       *
       * <pre>
       * 委托id
       * </pre>
       */
      public Builder clearEntrustId() {
        bitField0_ = (bitField0_ & ~0x00000002);
        entrustId_ = 0;
        
        return this;
      }

      // required int32 status = 3;
      private int status_ ;
      /**
       * <code>required int32 status = 3;</code>
       *
       * <pre>
       * 委托状态
       * </pre>
       */
      public boolean hasStatus() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required int32 status = 3;</code>
       *
       * <pre>
       * 委托状态
       * </pre>
       */
      public int getStatus() {
        return status_;
      }
      /**
       * <code>required int32 status = 3;</code>
       *
       * <pre>
       * 委托状态
       * </pre>
       */
      public Builder setStatus(int value) {
        bitField0_ |= 0x00000004;
        status_ = value;
        
        return this;
      }
      /**
       * <code>required int32 status = 3;</code>
       *
       * <pre>
       * 委托状态
       * </pre>
       */
      public Builder clearStatus() {
        bitField0_ = (bitField0_ & ~0x00000004);
        status_ = 0;
        
        return this;
      }

      // optional int32 is_doing = 4;
      private int isDoing_ ;
      /**
       * <code>optional int32 is_doing = 4;</code>
       *
       * <pre>
       * 是否试验中
       * </pre>
       */
      public boolean hasIsDoing() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional int32 is_doing = 4;</code>
       *
       * <pre>
       * 是否试验中
       * </pre>
       */
      public int getIsDoing() {
        return isDoing_;
      }
      /**
       * <code>optional int32 is_doing = 4;</code>
       *
       * <pre>
       * 是否试验中
       * </pre>
       */
      public Builder setIsDoing(int value) {
        bitField0_ |= 0x00000008;
        isDoing_ = value;
        
        return this;
      }
      /**
       * <code>optional int32 is_doing = 4;</code>
       *
       * <pre>
       * 是否试验中
       * </pre>
       */
      public Builder clearIsDoing() {
        bitField0_ = (bitField0_ & ~0x00000008);
        isDoing_ = 0;
        
        return this;
      }

      // required int64 session_id = 5;
      private long sessionId_ ;
      /**
       * <code>required int64 session_id = 5;</code>
       *
       * <pre>
       * 会话ID
       * </pre>
       */
      public boolean hasSessionId() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>required int64 session_id = 5;</code>
       *
       * <pre>
       * 会话ID
       * </pre>
       */
      public long getSessionId() {
        return sessionId_;
      }
      /**
       * <code>required int64 session_id = 5;</code>
       *
       * <pre>
       * 会话ID
       * </pre>
       */
      public Builder setSessionId(long value) {
        bitField0_ |= 0x00000010;
        sessionId_ = value;
        
        return this;
      }
      /**
       * <code>required int64 session_id = 5;</code>
       *
       * <pre>
       * 会话ID
       * </pre>
       */
      public Builder clearSessionId() {
        bitField0_ = (bitField0_ & ~0x00000010);
        sessionId_ = 0L;
        
        return this;
      }

      // optional .biotech.osla.Session sessionInfo = 6;
      private com.slark.pengder.protocol.MessageProtos.Session sessionInfo_ = com.slark.pengder.protocol.MessageProtos.Session.getDefaultInstance();
      /**
       * <code>optional .biotech.osla.Session sessionInfo = 6;</code>
       *
       * <pre>
       * 会话信息
       * </pre>
       */
      public boolean hasSessionInfo() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional .biotech.osla.Session sessionInfo = 6;</code>
       *
       * <pre>
       * 会话信息
       * </pre>
       */
      public com.slark.pengder.protocol.MessageProtos.Session getSessionInfo() {
        return sessionInfo_;
      }
      /**
       * <code>optional .biotech.osla.Session sessionInfo = 6;</code>
       *
       * <pre>
       * 会话信息
       * </pre>
       */
      public Builder setSessionInfo(com.slark.pengder.protocol.MessageProtos.Session value) {
        if (value == null) {
          throw new NullPointerException();
        }
        sessionInfo_ = value;

        bitField0_ |= 0x00000020;
        return this;
      }
      /**
       * <code>optional .biotech.osla.Session sessionInfo = 6;</code>
       *
       * <pre>
       * 会话信息
       * </pre>
       */
      public Builder setSessionInfo(
          com.slark.pengder.protocol.MessageProtos.Session.Builder builderForValue) {
        sessionInfo_ = builderForValue.build();

        bitField0_ |= 0x00000020;
        return this;
      }
      /**
       * <code>optional .biotech.osla.Session sessionInfo = 6;</code>
       *
       * <pre>
       * 会话信息
       * </pre>
       */
      public Builder mergeSessionInfo(com.slark.pengder.protocol.MessageProtos.Session value) {
        if (((bitField0_ & 0x00000020) == 0x00000020) &&
            sessionInfo_ != com.slark.pengder.protocol.MessageProtos.Session.getDefaultInstance()) {
          sessionInfo_ =
            com.slark.pengder.protocol.MessageProtos.Session.newBuilder(sessionInfo_).mergeFrom(value).buildPartial();
        } else {
          sessionInfo_ = value;
        }

        bitField0_ |= 0x00000020;
        return this;
      }
      /**
       * <code>optional .biotech.osla.Session sessionInfo = 6;</code>
       *
       * <pre>
       * 会话信息
       * </pre>
       */
      public Builder clearSessionInfo() {
        sessionInfo_ = com.slark.pengder.protocol.MessageProtos.Session.getDefaultInstance();

        bitField0_ = (bitField0_ & ~0x00000020);
        return this;
      }

      // @@protoc_insertion_point(builder_scope:biotech.osla.EntrustEvent)
    }

    static {
      defaultInstance = new EntrustEvent(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:biotech.osla.EntrustEvent)
  }

  public interface EntrustEventListOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {

    // repeated .biotech.osla.EntrustEvent entrust_event = 1;
    /**
     * <code>repeated .biotech.osla.EntrustEvent entrust_event = 1;</code>
     */
    java.util.List<com.slark.pengder.protocol.MessageProtos.EntrustEvent> 
        getEntrustEventList();
    /**
     * <code>repeated .biotech.osla.EntrustEvent entrust_event = 1;</code>
     */
    com.slark.pengder.protocol.MessageProtos.EntrustEvent getEntrustEvent(int index);
    /**
     * <code>repeated .biotech.osla.EntrustEvent entrust_event = 1;</code>
     */
    int getEntrustEventCount();
  }
  /**
   * Protobuf type {@code biotech.osla.EntrustEventList}
   *
   * <pre>
   * 委托事件列表
   * </pre>
   */
  public static final class EntrustEventList extends
      com.google.protobuf.GeneratedMessageLite
      implements EntrustEventListOrBuilder {
    // Use EntrustEventList.newBuilder() to construct.
    private EntrustEventList(com.google.protobuf.GeneratedMessageLite.Builder builder) {
      super(builder);

    }
    private EntrustEventList(boolean noInit) {}

    private static final EntrustEventList defaultInstance;
    public static EntrustEventList getDefaultInstance() {
      return defaultInstance;
    }

    public EntrustEventList getDefaultInstanceForType() {
      return defaultInstance;
    }

    private EntrustEventList(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                entrustEvent_ = new java.util.ArrayList<com.slark.pengder.protocol.MessageProtos.EntrustEvent>();
                mutable_bitField0_ |= 0x00000001;
              }
              entrustEvent_.add(input.readMessage(com.slark.pengder.protocol.MessageProtos.EntrustEvent.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          entrustEvent_ = java.util.Collections.unmodifiableList(entrustEvent_);
        }
        makeExtensionsImmutable();
      }
    }
    public static com.google.protobuf.Parser<EntrustEventList> PARSER =
        new com.google.protobuf.AbstractParser<EntrustEventList>() {
      public EntrustEventList parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new EntrustEventList(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<EntrustEventList> getParserForType() {
      return PARSER;
    }

    // repeated .biotech.osla.EntrustEvent entrust_event = 1;
    public static final int ENTRUST_EVENT_FIELD_NUMBER = 1;
    private java.util.List<com.slark.pengder.protocol.MessageProtos.EntrustEvent> entrustEvent_;
    /**
     * <code>repeated .biotech.osla.EntrustEvent entrust_event = 1;</code>
     */
    public java.util.List<com.slark.pengder.protocol.MessageProtos.EntrustEvent> getEntrustEventList() {
      return entrustEvent_;
    }
    /**
     * <code>repeated .biotech.osla.EntrustEvent entrust_event = 1;</code>
     */
    public java.util.List<? extends com.slark.pengder.protocol.MessageProtos.EntrustEventOrBuilder> 
        getEntrustEventOrBuilderList() {
      return entrustEvent_;
    }
    /**
     * <code>repeated .biotech.osla.EntrustEvent entrust_event = 1;</code>
     */
    public int getEntrustEventCount() {
      return entrustEvent_.size();
    }
    /**
     * <code>repeated .biotech.osla.EntrustEvent entrust_event = 1;</code>
     */
    public com.slark.pengder.protocol.MessageProtos.EntrustEvent getEntrustEvent(int index) {
      return entrustEvent_.get(index);
    }
    /**
     * <code>repeated .biotech.osla.EntrustEvent entrust_event = 1;</code>
     */
    public com.slark.pengder.protocol.MessageProtos.EntrustEventOrBuilder getEntrustEventOrBuilder(
        int index) {
      return entrustEvent_.get(index);
    }

    private void initFields() {
      entrustEvent_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      for (int i = 0; i < getEntrustEventCount(); i++) {
        if (!getEntrustEvent(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < entrustEvent_.size(); i++) {
        output.writeMessage(1, entrustEvent_.get(i));
      }
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < entrustEvent_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, entrustEvent_.get(i));
      }
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.slark.pengder.protocol.MessageProtos.EntrustEventList parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.slark.pengder.protocol.MessageProtos.EntrustEventList parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.slark.pengder.protocol.MessageProtos.EntrustEventList parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.slark.pengder.protocol.MessageProtos.EntrustEventList parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.slark.pengder.protocol.MessageProtos.EntrustEventList parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.slark.pengder.protocol.MessageProtos.EntrustEventList parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.slark.pengder.protocol.MessageProtos.EntrustEventList parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.slark.pengder.protocol.MessageProtos.EntrustEventList parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.slark.pengder.protocol.MessageProtos.EntrustEventList parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.slark.pengder.protocol.MessageProtos.EntrustEventList parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.slark.pengder.protocol.MessageProtos.EntrustEventList prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    /**
     * Protobuf type {@code biotech.osla.EntrustEventList}
     *
     * <pre>
     * 委托事件列表
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.slark.pengder.protocol.MessageProtos.EntrustEventList, Builder>
        implements com.slark.pengder.protocol.MessageProtos.EntrustEventListOrBuilder {
      // Construct using com.slark.pengder.protocol.MessageProtos.EntrustEventList.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        entrustEvent_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.slark.pengder.protocol.MessageProtos.EntrustEventList getDefaultInstanceForType() {
        return com.slark.pengder.protocol.MessageProtos.EntrustEventList.getDefaultInstance();
      }

      public com.slark.pengder.protocol.MessageProtos.EntrustEventList build() {
        com.slark.pengder.protocol.MessageProtos.EntrustEventList result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.slark.pengder.protocol.MessageProtos.EntrustEventList buildPartial() {
        com.slark.pengder.protocol.MessageProtos.EntrustEventList result = new com.slark.pengder.protocol.MessageProtos.EntrustEventList(this);
        int from_bitField0_ = bitField0_;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          entrustEvent_ = java.util.Collections.unmodifiableList(entrustEvent_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.entrustEvent_ = entrustEvent_;
        return result;
      }

      public Builder mergeFrom(com.slark.pengder.protocol.MessageProtos.EntrustEventList other) {
        if (other == com.slark.pengder.protocol.MessageProtos.EntrustEventList.getDefaultInstance()) return this;
        if (!other.entrustEvent_.isEmpty()) {
          if (entrustEvent_.isEmpty()) {
            entrustEvent_ = other.entrustEvent_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureEntrustEventIsMutable();
            entrustEvent_.addAll(other.entrustEvent_);
          }
          
        }
        return this;
      }

      public final boolean isInitialized() {
        for (int i = 0; i < getEntrustEventCount(); i++) {
          if (!getEntrustEvent(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.slark.pengder.protocol.MessageProtos.EntrustEventList parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.slark.pengder.protocol.MessageProtos.EntrustEventList) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // repeated .biotech.osla.EntrustEvent entrust_event = 1;
      private java.util.List<com.slark.pengder.protocol.MessageProtos.EntrustEvent> entrustEvent_ =
        java.util.Collections.emptyList();
      private void ensureEntrustEventIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          entrustEvent_ = new java.util.ArrayList<com.slark.pengder.protocol.MessageProtos.EntrustEvent>(entrustEvent_);
          bitField0_ |= 0x00000001;
         }
      }

      /**
       * <code>repeated .biotech.osla.EntrustEvent entrust_event = 1;</code>
       */
      public java.util.List<com.slark.pengder.protocol.MessageProtos.EntrustEvent> getEntrustEventList() {
        return java.util.Collections.unmodifiableList(entrustEvent_);
      }
      /**
       * <code>repeated .biotech.osla.EntrustEvent entrust_event = 1;</code>
       */
      public int getEntrustEventCount() {
        return entrustEvent_.size();
      }
      /**
       * <code>repeated .biotech.osla.EntrustEvent entrust_event = 1;</code>
       */
      public com.slark.pengder.protocol.MessageProtos.EntrustEvent getEntrustEvent(int index) {
        return entrustEvent_.get(index);
      }
      /**
       * <code>repeated .biotech.osla.EntrustEvent entrust_event = 1;</code>
       */
      public Builder setEntrustEvent(
          int index, com.slark.pengder.protocol.MessageProtos.EntrustEvent value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureEntrustEventIsMutable();
        entrustEvent_.set(index, value);

        return this;
      }
      /**
       * <code>repeated .biotech.osla.EntrustEvent entrust_event = 1;</code>
       */
      public Builder setEntrustEvent(
          int index, com.slark.pengder.protocol.MessageProtos.EntrustEvent.Builder builderForValue) {
        ensureEntrustEventIsMutable();
        entrustEvent_.set(index, builderForValue.build());

        return this;
      }
      /**
       * <code>repeated .biotech.osla.EntrustEvent entrust_event = 1;</code>
       */
      public Builder addEntrustEvent(com.slark.pengder.protocol.MessageProtos.EntrustEvent value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureEntrustEventIsMutable();
        entrustEvent_.add(value);

        return this;
      }
      /**
       * <code>repeated .biotech.osla.EntrustEvent entrust_event = 1;</code>
       */
      public Builder addEntrustEvent(
          int index, com.slark.pengder.protocol.MessageProtos.EntrustEvent value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureEntrustEventIsMutable();
        entrustEvent_.add(index, value);

        return this;
      }
      /**
       * <code>repeated .biotech.osla.EntrustEvent entrust_event = 1;</code>
       */
      public Builder addEntrustEvent(
          com.slark.pengder.protocol.MessageProtos.EntrustEvent.Builder builderForValue) {
        ensureEntrustEventIsMutable();
        entrustEvent_.add(builderForValue.build());

        return this;
      }
      /**
       * <code>repeated .biotech.osla.EntrustEvent entrust_event = 1;</code>
       */
      public Builder addEntrustEvent(
          int index, com.slark.pengder.protocol.MessageProtos.EntrustEvent.Builder builderForValue) {
        ensureEntrustEventIsMutable();
        entrustEvent_.add(index, builderForValue.build());

        return this;
      }
      /**
       * <code>repeated .biotech.osla.EntrustEvent entrust_event = 1;</code>
       */
      public Builder addAllEntrustEvent(
          java.lang.Iterable<? extends com.slark.pengder.protocol.MessageProtos.EntrustEvent> values) {
        ensureEntrustEventIsMutable();
        super.addAll(values, entrustEvent_);

        return this;
      }
      /**
       * <code>repeated .biotech.osla.EntrustEvent entrust_event = 1;</code>
       */
      public Builder clearEntrustEvent() {
        entrustEvent_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);

        return this;
      }
      /**
       * <code>repeated .biotech.osla.EntrustEvent entrust_event = 1;</code>
       */
      public Builder removeEntrustEvent(int index) {
        ensureEntrustEventIsMutable();
        entrustEvent_.remove(index);

        return this;
      }

      // @@protoc_insertion_point(builder_scope:biotech.osla.EntrustEventList)
    }

    static {
      defaultInstance = new EntrustEventList(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:biotech.osla.EntrustEventList)
  }

  public interface UpgradeParamsOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {

    // required bool enable = 1;
    /**
     * <code>required bool enable = 1;</code>
     *
     * <pre>
     *有效升级参数；true：升级参数是有效的。false：升级参数是无效的(禁止升级)。
     * </pre>
     */
    boolean hasEnable();
    /**
     * <code>required bool enable = 1;</code>
     *
     * <pre>
     *有效升级参数；true：升级参数是有效的。false：升级参数是无效的(禁止升级)。
     * </pre>
     */
    boolean getEnable();

    // required bool force_upgrade = 2;
    /**
     * <code>required bool force_upgrade = 2;</code>
     *
     * <pre>
     *true:终端即使有未上传的使用记录，也执行更新；false：若终端有未上传使用记录，则不允许更新
     * </pre>
     */
    boolean hasForceUpgrade();
    /**
     * <code>required bool force_upgrade = 2;</code>
     *
     * <pre>
     *true:终端即使有未上传的使用记录，也执行更新；false：若终端有未上传使用记录，则不允许更新
     * </pre>
     */
    boolean getForceUpgrade();

    // required string new_ver = 3;
    /**
     * <code>required string new_ver = 3;</code>
     *
     * <pre>
     *升级包的版本。版本格式必须为x.x.x。其中x为数字，例如：4.0.0
     * </pre>
     */
    boolean hasNewVer();
    /**
     * <code>required string new_ver = 3;</code>
     *
     * <pre>
     *升级包的版本。版本格式必须为x.x.x。其中x为数字，例如：4.0.0
     * </pre>
     */
    java.lang.String getNewVer();
    /**
     * <code>required string new_ver = 3;</code>
     *
     * <pre>
     *升级包的版本。版本格式必须为x.x.x。其中x为数字，例如：4.0.0
     * </pre>
     */
    com.google.protobuf.ByteString
        getNewVerBytes();

    // required string from_ver = 4;
    /**
     * <code>required string from_ver = 4;</code>
     *
     * <pre>
     *可以升级的终端程序最低版本，低于此版本的终端程序不会被升级。版本格式必须为x.x.x。其中x为数字，例如：4.0.0
     * </pre>
     */
    boolean hasFromVer();
    /**
     * <code>required string from_ver = 4;</code>
     *
     * <pre>
     *可以升级的终端程序最低版本，低于此版本的终端程序不会被升级。版本格式必须为x.x.x。其中x为数字，例如：4.0.0
     * </pre>
     */
    java.lang.String getFromVer();
    /**
     * <code>required string from_ver = 4;</code>
     *
     * <pre>
     *可以升级的终端程序最低版本，低于此版本的终端程序不会被升级。版本格式必须为x.x.x。其中x为数字，例如：4.0.0
     * </pre>
     */
    com.google.protobuf.ByteString
        getFromVerBytes();

    // required int32 size = 5;
    /**
     * <code>required int32 size = 5;</code>
     *
     * <pre>
     *升级包大小
     * </pre>
     */
    boolean hasSize();
    /**
     * <code>required int32 size = 5;</code>
     *
     * <pre>
     *升级包大小
     * </pre>
     */
    int getSize();

    // required int32 adler32 = 6;
    /**
     * <code>required int32 adler32 = 6;</code>
     *
     * <pre>
     *adler32校验值
     * </pre>
     */
    boolean hasAdler32();
    /**
     * <code>required int32 adler32 = 6;</code>
     *
     * <pre>
     *adler32校验值
     * </pre>
     */
    int getAdler32();

    // required string url = 7;
    /**
     * <code>required string url = 7;</code>
     *
     * <pre>
     *存放升级包的地址。这个地址必须是HTTP服务器上的地址。
     * </pre>
     */
    boolean hasUrl();
    /**
     * <code>required string url = 7;</code>
     *
     * <pre>
     *存放升级包的地址。这个地址必须是HTTP服务器上的地址。
     * </pre>
     */
    java.lang.String getUrl();
    /**
     * <code>required string url = 7;</code>
     *
     * <pre>
     *存放升级包的地址。这个地址必须是HTTP服务器上的地址。
     * </pre>
     */
    com.google.protobuf.ByteString
        getUrlBytes();

    // optional string reversed1 = 8;
    /**
     * <code>optional string reversed1 = 8;</code>
     *
     * <pre>
     *实际地址为：再这个地址后加上：?token=加密&amp;insid=仪器ID
     *加密由MD5(MAC地址+仪器ID)计算而得，格式为:"AA:BB:CC:DD:EE:FF01234567890"
     * </pre>
     */
    boolean hasReversed1();
    /**
     * <code>optional string reversed1 = 8;</code>
     *
     * <pre>
     *实际地址为：再这个地址后加上：?token=加密&amp;insid=仪器ID
     *加密由MD5(MAC地址+仪器ID)计算而得，格式为:"AA:BB:CC:DD:EE:FF01234567890"
     * </pre>
     */
    java.lang.String getReversed1();
    /**
     * <code>optional string reversed1 = 8;</code>
     *
     * <pre>
     *实际地址为：再这个地址后加上：?token=加密&amp;insid=仪器ID
     *加密由MD5(MAC地址+仪器ID)计算而得，格式为:"AA:BB:CC:DD:EE:FF01234567890"
     * </pre>
     */
    com.google.protobuf.ByteString
        getReversed1Bytes();

    // optional string reversed2 = 9;
    /**
     * <code>optional string reversed2 = 9;</code>
     *
     * <pre>
     *保留2
     * </pre>
     */
    boolean hasReversed2();
    /**
     * <code>optional string reversed2 = 9;</code>
     *
     * <pre>
     *保留2
     * </pre>
     */
    java.lang.String getReversed2();
    /**
     * <code>optional string reversed2 = 9;</code>
     *
     * <pre>
     *保留2
     * </pre>
     */
    com.google.protobuf.ByteString
        getReversed2Bytes();
  }
  /**
   * Protobuf type {@code biotech.osla.UpgradeParams}
   *
   * <pre>
   *升级参数
   * </pre>
   */
  public static final class UpgradeParams extends
      com.google.protobuf.GeneratedMessageLite
      implements UpgradeParamsOrBuilder {
    // Use UpgradeParams.newBuilder() to construct.
    private UpgradeParams(com.google.protobuf.GeneratedMessageLite.Builder builder) {
      super(builder);

    }
    private UpgradeParams(boolean noInit) {}

    private static final UpgradeParams defaultInstance;
    public static UpgradeParams getDefaultInstance() {
      return defaultInstance;
    }

    public UpgradeParams getDefaultInstanceForType() {
      return defaultInstance;
    }

    private UpgradeParams(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              enable_ = input.readBool();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              forceUpgrade_ = input.readBool();
              break;
            }
            case 26: {
              bitField0_ |= 0x00000004;
              newVer_ = input.readBytes();
              break;
            }
            case 34: {
              bitField0_ |= 0x00000008;
              fromVer_ = input.readBytes();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              size_ = input.readInt32();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              adler32_ = input.readInt32();
              break;
            }
            case 58: {
              bitField0_ |= 0x00000040;
              url_ = input.readBytes();
              break;
            }
            case 66: {
              bitField0_ |= 0x00000080;
              reversed1_ = input.readBytes();
              break;
            }
            case 74: {
              bitField0_ |= 0x00000100;
              reversed2_ = input.readBytes();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static com.google.protobuf.Parser<UpgradeParams> PARSER =
        new com.google.protobuf.AbstractParser<UpgradeParams>() {
      public UpgradeParams parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new UpgradeParams(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<UpgradeParams> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required bool enable = 1;
    public static final int ENABLE_FIELD_NUMBER = 1;
    private boolean enable_;
    /**
     * <code>required bool enable = 1;</code>
     *
     * <pre>
     *有效升级参数；true：升级参数是有效的。false：升级参数是无效的(禁止升级)。
     * </pre>
     */
    public boolean hasEnable() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required bool enable = 1;</code>
     *
     * <pre>
     *有效升级参数；true：升级参数是有效的。false：升级参数是无效的(禁止升级)。
     * </pre>
     */
    public boolean getEnable() {
      return enable_;
    }

    // required bool force_upgrade = 2;
    public static final int FORCE_UPGRADE_FIELD_NUMBER = 2;
    private boolean forceUpgrade_;
    /**
     * <code>required bool force_upgrade = 2;</code>
     *
     * <pre>
     *true:终端即使有未上传的使用记录，也执行更新；false：若终端有未上传使用记录，则不允许更新
     * </pre>
     */
    public boolean hasForceUpgrade() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required bool force_upgrade = 2;</code>
     *
     * <pre>
     *true:终端即使有未上传的使用记录，也执行更新；false：若终端有未上传使用记录，则不允许更新
     * </pre>
     */
    public boolean getForceUpgrade() {
      return forceUpgrade_;
    }

    // required string new_ver = 3;
    public static final int NEW_VER_FIELD_NUMBER = 3;
    private java.lang.Object newVer_;
    /**
     * <code>required string new_ver = 3;</code>
     *
     * <pre>
     *升级包的版本。版本格式必须为x.x.x。其中x为数字，例如：4.0.0
     * </pre>
     */
    public boolean hasNewVer() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required string new_ver = 3;</code>
     *
     * <pre>
     *升级包的版本。版本格式必须为x.x.x。其中x为数字，例如：4.0.0
     * </pre>
     */
    public java.lang.String getNewVer() {
      java.lang.Object ref = newVer_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          newVer_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string new_ver = 3;</code>
     *
     * <pre>
     *升级包的版本。版本格式必须为x.x.x。其中x为数字，例如：4.0.0
     * </pre>
     */
    public com.google.protobuf.ByteString
        getNewVerBytes() {
      java.lang.Object ref = newVer_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        newVer_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // required string from_ver = 4;
    public static final int FROM_VER_FIELD_NUMBER = 4;
    private java.lang.Object fromVer_;
    /**
     * <code>required string from_ver = 4;</code>
     *
     * <pre>
     *可以升级的终端程序最低版本，低于此版本的终端程序不会被升级。版本格式必须为x.x.x。其中x为数字，例如：4.0.0
     * </pre>
     */
    public boolean hasFromVer() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>required string from_ver = 4;</code>
     *
     * <pre>
     *可以升级的终端程序最低版本，低于此版本的终端程序不会被升级。版本格式必须为x.x.x。其中x为数字，例如：4.0.0
     * </pre>
     */
    public java.lang.String getFromVer() {
      java.lang.Object ref = fromVer_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          fromVer_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string from_ver = 4;</code>
     *
     * <pre>
     *可以升级的终端程序最低版本，低于此版本的终端程序不会被升级。版本格式必须为x.x.x。其中x为数字，例如：4.0.0
     * </pre>
     */
    public com.google.protobuf.ByteString
        getFromVerBytes() {
      java.lang.Object ref = fromVer_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        fromVer_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // required int32 size = 5;
    public static final int SIZE_FIELD_NUMBER = 5;
    private int size_;
    /**
     * <code>required int32 size = 5;</code>
     *
     * <pre>
     *升级包大小
     * </pre>
     */
    public boolean hasSize() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>required int32 size = 5;</code>
     *
     * <pre>
     *升级包大小
     * </pre>
     */
    public int getSize() {
      return size_;
    }

    // required int32 adler32 = 6;
    public static final int ADLER32_FIELD_NUMBER = 6;
    private int adler32_;
    /**
     * <code>required int32 adler32 = 6;</code>
     *
     * <pre>
     *adler32校验值
     * </pre>
     */
    public boolean hasAdler32() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>required int32 adler32 = 6;</code>
     *
     * <pre>
     *adler32校验值
     * </pre>
     */
    public int getAdler32() {
      return adler32_;
    }

    // required string url = 7;
    public static final int URL_FIELD_NUMBER = 7;
    private java.lang.Object url_;
    /**
     * <code>required string url = 7;</code>
     *
     * <pre>
     *存放升级包的地址。这个地址必须是HTTP服务器上的地址。
     * </pre>
     */
    public boolean hasUrl() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>required string url = 7;</code>
     *
     * <pre>
     *存放升级包的地址。这个地址必须是HTTP服务器上的地址。
     * </pre>
     */
    public java.lang.String getUrl() {
      java.lang.Object ref = url_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          url_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string url = 7;</code>
     *
     * <pre>
     *存放升级包的地址。这个地址必须是HTTP服务器上的地址。
     * </pre>
     */
    public com.google.protobuf.ByteString
        getUrlBytes() {
      java.lang.Object ref = url_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        url_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional string reversed1 = 8;
    public static final int REVERSED1_FIELD_NUMBER = 8;
    private java.lang.Object reversed1_;
    /**
     * <code>optional string reversed1 = 8;</code>
     *
     * <pre>
     *实际地址为：再这个地址后加上：?token=加密&amp;insid=仪器ID
     *加密由MD5(MAC地址+仪器ID)计算而得，格式为:"AA:BB:CC:DD:EE:FF01234567890"
     * </pre>
     */
    public boolean hasReversed1() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional string reversed1 = 8;</code>
     *
     * <pre>
     *实际地址为：再这个地址后加上：?token=加密&amp;insid=仪器ID
     *加密由MD5(MAC地址+仪器ID)计算而得，格式为:"AA:BB:CC:DD:EE:FF01234567890"
     * </pre>
     */
    public java.lang.String getReversed1() {
      java.lang.Object ref = reversed1_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          reversed1_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string reversed1 = 8;</code>
     *
     * <pre>
     *实际地址为：再这个地址后加上：?token=加密&amp;insid=仪器ID
     *加密由MD5(MAC地址+仪器ID)计算而得，格式为:"AA:BB:CC:DD:EE:FF01234567890"
     * </pre>
     */
    public com.google.protobuf.ByteString
        getReversed1Bytes() {
      java.lang.Object ref = reversed1_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        reversed1_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional string reversed2 = 9;
    public static final int REVERSED2_FIELD_NUMBER = 9;
    private java.lang.Object reversed2_;
    /**
     * <code>optional string reversed2 = 9;</code>
     *
     * <pre>
     *保留2
     * </pre>
     */
    public boolean hasReversed2() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional string reversed2 = 9;</code>
     *
     * <pre>
     *保留2
     * </pre>
     */
    public java.lang.String getReversed2() {
      java.lang.Object ref = reversed2_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          reversed2_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string reversed2 = 9;</code>
     *
     * <pre>
     *保留2
     * </pre>
     */
    public com.google.protobuf.ByteString
        getReversed2Bytes() {
      java.lang.Object ref = reversed2_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        reversed2_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private void initFields() {
      enable_ = false;
      forceUpgrade_ = false;
      newVer_ = "";
      fromVer_ = "";
      size_ = 0;
      adler32_ = 0;
      url_ = "";
      reversed1_ = "";
      reversed2_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasEnable()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasForceUpgrade()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasNewVer()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasFromVer()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasSize()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasAdler32()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasUrl()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBool(1, enable_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBool(2, forceUpgrade_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBytes(3, getNewVerBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeBytes(4, getFromVerBytes());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(5, size_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeInt32(6, adler32_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeBytes(7, getUrlBytes());
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeBytes(8, getReversed1Bytes());
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeBytes(9, getReversed2Bytes());
      }
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1, enable_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(2, forceUpgrade_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, getNewVerBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(4, getFromVerBytes());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, size_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, adler32_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(7, getUrlBytes());
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(8, getReversed1Bytes());
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(9, getReversed2Bytes());
      }
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.slark.pengder.protocol.MessageProtos.UpgradeParams parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.slark.pengder.protocol.MessageProtos.UpgradeParams parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.slark.pengder.protocol.MessageProtos.UpgradeParams parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.slark.pengder.protocol.MessageProtos.UpgradeParams parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.slark.pengder.protocol.MessageProtos.UpgradeParams parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.slark.pengder.protocol.MessageProtos.UpgradeParams parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.slark.pengder.protocol.MessageProtos.UpgradeParams parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.slark.pengder.protocol.MessageProtos.UpgradeParams parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.slark.pengder.protocol.MessageProtos.UpgradeParams parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.slark.pengder.protocol.MessageProtos.UpgradeParams parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.slark.pengder.protocol.MessageProtos.UpgradeParams prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    /**
     * Protobuf type {@code biotech.osla.UpgradeParams}
     *
     * <pre>
     *升级参数
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.slark.pengder.protocol.MessageProtos.UpgradeParams, Builder>
        implements com.slark.pengder.protocol.MessageProtos.UpgradeParamsOrBuilder {
      // Construct using com.slark.pengder.protocol.MessageProtos.UpgradeParams.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        enable_ = false;
        bitField0_ = (bitField0_ & ~0x00000001);
        forceUpgrade_ = false;
        bitField0_ = (bitField0_ & ~0x00000002);
        newVer_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        fromVer_ = "";
        bitField0_ = (bitField0_ & ~0x00000008);
        size_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        adler32_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        url_ = "";
        bitField0_ = (bitField0_ & ~0x00000040);
        reversed1_ = "";
        bitField0_ = (bitField0_ & ~0x00000080);
        reversed2_ = "";
        bitField0_ = (bitField0_ & ~0x00000100);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.slark.pengder.protocol.MessageProtos.UpgradeParams getDefaultInstanceForType() {
        return com.slark.pengder.protocol.MessageProtos.UpgradeParams.getDefaultInstance();
      }

      public com.slark.pengder.protocol.MessageProtos.UpgradeParams build() {
        com.slark.pengder.protocol.MessageProtos.UpgradeParams result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.slark.pengder.protocol.MessageProtos.UpgradeParams buildPartial() {
        com.slark.pengder.protocol.MessageProtos.UpgradeParams result = new com.slark.pengder.protocol.MessageProtos.UpgradeParams(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.enable_ = enable_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.forceUpgrade_ = forceUpgrade_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.newVer_ = newVer_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.fromVer_ = fromVer_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.size_ = size_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.adler32_ = adler32_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.url_ = url_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.reversed1_ = reversed1_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        result.reversed2_ = reversed2_;
        result.bitField0_ = to_bitField0_;
        return result;
      }

      public Builder mergeFrom(com.slark.pengder.protocol.MessageProtos.UpgradeParams other) {
        if (other == com.slark.pengder.protocol.MessageProtos.UpgradeParams.getDefaultInstance()) return this;
        if (other.hasEnable()) {
          setEnable(other.getEnable());
        }
        if (other.hasForceUpgrade()) {
          setForceUpgrade(other.getForceUpgrade());
        }
        if (other.hasNewVer()) {
          bitField0_ |= 0x00000004;
          newVer_ = other.newVer_;
          
        }
        if (other.hasFromVer()) {
          bitField0_ |= 0x00000008;
          fromVer_ = other.fromVer_;
          
        }
        if (other.hasSize()) {
          setSize(other.getSize());
        }
        if (other.hasAdler32()) {
          setAdler32(other.getAdler32());
        }
        if (other.hasUrl()) {
          bitField0_ |= 0x00000040;
          url_ = other.url_;
          
        }
        if (other.hasReversed1()) {
          bitField0_ |= 0x00000080;
          reversed1_ = other.reversed1_;
          
        }
        if (other.hasReversed2()) {
          bitField0_ |= 0x00000100;
          reversed2_ = other.reversed2_;
          
        }
        return this;
      }

      public final boolean isInitialized() {
        if (!hasEnable()) {
          
          return false;
        }
        if (!hasForceUpgrade()) {
          
          return false;
        }
        if (!hasNewVer()) {
          
          return false;
        }
        if (!hasFromVer()) {
          
          return false;
        }
        if (!hasSize()) {
          
          return false;
        }
        if (!hasAdler32()) {
          
          return false;
        }
        if (!hasUrl()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.slark.pengder.protocol.MessageProtos.UpgradeParams parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.slark.pengder.protocol.MessageProtos.UpgradeParams) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required bool enable = 1;
      private boolean enable_ ;
      /**
       * <code>required bool enable = 1;</code>
       *
       * <pre>
       *有效升级参数；true：升级参数是有效的。false：升级参数是无效的(禁止升级)。
       * </pre>
       */
      public boolean hasEnable() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required bool enable = 1;</code>
       *
       * <pre>
       *有效升级参数；true：升级参数是有效的。false：升级参数是无效的(禁止升级)。
       * </pre>
       */
      public boolean getEnable() {
        return enable_;
      }
      /**
       * <code>required bool enable = 1;</code>
       *
       * <pre>
       *有效升级参数；true：升级参数是有效的。false：升级参数是无效的(禁止升级)。
       * </pre>
       */
      public Builder setEnable(boolean value) {
        bitField0_ |= 0x00000001;
        enable_ = value;
        
        return this;
      }
      /**
       * <code>required bool enable = 1;</code>
       *
       * <pre>
       *有效升级参数；true：升级参数是有效的。false：升级参数是无效的(禁止升级)。
       * </pre>
       */
      public Builder clearEnable() {
        bitField0_ = (bitField0_ & ~0x00000001);
        enable_ = false;
        
        return this;
      }

      // required bool force_upgrade = 2;
      private boolean forceUpgrade_ ;
      /**
       * <code>required bool force_upgrade = 2;</code>
       *
       * <pre>
       *true:终端即使有未上传的使用记录，也执行更新；false：若终端有未上传使用记录，则不允许更新
       * </pre>
       */
      public boolean hasForceUpgrade() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required bool force_upgrade = 2;</code>
       *
       * <pre>
       *true:终端即使有未上传的使用记录，也执行更新；false：若终端有未上传使用记录，则不允许更新
       * </pre>
       */
      public boolean getForceUpgrade() {
        return forceUpgrade_;
      }
      /**
       * <code>required bool force_upgrade = 2;</code>
       *
       * <pre>
       *true:终端即使有未上传的使用记录，也执行更新；false：若终端有未上传使用记录，则不允许更新
       * </pre>
       */
      public Builder setForceUpgrade(boolean value) {
        bitField0_ |= 0x00000002;
        forceUpgrade_ = value;
        
        return this;
      }
      /**
       * <code>required bool force_upgrade = 2;</code>
       *
       * <pre>
       *true:终端即使有未上传的使用记录，也执行更新；false：若终端有未上传使用记录，则不允许更新
       * </pre>
       */
      public Builder clearForceUpgrade() {
        bitField0_ = (bitField0_ & ~0x00000002);
        forceUpgrade_ = false;
        
        return this;
      }

      // required string new_ver = 3;
      private java.lang.Object newVer_ = "";
      /**
       * <code>required string new_ver = 3;</code>
       *
       * <pre>
       *升级包的版本。版本格式必须为x.x.x。其中x为数字，例如：4.0.0
       * </pre>
       */
      public boolean hasNewVer() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required string new_ver = 3;</code>
       *
       * <pre>
       *升级包的版本。版本格式必须为x.x.x。其中x为数字，例如：4.0.0
       * </pre>
       */
      public java.lang.String getNewVer() {
        java.lang.Object ref = newVer_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          newVer_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string new_ver = 3;</code>
       *
       * <pre>
       *升级包的版本。版本格式必须为x.x.x。其中x为数字，例如：4.0.0
       * </pre>
       */
      public com.google.protobuf.ByteString
          getNewVerBytes() {
        java.lang.Object ref = newVer_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          newVer_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string new_ver = 3;</code>
       *
       * <pre>
       *升级包的版本。版本格式必须为x.x.x。其中x为数字，例如：4.0.0
       * </pre>
       */
      public Builder setNewVer(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        newVer_ = value;
        
        return this;
      }
      /**
       * <code>required string new_ver = 3;</code>
       *
       * <pre>
       *升级包的版本。版本格式必须为x.x.x。其中x为数字，例如：4.0.0
       * </pre>
       */
      public Builder clearNewVer() {
        bitField0_ = (bitField0_ & ~0x00000004);
        newVer_ = getDefaultInstance().getNewVer();
        
        return this;
      }
      /**
       * <code>required string new_ver = 3;</code>
       *
       * <pre>
       *升级包的版本。版本格式必须为x.x.x。其中x为数字，例如：4.0.0
       * </pre>
       */
      public Builder setNewVerBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        newVer_ = value;
        
        return this;
      }

      // required string from_ver = 4;
      private java.lang.Object fromVer_ = "";
      /**
       * <code>required string from_ver = 4;</code>
       *
       * <pre>
       *可以升级的终端程序最低版本，低于此版本的终端程序不会被升级。版本格式必须为x.x.x。其中x为数字，例如：4.0.0
       * </pre>
       */
      public boolean hasFromVer() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>required string from_ver = 4;</code>
       *
       * <pre>
       *可以升级的终端程序最低版本，低于此版本的终端程序不会被升级。版本格式必须为x.x.x。其中x为数字，例如：4.0.0
       * </pre>
       */
      public java.lang.String getFromVer() {
        java.lang.Object ref = fromVer_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          fromVer_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string from_ver = 4;</code>
       *
       * <pre>
       *可以升级的终端程序最低版本，低于此版本的终端程序不会被升级。版本格式必须为x.x.x。其中x为数字，例如：4.0.0
       * </pre>
       */
      public com.google.protobuf.ByteString
          getFromVerBytes() {
        java.lang.Object ref = fromVer_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          fromVer_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string from_ver = 4;</code>
       *
       * <pre>
       *可以升级的终端程序最低版本，低于此版本的终端程序不会被升级。版本格式必须为x.x.x。其中x为数字，例如：4.0.0
       * </pre>
       */
      public Builder setFromVer(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        fromVer_ = value;
        
        return this;
      }
      /**
       * <code>required string from_ver = 4;</code>
       *
       * <pre>
       *可以升级的终端程序最低版本，低于此版本的终端程序不会被升级。版本格式必须为x.x.x。其中x为数字，例如：4.0.0
       * </pre>
       */
      public Builder clearFromVer() {
        bitField0_ = (bitField0_ & ~0x00000008);
        fromVer_ = getDefaultInstance().getFromVer();
        
        return this;
      }
      /**
       * <code>required string from_ver = 4;</code>
       *
       * <pre>
       *可以升级的终端程序最低版本，低于此版本的终端程序不会被升级。版本格式必须为x.x.x。其中x为数字，例如：4.0.0
       * </pre>
       */
      public Builder setFromVerBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        fromVer_ = value;
        
        return this;
      }

      // required int32 size = 5;
      private int size_ ;
      /**
       * <code>required int32 size = 5;</code>
       *
       * <pre>
       *升级包大小
       * </pre>
       */
      public boolean hasSize() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>required int32 size = 5;</code>
       *
       * <pre>
       *升级包大小
       * </pre>
       */
      public int getSize() {
        return size_;
      }
      /**
       * <code>required int32 size = 5;</code>
       *
       * <pre>
       *升级包大小
       * </pre>
       */
      public Builder setSize(int value) {
        bitField0_ |= 0x00000010;
        size_ = value;
        
        return this;
      }
      /**
       * <code>required int32 size = 5;</code>
       *
       * <pre>
       *升级包大小
       * </pre>
       */
      public Builder clearSize() {
        bitField0_ = (bitField0_ & ~0x00000010);
        size_ = 0;
        
        return this;
      }

      // required int32 adler32 = 6;
      private int adler32_ ;
      /**
       * <code>required int32 adler32 = 6;</code>
       *
       * <pre>
       *adler32校验值
       * </pre>
       */
      public boolean hasAdler32() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>required int32 adler32 = 6;</code>
       *
       * <pre>
       *adler32校验值
       * </pre>
       */
      public int getAdler32() {
        return adler32_;
      }
      /**
       * <code>required int32 adler32 = 6;</code>
       *
       * <pre>
       *adler32校验值
       * </pre>
       */
      public Builder setAdler32(int value) {
        bitField0_ |= 0x00000020;
        adler32_ = value;
        
        return this;
      }
      /**
       * <code>required int32 adler32 = 6;</code>
       *
       * <pre>
       *adler32校验值
       * </pre>
       */
      public Builder clearAdler32() {
        bitField0_ = (bitField0_ & ~0x00000020);
        adler32_ = 0;
        
        return this;
      }

      // required string url = 7;
      private java.lang.Object url_ = "";
      /**
       * <code>required string url = 7;</code>
       *
       * <pre>
       *存放升级包的地址。这个地址必须是HTTP服务器上的地址。
       * </pre>
       */
      public boolean hasUrl() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>required string url = 7;</code>
       *
       * <pre>
       *存放升级包的地址。这个地址必须是HTTP服务器上的地址。
       * </pre>
       */
      public java.lang.String getUrl() {
        java.lang.Object ref = url_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          url_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string url = 7;</code>
       *
       * <pre>
       *存放升级包的地址。这个地址必须是HTTP服务器上的地址。
       * </pre>
       */
      public com.google.protobuf.ByteString
          getUrlBytes() {
        java.lang.Object ref = url_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          url_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string url = 7;</code>
       *
       * <pre>
       *存放升级包的地址。这个地址必须是HTTP服务器上的地址。
       * </pre>
       */
      public Builder setUrl(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000040;
        url_ = value;
        
        return this;
      }
      /**
       * <code>required string url = 7;</code>
       *
       * <pre>
       *存放升级包的地址。这个地址必须是HTTP服务器上的地址。
       * </pre>
       */
      public Builder clearUrl() {
        bitField0_ = (bitField0_ & ~0x00000040);
        url_ = getDefaultInstance().getUrl();
        
        return this;
      }
      /**
       * <code>required string url = 7;</code>
       *
       * <pre>
       *存放升级包的地址。这个地址必须是HTTP服务器上的地址。
       * </pre>
       */
      public Builder setUrlBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000040;
        url_ = value;
        
        return this;
      }

      // optional string reversed1 = 8;
      private java.lang.Object reversed1_ = "";
      /**
       * <code>optional string reversed1 = 8;</code>
       *
       * <pre>
       *实际地址为：再这个地址后加上：?token=加密&amp;insid=仪器ID
       *加密由MD5(MAC地址+仪器ID)计算而得，格式为:"AA:BB:CC:DD:EE:FF01234567890"
       * </pre>
       */
      public boolean hasReversed1() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional string reversed1 = 8;</code>
       *
       * <pre>
       *实际地址为：再这个地址后加上：?token=加密&amp;insid=仪器ID
       *加密由MD5(MAC地址+仪器ID)计算而得，格式为:"AA:BB:CC:DD:EE:FF01234567890"
       * </pre>
       */
      public java.lang.String getReversed1() {
        java.lang.Object ref = reversed1_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          reversed1_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string reversed1 = 8;</code>
       *
       * <pre>
       *实际地址为：再这个地址后加上：?token=加密&amp;insid=仪器ID
       *加密由MD5(MAC地址+仪器ID)计算而得，格式为:"AA:BB:CC:DD:EE:FF01234567890"
       * </pre>
       */
      public com.google.protobuf.ByteString
          getReversed1Bytes() {
        java.lang.Object ref = reversed1_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          reversed1_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string reversed1 = 8;</code>
       *
       * <pre>
       *实际地址为：再这个地址后加上：?token=加密&amp;insid=仪器ID
       *加密由MD5(MAC地址+仪器ID)计算而得，格式为:"AA:BB:CC:DD:EE:FF01234567890"
       * </pre>
       */
      public Builder setReversed1(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000080;
        reversed1_ = value;
        
        return this;
      }
      /**
       * <code>optional string reversed1 = 8;</code>
       *
       * <pre>
       *实际地址为：再这个地址后加上：?token=加密&amp;insid=仪器ID
       *加密由MD5(MAC地址+仪器ID)计算而得，格式为:"AA:BB:CC:DD:EE:FF01234567890"
       * </pre>
       */
      public Builder clearReversed1() {
        bitField0_ = (bitField0_ & ~0x00000080);
        reversed1_ = getDefaultInstance().getReversed1();
        
        return this;
      }
      /**
       * <code>optional string reversed1 = 8;</code>
       *
       * <pre>
       *实际地址为：再这个地址后加上：?token=加密&amp;insid=仪器ID
       *加密由MD5(MAC地址+仪器ID)计算而得，格式为:"AA:BB:CC:DD:EE:FF01234567890"
       * </pre>
       */
      public Builder setReversed1Bytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000080;
        reversed1_ = value;
        
        return this;
      }

      // optional string reversed2 = 9;
      private java.lang.Object reversed2_ = "";
      /**
       * <code>optional string reversed2 = 9;</code>
       *
       * <pre>
       *保留2
       * </pre>
       */
      public boolean hasReversed2() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional string reversed2 = 9;</code>
       *
       * <pre>
       *保留2
       * </pre>
       */
      public java.lang.String getReversed2() {
        java.lang.Object ref = reversed2_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          reversed2_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string reversed2 = 9;</code>
       *
       * <pre>
       *保留2
       * </pre>
       */
      public com.google.protobuf.ByteString
          getReversed2Bytes() {
        java.lang.Object ref = reversed2_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          reversed2_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string reversed2 = 9;</code>
       *
       * <pre>
       *保留2
       * </pre>
       */
      public Builder setReversed2(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000100;
        reversed2_ = value;
        
        return this;
      }
      /**
       * <code>optional string reversed2 = 9;</code>
       *
       * <pre>
       *保留2
       * </pre>
       */
      public Builder clearReversed2() {
        bitField0_ = (bitField0_ & ~0x00000100);
        reversed2_ = getDefaultInstance().getReversed2();
        
        return this;
      }
      /**
       * <code>optional string reversed2 = 9;</code>
       *
       * <pre>
       *保留2
       * </pre>
       */
      public Builder setReversed2Bytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000100;
        reversed2_ = value;
        
        return this;
      }

      // @@protoc_insertion_point(builder_scope:biotech.osla.UpgradeParams)
    }

    static {
      defaultInstance = new UpgradeParams(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:biotech.osla.UpgradeParams)
  }

  public interface UpgradePlanOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {

    // required int32 type = 1;
    /**
     * <code>required int32 type = 1;</code>
     *
     * <pre>
     *0：取消计划；1：每隔“更新检查间隔时间x”检查，能否下载和更新。
     * </pre>
     */
    boolean hasType();
    /**
     * <code>required int32 type = 1;</code>
     *
     * <pre>
     *0：取消计划；1：每隔“更新检查间隔时间x”检查，能否下载和更新。
     * </pre>
     */
    int getType();

    // required int64 start_date = 2;
    /**
     * <code>required int64 start_date = 2;</code>
     *
     * <pre>
     *实际检查间隔时间是：更新检查间隔时间x+(仪器ID%120)
     *2：立即执行升级
     * </pre>
     */
    boolean hasStartDate();
    /**
     * <code>required int64 start_date = 2;</code>
     *
     * <pre>
     *实际检查间隔时间是：更新检查间隔时间x+(仪器ID%120)
     *2：立即执行升级
     * </pre>
     */
    long getStartDate();

    // required int32 interval = 3;
    /**
     * <code>required int32 interval = 3;</code>
     *
     * <pre>
     *升级检查间隔时间x。单位：分钟。例如：60，表示每小时检查能否升级
     * </pre>
     */
    boolean hasInterval();
    /**
     * <code>required int32 interval = 3;</code>
     *
     * <pre>
     *升级检查间隔时间x。单位：分钟。例如：60，表示每小时检查能否升级
     * </pre>
     */
    int getInterval();

    // optional string reversed1 = 4;
    /**
     * <code>optional string reversed1 = 4;</code>
     *
     * <pre>
     *保留1
     * </pre>
     */
    boolean hasReversed1();
    /**
     * <code>optional string reversed1 = 4;</code>
     *
     * <pre>
     *保留1
     * </pre>
     */
    java.lang.String getReversed1();
    /**
     * <code>optional string reversed1 = 4;</code>
     *
     * <pre>
     *保留1
     * </pre>
     */
    com.google.protobuf.ByteString
        getReversed1Bytes();
  }
  /**
   * Protobuf type {@code biotech.osla.UpgradePlan}
   *
   * <pre>
   *升级计划
   * </pre>
   */
  public static final class UpgradePlan extends
      com.google.protobuf.GeneratedMessageLite
      implements UpgradePlanOrBuilder {
    // Use UpgradePlan.newBuilder() to construct.
    private UpgradePlan(com.google.protobuf.GeneratedMessageLite.Builder builder) {
      super(builder);

    }
    private UpgradePlan(boolean noInit) {}

    private static final UpgradePlan defaultInstance;
    public static UpgradePlan getDefaultInstance() {
      return defaultInstance;
    }

    public UpgradePlan getDefaultInstanceForType() {
      return defaultInstance;
    }

    private UpgradePlan(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              type_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              startDate_ = input.readInt64();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              interval_ = input.readInt32();
              break;
            }
            case 34: {
              bitField0_ |= 0x00000008;
              reversed1_ = input.readBytes();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static com.google.protobuf.Parser<UpgradePlan> PARSER =
        new com.google.protobuf.AbstractParser<UpgradePlan>() {
      public UpgradePlan parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new UpgradePlan(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<UpgradePlan> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required int32 type = 1;
    public static final int TYPE_FIELD_NUMBER = 1;
    private int type_;
    /**
     * <code>required int32 type = 1;</code>
     *
     * <pre>
     *0：取消计划；1：每隔“更新检查间隔时间x”检查，能否下载和更新。
     * </pre>
     */
    public boolean hasType() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int32 type = 1;</code>
     *
     * <pre>
     *0：取消计划；1：每隔“更新检查间隔时间x”检查，能否下载和更新。
     * </pre>
     */
    public int getType() {
      return type_;
    }

    // required int64 start_date = 2;
    public static final int START_DATE_FIELD_NUMBER = 2;
    private long startDate_;
    /**
     * <code>required int64 start_date = 2;</code>
     *
     * <pre>
     *实际检查间隔时间是：更新检查间隔时间x+(仪器ID%120)
     *2：立即执行升级
     * </pre>
     */
    public boolean hasStartDate() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required int64 start_date = 2;</code>
     *
     * <pre>
     *实际检查间隔时间是：更新检查间隔时间x+(仪器ID%120)
     *2：立即执行升级
     * </pre>
     */
    public long getStartDate() {
      return startDate_;
    }

    // required int32 interval = 3;
    public static final int INTERVAL_FIELD_NUMBER = 3;
    private int interval_;
    /**
     * <code>required int32 interval = 3;</code>
     *
     * <pre>
     *升级检查间隔时间x。单位：分钟。例如：60，表示每小时检查能否升级
     * </pre>
     */
    public boolean hasInterval() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required int32 interval = 3;</code>
     *
     * <pre>
     *升级检查间隔时间x。单位：分钟。例如：60，表示每小时检查能否升级
     * </pre>
     */
    public int getInterval() {
      return interval_;
    }

    // optional string reversed1 = 4;
    public static final int REVERSED1_FIELD_NUMBER = 4;
    private java.lang.Object reversed1_;
    /**
     * <code>optional string reversed1 = 4;</code>
     *
     * <pre>
     *保留1
     * </pre>
     */
    public boolean hasReversed1() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional string reversed1 = 4;</code>
     *
     * <pre>
     *保留1
     * </pre>
     */
    public java.lang.String getReversed1() {
      java.lang.Object ref = reversed1_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          reversed1_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string reversed1 = 4;</code>
     *
     * <pre>
     *保留1
     * </pre>
     */
    public com.google.protobuf.ByteString
        getReversed1Bytes() {
      java.lang.Object ref = reversed1_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        reversed1_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private void initFields() {
      type_ = 0;
      startDate_ = 0L;
      interval_ = 0;
      reversed1_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasType()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasStartDate()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasInterval()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, type_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt64(2, startDate_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, interval_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeBytes(4, getReversed1Bytes());
      }
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, type_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(2, startDate_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, interval_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(4, getReversed1Bytes());
      }
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.slark.pengder.protocol.MessageProtos.UpgradePlan parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.slark.pengder.protocol.MessageProtos.UpgradePlan parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.slark.pengder.protocol.MessageProtos.UpgradePlan parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.slark.pengder.protocol.MessageProtos.UpgradePlan parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.slark.pengder.protocol.MessageProtos.UpgradePlan parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.slark.pengder.protocol.MessageProtos.UpgradePlan parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.slark.pengder.protocol.MessageProtos.UpgradePlan parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.slark.pengder.protocol.MessageProtos.UpgradePlan parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.slark.pengder.protocol.MessageProtos.UpgradePlan parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.slark.pengder.protocol.MessageProtos.UpgradePlan parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.slark.pengder.protocol.MessageProtos.UpgradePlan prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    /**
     * Protobuf type {@code biotech.osla.UpgradePlan}
     *
     * <pre>
     *升级计划
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.slark.pengder.protocol.MessageProtos.UpgradePlan, Builder>
        implements com.slark.pengder.protocol.MessageProtos.UpgradePlanOrBuilder {
      // Construct using com.slark.pengder.protocol.MessageProtos.UpgradePlan.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        type_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        startDate_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000002);
        interval_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        reversed1_ = "";
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.slark.pengder.protocol.MessageProtos.UpgradePlan getDefaultInstanceForType() {
        return com.slark.pengder.protocol.MessageProtos.UpgradePlan.getDefaultInstance();
      }

      public com.slark.pengder.protocol.MessageProtos.UpgradePlan build() {
        com.slark.pengder.protocol.MessageProtos.UpgradePlan result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.slark.pengder.protocol.MessageProtos.UpgradePlan buildPartial() {
        com.slark.pengder.protocol.MessageProtos.UpgradePlan result = new com.slark.pengder.protocol.MessageProtos.UpgradePlan(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.type_ = type_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.startDate_ = startDate_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.interval_ = interval_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.reversed1_ = reversed1_;
        result.bitField0_ = to_bitField0_;
        return result;
      }

      public Builder mergeFrom(com.slark.pengder.protocol.MessageProtos.UpgradePlan other) {
        if (other == com.slark.pengder.protocol.MessageProtos.UpgradePlan.getDefaultInstance()) return this;
        if (other.hasType()) {
          setType(other.getType());
        }
        if (other.hasStartDate()) {
          setStartDate(other.getStartDate());
        }
        if (other.hasInterval()) {
          setInterval(other.getInterval());
        }
        if (other.hasReversed1()) {
          bitField0_ |= 0x00000008;
          reversed1_ = other.reversed1_;
          
        }
        return this;
      }

      public final boolean isInitialized() {
        if (!hasType()) {
          
          return false;
        }
        if (!hasStartDate()) {
          
          return false;
        }
        if (!hasInterval()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.slark.pengder.protocol.MessageProtos.UpgradePlan parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.slark.pengder.protocol.MessageProtos.UpgradePlan) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required int32 type = 1;
      private int type_ ;
      /**
       * <code>required int32 type = 1;</code>
       *
       * <pre>
       *0：取消计划；1：每隔“更新检查间隔时间x”检查，能否下载和更新。
       * </pre>
       */
      public boolean hasType() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int32 type = 1;</code>
       *
       * <pre>
       *0：取消计划；1：每隔“更新检查间隔时间x”检查，能否下载和更新。
       * </pre>
       */
      public int getType() {
        return type_;
      }
      /**
       * <code>required int32 type = 1;</code>
       *
       * <pre>
       *0：取消计划；1：每隔“更新检查间隔时间x”检查，能否下载和更新。
       * </pre>
       */
      public Builder setType(int value) {
        bitField0_ |= 0x00000001;
        type_ = value;
        
        return this;
      }
      /**
       * <code>required int32 type = 1;</code>
       *
       * <pre>
       *0：取消计划；1：每隔“更新检查间隔时间x”检查，能否下载和更新。
       * </pre>
       */
      public Builder clearType() {
        bitField0_ = (bitField0_ & ~0x00000001);
        type_ = 0;
        
        return this;
      }

      // required int64 start_date = 2;
      private long startDate_ ;
      /**
       * <code>required int64 start_date = 2;</code>
       *
       * <pre>
       *实际检查间隔时间是：更新检查间隔时间x+(仪器ID%120)
       *2：立即执行升级
       * </pre>
       */
      public boolean hasStartDate() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required int64 start_date = 2;</code>
       *
       * <pre>
       *实际检查间隔时间是：更新检查间隔时间x+(仪器ID%120)
       *2：立即执行升级
       * </pre>
       */
      public long getStartDate() {
        return startDate_;
      }
      /**
       * <code>required int64 start_date = 2;</code>
       *
       * <pre>
       *实际检查间隔时间是：更新检查间隔时间x+(仪器ID%120)
       *2：立即执行升级
       * </pre>
       */
      public Builder setStartDate(long value) {
        bitField0_ |= 0x00000002;
        startDate_ = value;
        
        return this;
      }
      /**
       * <code>required int64 start_date = 2;</code>
       *
       * <pre>
       *实际检查间隔时间是：更新检查间隔时间x+(仪器ID%120)
       *2：立即执行升级
       * </pre>
       */
      public Builder clearStartDate() {
        bitField0_ = (bitField0_ & ~0x00000002);
        startDate_ = 0L;
        
        return this;
      }

      // required int32 interval = 3;
      private int interval_ ;
      /**
       * <code>required int32 interval = 3;</code>
       *
       * <pre>
       *升级检查间隔时间x。单位：分钟。例如：60，表示每小时检查能否升级
       * </pre>
       */
      public boolean hasInterval() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required int32 interval = 3;</code>
       *
       * <pre>
       *升级检查间隔时间x。单位：分钟。例如：60，表示每小时检查能否升级
       * </pre>
       */
      public int getInterval() {
        return interval_;
      }
      /**
       * <code>required int32 interval = 3;</code>
       *
       * <pre>
       *升级检查间隔时间x。单位：分钟。例如：60，表示每小时检查能否升级
       * </pre>
       */
      public Builder setInterval(int value) {
        bitField0_ |= 0x00000004;
        interval_ = value;
        
        return this;
      }
      /**
       * <code>required int32 interval = 3;</code>
       *
       * <pre>
       *升级检查间隔时间x。单位：分钟。例如：60，表示每小时检查能否升级
       * </pre>
       */
      public Builder clearInterval() {
        bitField0_ = (bitField0_ & ~0x00000004);
        interval_ = 0;
        
        return this;
      }

      // optional string reversed1 = 4;
      private java.lang.Object reversed1_ = "";
      /**
       * <code>optional string reversed1 = 4;</code>
       *
       * <pre>
       *保留1
       * </pre>
       */
      public boolean hasReversed1() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional string reversed1 = 4;</code>
       *
       * <pre>
       *保留1
       * </pre>
       */
      public java.lang.String getReversed1() {
        java.lang.Object ref = reversed1_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          reversed1_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string reversed1 = 4;</code>
       *
       * <pre>
       *保留1
       * </pre>
       */
      public com.google.protobuf.ByteString
          getReversed1Bytes() {
        java.lang.Object ref = reversed1_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          reversed1_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string reversed1 = 4;</code>
       *
       * <pre>
       *保留1
       * </pre>
       */
      public Builder setReversed1(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        reversed1_ = value;
        
        return this;
      }
      /**
       * <code>optional string reversed1 = 4;</code>
       *
       * <pre>
       *保留1
       * </pre>
       */
      public Builder clearReversed1() {
        bitField0_ = (bitField0_ & ~0x00000008);
        reversed1_ = getDefaultInstance().getReversed1();
        
        return this;
      }
      /**
       * <code>optional string reversed1 = 4;</code>
       *
       * <pre>
       *保留1
       * </pre>
       */
      public Builder setReversed1Bytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        reversed1_ = value;
        
        return this;
      }

      // @@protoc_insertion_point(builder_scope:biotech.osla.UpgradePlan)
    }

    static {
      defaultInstance = new UpgradePlan(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:biotech.osla.UpgradePlan)
  }


  static {
  }

  // @@protoc_insertion_point(outer_class_scope)
}
